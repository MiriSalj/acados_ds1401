C:/acados/CMakeLists.txt(35):  cmake_minimum_required(VERSION 3.1 )
C:/acados/CMakeLists.txt(37):  if(CMAKE_MAKE_PROGRAM )
C:/acados/CMakeLists.txt(42):  project(acados LANGUAGES C CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(34):  if(CMAKE_HOST_UNIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(74):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(75):  if(CMAKE_HOST_WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(76):  if(DEFINED ENV{PROCESSOR_ARCHITEW6432} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(78):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(79):  set(CMAKE_HOST_SYSTEM_PROCESSOR $ENV{PROCESSOR_ARCHITECTURE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(88):  if(CMAKE_TOOLCHAIN_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(90):  include(${CMAKE_BINARY_DIR}/${CMAKE_TOOLCHAIN_FILE} OPTIONAL RESULT_VARIABLE _INCLUDED_TOOLCHAIN_FILE )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(1):  SET(CMAKE_SYSTEM_NAME dSpaceDS1401 )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(2):  list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR} )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(3):  SET(CMAKE_SYSTEM_PROCESSOR ppc )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(7):  file(TO_CMAKE_PATH C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320 DSPACE_TOOLS )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(10):  set(DSPACE_RTLIB C:/dSPACERCPHIL2017-B/DS1401/RTLib )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(12):  set(DSPACE_PPCTOOLS ${DSPACE_TOOLS}/Compiler/PPCTools )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(14):  find_program(CMAKE_C_COMPILER NAMES ${DSPACE_PPCTOOLS}/bin/mccppc.exe )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(15):  find_program(CMAKE_CXX_COMPILER NAMES ${DSPACE_PPCTOOLS}/bin/mccppc.exe )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(16):  find_program(CMAKE_ASM_COMPILER NAMES ${DSPACE_PPCTOOLS}/bin/asmppc.exe )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(17):  find_program(CMAKE_AR NAMES ${DSPACE_PPCTOOLS}/bin/libppc.exe )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(20):  find_program(CMAKE_LINKER NAMES ${DSPACE_PPCTOOLS}/bin/lnkppc.exe )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(24):  set(CMAKE_RANLIB : )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(26):  find_program(CMAKE_MAKE_PROGRAM NAMES C:/dSPACERCPHIL2017-B/Exe/DSMAKE.exe )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(28):  SET(CMAKE_FIND_ROOT_PATH ${DSPACE_PPCTOOLS} )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(29):  SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(30):  SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(31):  SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(38):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -H -J{DSPACE_RTLIB} -I${DSPACE_PPCTOOLS}/inc -D_DS1401 -p603e )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(39):  set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} -H -J{DSPACE_RTLIB} -I${DSPACE_PPCTOOLS}/inc -D_DS1401 -p603e )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(41):  set(CMAKE_AR_FLAGS -Q s -V CACHE STRING AR FLAGS )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(42):  set(CMAKE_C_ARCHIVE_CREATE <CMAKE_AR> -Qs -V <OBJECTS> -o <TARGET> )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(43):  set(CMAKE_C_ARCHIVE_APPEND <CMAKE_AR> -V <OBJECTS> -o <TARGET> )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(44):  set(CMAKE_CXX_ARCHIVE_CREATE <CMAKE_AR> -Qs -V <OBJECTS> -o <TARGET> )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(45):  set(CMAKE_CXX_ARCHIVE_APPEND <CMAKE_AR> -V <OBJECTS> -o <TARGET> )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(50):  set(BLASFEO_TARGET GENERIC CACHE STRING BLASFEO Target architecture )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(51):  set(HPIPM_TARGET GENERIC CACHE STRING HPIPM Target architecture )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(52):  set(BUILD_SHARED_LIBS OFF CACHE STRING Build shared libraries )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(53):  set(BLASFEO_EXAMPLES OFF CACHE BOOL Examples disabled )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(54):  set(EXT_DEP OFF CACHE BOOL Compile external dependencies in BLASFEO )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(55):  set(ACADOS_INSTALL_DIR install CACHE PATH Installation path to ACADOS_INSTALL_DIR )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(58):  add_definitions(-DWINDOWS_SKIP_PTR_ALIGNMENT_CHECK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(91):  if(NOT _INCLUDED_TOOLCHAIN_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(96):  if(_INCLUDED_TOOLCHAIN_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(97):  set(CMAKE_TOOLCHAIN_FILE ${_INCLUDED_TOOLCHAIN_FILE} CACHE FILEPATH The CMake toolchain file FORCE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(108):  if(CMAKE_SYSTEM_NAME )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(109):  if(NOT DEFINED CMAKE_CROSSCOMPILING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(110):  set(CMAKE_CROSSCOMPILING TRUE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(112):  set(PRESET_CMAKE_SYSTEM_NAME TRUE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(129):  include(Platform/${CMAKE_SYSTEM_NAME}-Determine OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(131):  macro(ADJUST_CMAKE_SYSTEM_VARIABLES _PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(160):  ADJUST_CMAKE_SYSTEM_VARIABLES(CMAKE_SYSTEM )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(132):  if(NOT CMAKE_SYSTEM_NAME )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(137):  if(CMAKE_SYSTEM_NAME MATCHES BSD.OS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(142):  if(CMAKE_SYSTEM_NAME MATCHES kFreeBSD )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(147):  if(CMAKE_SYSTEM_NAME MATCHES CYGWIN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(152):  set(CMAKE_SYSTEM ${CMAKE_SYSTEM_NAME} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(154):  if(CMAKE_SYSTEM_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(161):  ADJUST_CMAKE_SYSTEM_VARIABLES(CMAKE_HOST_SYSTEM )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(132):  if(NOT CMAKE_HOST_SYSTEM_NAME )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(137):  if(CMAKE_HOST_SYSTEM_NAME MATCHES BSD.OS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(142):  if(CMAKE_HOST_SYSTEM_NAME MATCHES kFreeBSD )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(147):  if(CMAKE_HOST_SYSTEM_NAME MATCHES CYGWIN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(152):  set(CMAKE_HOST_SYSTEM ${CMAKE_HOST_SYSTEM_NAME} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(154):  if(CMAKE_HOST_SYSTEM_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(155):  set(CMAKE_HOST_SYSTEM ${CMAKE_HOST_SYSTEM}-${CMAKE_HOST_SYSTEM_VERSION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(165):  if(CMAKE_BINARY_DIR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(167):  if(PRESET_CMAKE_SYSTEM_NAME )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(168):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log The target system is: ${CMAKE_SYSTEM_NAME} - ${CMAKE_SYSTEM_VERSION} - ${CMAKE_SYSTEM_PROCESSOR}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(170):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log The host system is: ${CMAKE_HOST_SYSTEM_NAME} - ${CMAKE_HOST_SYSTEM_VERSION} - ${CMAKE_HOST_SYSTEM_PROCESSOR}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(179):  set(INCLUDE_CMAKE_TOOLCHAIN_FILE_IF_REQUIRED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(180):  if(CMAKE_TOOLCHAIN_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(181):  set(INCLUDE_CMAKE_TOOLCHAIN_FILE_IF_REQUIRED include(\"${CMAKE_TOOLCHAIN_FILE}\") )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake(185):  configure_file(${CMAKE_ROOT}/Modules/CMakeSystem.cmake.in ${CMAKE_PLATFORM_INFO_DIR}/CMakeSystem.cmake @ONLY )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeSystem.cmake(1):  set(CMAKE_HOST_SYSTEM Windows-10.0.17763 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeSystem.cmake(2):  set(CMAKE_HOST_SYSTEM_NAME Windows )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeSystem.cmake(3):  set(CMAKE_HOST_SYSTEM_VERSION 10.0.17763 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeSystem.cmake(4):  set(CMAKE_HOST_SYSTEM_PROCESSOR AMD64 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeSystem.cmake(6):  include(C:/acados/cmake/Toolchain-dSpaceDS1401.cmake )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(1):  SET(CMAKE_SYSTEM_NAME dSpaceDS1401 )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(2):  list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR} )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(3):  SET(CMAKE_SYSTEM_PROCESSOR ppc )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(7):  file(TO_CMAKE_PATH C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320 DSPACE_TOOLS )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(10):  set(DSPACE_RTLIB C:/dSPACERCPHIL2017-B/DS1401/RTLib )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(12):  set(DSPACE_PPCTOOLS ${DSPACE_TOOLS}/Compiler/PPCTools )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(14):  find_program(CMAKE_C_COMPILER NAMES ${DSPACE_PPCTOOLS}/bin/mccppc.exe )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(15):  find_program(CMAKE_CXX_COMPILER NAMES ${DSPACE_PPCTOOLS}/bin/mccppc.exe )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(16):  find_program(CMAKE_ASM_COMPILER NAMES ${DSPACE_PPCTOOLS}/bin/asmppc.exe )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(17):  find_program(CMAKE_AR NAMES ${DSPACE_PPCTOOLS}/bin/libppc.exe )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(20):  find_program(CMAKE_LINKER NAMES ${DSPACE_PPCTOOLS}/bin/lnkppc.exe )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(24):  set(CMAKE_RANLIB : )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(26):  find_program(CMAKE_MAKE_PROGRAM NAMES C:/dSPACERCPHIL2017-B/Exe/DSMAKE.exe )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(28):  SET(CMAKE_FIND_ROOT_PATH ${DSPACE_PPCTOOLS} )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(29):  SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(30):  SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(31):  SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(38):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -H -J{DSPACE_RTLIB} -I${DSPACE_PPCTOOLS}/inc -D_DS1401 -p603e )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(39):  set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} -H -J{DSPACE_RTLIB} -I${DSPACE_PPCTOOLS}/inc -D_DS1401 -p603e )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(41):  set(CMAKE_AR_FLAGS -Q s -V CACHE STRING AR FLAGS )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(42):  set(CMAKE_C_ARCHIVE_CREATE <CMAKE_AR> -Qs -V <OBJECTS> -o <TARGET> )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(43):  set(CMAKE_C_ARCHIVE_APPEND <CMAKE_AR> -V <OBJECTS> -o <TARGET> )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(44):  set(CMAKE_CXX_ARCHIVE_CREATE <CMAKE_AR> -Qs -V <OBJECTS> -o <TARGET> )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(45):  set(CMAKE_CXX_ARCHIVE_APPEND <CMAKE_AR> -V <OBJECTS> -o <TARGET> )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(50):  set(BLASFEO_TARGET GENERIC CACHE STRING BLASFEO Target architecture )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(51):  set(HPIPM_TARGET GENERIC CACHE STRING HPIPM Target architecture )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(52):  set(BUILD_SHARED_LIBS OFF CACHE STRING Build shared libraries )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(53):  set(BLASFEO_EXAMPLES OFF CACHE BOOL Examples disabled )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(54):  set(EXT_DEP OFF CACHE BOOL Compile external dependencies in BLASFEO )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(55):  set(ACADOS_INSTALL_DIR install CACHE PATH Installation path to ACADOS_INSTALL_DIR )
C:/acados/cmake/Toolchain-dSpaceDS1401.cmake(58):  add_definitions(-DWINDOWS_SKIP_PTR_ALIGNMENT_CHECK )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeSystem.cmake(8):  set(CMAKE_SYSTEM dSpaceDS1401 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeSystem.cmake(9):  set(CMAKE_SYSTEM_NAME dSpaceDS1401 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeSystem.cmake(10):  set(CMAKE_SYSTEM_VERSION  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeSystem.cmake(11):  set(CMAKE_SYSTEM_PROCESSOR ppc )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeSystem.cmake(13):  set(CMAKE_CROSSCOMPILING TRUE )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeSystem.cmake(15):  set(CMAKE_SYSTEM_LOADED 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInitialize.cmake(19):  set(CMAKE_EFFECTIVE_SYSTEM_NAME ${CMAKE_SYSTEM_NAME} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInitialize.cmake(21):  include(Platform/${CMAKE_SYSTEM_NAME}-Initialize OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInitialize.cmake(23):  set(CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(24):  include(${CMAKE_ROOT}/Modules/CMakeDetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(5):  macro(_cmake_find_compiler lang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(92):  macro(_cmake_find_compiler_path lang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(27):  include(Platform/${CMAKE_SYSTEM_NAME}-Determine-C OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(28):  include(Platform/${CMAKE_SYSTEM_NAME}-C OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(29):  if(NOT CMAKE_C_COMPILER_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(30):  set(CMAKE_C_COMPILER_NAMES cc )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(33):  if(${CMAKE_GENERATOR} MATCHES Visual Studio )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(34):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(35):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(38):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(39):  if(NOT CMAKE_C_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(67):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(68):  _cmake_find_compiler_path(C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(93):  if(CMAKE_C_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(98):  list(LENGTH CMAKE_C_COMPILER _CMAKE_C_COMPILER_LIST_LENGTH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(99):  if(${_CMAKE_C_COMPILER_LIST_LENGTH} EQUAL 2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(103):  unset(_CMAKE_C_COMPILER_LIST_LENGTH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(106):  get_filename_component(_CMAKE_USER_C_COMPILER_PATH ${CMAKE_C_COMPILER} PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(107):  if(NOT _CMAKE_USER_C_COMPILER_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(70):  mark_as_advanced(CMAKE_C_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(75):  set(CMAKE_C_COMPILER_ID_TEST_FLAGS_FIRST )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(76):  set(CMAKE_C_COMPILER_ID_TEST_FLAGS -c -Aa -D__CLASSIC_C__ --target=arm-arm-none-eabi -mcpu=cortex-m3 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(92):  if(NOT CMAKE_C_COMPILER_ID_RUN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(93):  set(CMAKE_C_COMPILER_ID_RUN 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(96):  set(CMAKE_C_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(97):  set(CMAKE_C_PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(98):  file(READ ${CMAKE_ROOT}/Modules/CMakePlatformId.h.in CMAKE_C_COMPILER_ID_PLATFORM_CONTENT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(103):  list(APPEND CMAKE_C_COMPILER_ID_VENDORS IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(104):  set(CMAKE_C_COMPILER_ID_VENDOR_FLAGS_IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(105):  set(CMAKE_C_COMPILER_ID_VENDOR_REGEX_IAR IAR .+ Compiler )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(112):  set(CMAKE_C_COMPILER_ID_TOOL_MATCH_REGEX \nLd[^\n]*(\n[ \t]+[^\n]*)*\n[ \t]+([^ \t\r\n]+)[^\r\n]*-o[^\r\n]*CompilerIdC/(\\./)?(CompilerIdC.(framework|xctest)/)?CompilerIdC[ \t\n\\\"] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(113):  set(CMAKE_C_COMPILER_ID_TOOL_MATCH_INDEX 2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(115):  include(${CMAKE_ROOT}/Modules/CMakeDetermineCompilerId.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(9):  function(CMAKE_DETERMINE_COMPILER_ID lang flagvar src )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(203):  include(CMakeCompilerIdDetection )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(5):  function(_readFile file )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(14):  function(compiler_id_detection outvar lang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(207):  function(CMAKE_DETERMINE_COMPILER_ID_WRITE lang src )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(225):  function(CMAKE_DETERMINE_COMPILER_ID_BUILD lang testflags userflags src )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(616):  function(CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR lang output )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(627):  function(CMAKE_DETERMINE_COMPILER_ID_CHECK lang file )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(839):  function(CMAKE_DETERMINE_COMPILER_ID_VENDOR lang userflags )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(886):  function(CMAKE_DETERMINE_MSVC_SHOWINCLUDES_PREFIX lang userflags )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(116):  CMAKE_DETERMINE_COMPILER_ID(C CFLAGS CMakeCCompilerId.c )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(11):  string(STRIP ${CMAKE_${lang}_COMPILER_ARG1} CMAKE_${lang}_COMPILER_ID_ARG1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(12):  string(REGEX REPLACE  + ; CMAKE_${lang}_COMPILER_ID_ARG1 ${CMAKE_${lang}_COMPILER_ID_ARG1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(15):  if(CMAKE_${lang}_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(16):  set(CMAKE_${lang}_COMPILER_ID_FLAGS ${CMAKE_${lang}_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(20):  string(REPLACE   ; CMAKE_${lang}_COMPILER_ID_FLAGS_LIST ${CMAKE_${lang}_COMPILER_ID_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(23):  set(CMAKE_${lang}_COMPILER_ID_DIR ${CMAKE_PLATFORM_INFO_DIR}/CompilerId${lang} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(27):  foreach(userflags ${CMAKE_${lang}_COMPILER_ID_FLAGS_LIST}  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(28):  foreach(testflags ${CMAKE_${lang}_COMPILER_ID_TEST_FLAGS_FIRST}  ${CMAKE_${lang}_COMPILER_ID_TEST_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Bruce-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__BCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECC_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECC_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECC_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECC_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_cc) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_cc = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_cc/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_cc/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_cc     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(4):  set(_compiler_id_pp_test defined(__SDCC_VERSION_MAJOR) || defined(SDCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(6):  set(_compiler_id_version_compute 
# if defined(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(__SDCC_VERSION_MINOR)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(__SDCC_VERSION_PATCH)
# else
  /* SDCC = VRP */
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(SDCC/100)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(SDCC/10 % 10)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(SDCC    % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_C) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_C >= 0x5100
   /* __SUNPRO_C = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TINYC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(70):  list(APPEND ordered_compilers TinyCC Bruce )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(87):  list(APPEND ordered_compilers SDCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(560):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(562):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compiling the ${lang} compiler identification source file \"${src}\" succeeded.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(573):  string(REGEX REPLACE ([][]) [\\1] _glob_id_dir ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(574):  file(GLOB files RELATIVE ${CMAKE_${lang}_COMPILER_ID_DIR} ${_glob_id_dir}/* ${_glob_id_dir}/*.xctest/* ${_glob_id_dir}/*.framework/* )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(586):  list(REMOVE_ITEM files ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(587):  set(COMPILER_${lang}_PRODUCED_FILES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(588):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(597):  if(NOT COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(605):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${CMAKE_${lang}_COMPILER_ID_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(794):  file(READ ${file} CMAKE_EXECUTABLE_MAGIC LIMIT 4 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(797):  if(${CMAKE_EXECUTABLE_MAGIC} STREQUAL 7f454c46 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(798):  set(CMAKE_EXECUTABLE_FORMAT ELF CACHE INTERNAL Executable file format )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(807):  if(${CMAKE_EXECUTABLE_MAGIC} MATCHES feedface|cefaedfe|feedfacf|cffaedfe )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Bruce-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__BCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECC_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECC_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECC_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECC_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_cc) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_cc = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_cc/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_cc/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_cc     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(4):  set(_compiler_id_pp_test defined(__SDCC_VERSION_MAJOR) || defined(SDCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(6):  set(_compiler_id_version_compute 
# if defined(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(__SDCC_VERSION_MINOR)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(__SDCC_VERSION_PATCH)
# else
  /* SDCC = VRP */
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(SDCC/100)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(SDCC/10 % 10)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(SDCC    % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_C) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_C >= 0x5100
   /* __SUNPRO_C = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TINYC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(70):  list(APPEND ordered_compilers TinyCC Bruce )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(87):  list(APPEND ordered_compilers SDCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(560):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(562):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compiling the ${lang} compiler identification source file \"${src}\" succeeded.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(573):  string(REGEX REPLACE ([][]) [\\1] _glob_id_dir ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(574):  file(GLOB files RELATIVE ${CMAKE_${lang}_COMPILER_ID_DIR} ${_glob_id_dir}/* ${_glob_id_dir}/*.xctest/* ${_glob_id_dir}/*.framework/* )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(586):  list(REMOVE_ITEM files ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(587):  set(COMPILER_${lang}_PRODUCED_FILES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(588):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(597):  if(NOT COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(605):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${CMAKE_${lang}_COMPILER_ID_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Bruce-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__BCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECC_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECC_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECC_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECC_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_cc) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_cc = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_cc/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_cc/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_cc     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(4):  set(_compiler_id_pp_test defined(__SDCC_VERSION_MAJOR) || defined(SDCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(6):  set(_compiler_id_version_compute 
# if defined(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(__SDCC_VERSION_MINOR)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(__SDCC_VERSION_PATCH)
# else
  /* SDCC = VRP */
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(SDCC/100)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(SDCC/10 % 10)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(SDCC    % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_C) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_C >= 0x5100
   /* __SUNPRO_C = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TINYC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(70):  list(APPEND ordered_compilers TinyCC Bruce )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(87):  list(APPEND ordered_compilers SDCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(560):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(562):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compiling the ${lang} compiler identification source file \"${src}\" succeeded.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(573):  string(REGEX REPLACE ([][]) [\\1] _glob_id_dir ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(574):  file(GLOB files RELATIVE ${CMAKE_${lang}_COMPILER_ID_DIR} ${_glob_id_dir}/* ${_glob_id_dir}/*.xctest/* ${_glob_id_dir}/*.framework/* )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(586):  list(REMOVE_ITEM files ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(587):  set(COMPILER_${lang}_PRODUCED_FILES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(588):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(597):  if(NOT COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(599):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Compilation of the ${lang} compiler identification source \" ${src}\" did not produce an executable in \" ${CMAKE_${lang}_COMPILER_ID_DIR}\".\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(605):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${CMAKE_${lang}_COMPILER_ID_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Bruce-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__BCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECC_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECC_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECC_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECC_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_cc) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_cc = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_cc/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_cc/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_cc     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(4):  set(_compiler_id_pp_test defined(__SDCC_VERSION_MAJOR) || defined(SDCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(6):  set(_compiler_id_version_compute 
# if defined(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(__SDCC_VERSION_MINOR)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(__SDCC_VERSION_PATCH)
# else
  /* SDCC = VRP */
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(SDCC/100)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(SDCC/10 % 10)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(SDCC    % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_C) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_C >= 0x5100
   /* __SUNPRO_C = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TINYC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(70):  list(APPEND ordered_compilers TinyCC Bruce )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(87):  list(APPEND ordered_compilers SDCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(560):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(562):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compiling the ${lang} compiler identification source file \"${src}\" succeeded.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(573):  string(REGEX REPLACE ([][]) [\\1] _glob_id_dir ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(574):  file(GLOB files RELATIVE ${CMAKE_${lang}_COMPILER_ID_DIR} ${_glob_id_dir}/* ${_glob_id_dir}/*.xctest/* ${_glob_id_dir}/*.framework/* )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(586):  list(REMOVE_ITEM files ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(587):  set(COMPILER_${lang}_PRODUCED_FILES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(588):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(597):  if(NOT COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(605):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${CMAKE_${lang}_COMPILER_ID_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Bruce-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__BCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECC_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECC_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECC_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECC_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_cc) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_cc = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_cc/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_cc/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_cc     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(4):  set(_compiler_id_pp_test defined(__SDCC_VERSION_MAJOR) || defined(SDCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(6):  set(_compiler_id_version_compute 
# if defined(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(__SDCC_VERSION_MINOR)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(__SDCC_VERSION_PATCH)
# else
  /* SDCC = VRP */
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(SDCC/100)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(SDCC/10 % 10)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(SDCC    % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_C) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_C >= 0x5100
   /* __SUNPRO_C = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TINYC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(70):  list(APPEND ordered_compilers TinyCC Bruce )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(87):  list(APPEND ordered_compilers SDCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(544):  set(MSG Compiling the ${lang} compiler identification source file \"${src}\" failed.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(552):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log ${MSG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(558):  set(COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(559):  set(COMPILER_${lang}_PRODUCED_OUTPUT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(44):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(28):  foreach(testflags ${CMAKE_${lang}_COMPILER_ID_TEST_FLAGS_FIRST}  ${CMAKE_${lang}_COMPILER_ID_TEST_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Bruce-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__BCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECC_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECC_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECC_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECC_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_cc) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_cc = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_cc/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_cc/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_cc     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(4):  set(_compiler_id_pp_test defined(__SDCC_VERSION_MAJOR) || defined(SDCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(6):  set(_compiler_id_version_compute 
# if defined(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(__SDCC_VERSION_MINOR)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(__SDCC_VERSION_PATCH)
# else
  /* SDCC = VRP */
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(SDCC/100)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(SDCC/10 % 10)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(SDCC    % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_C) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_C >= 0x5100
   /* __SUNPRO_C = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TINYC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(70):  list(APPEND ordered_compilers TinyCC Bruce )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(87):  list(APPEND ordered_compilers SDCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(560):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(562):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compiling the ${lang} compiler identification source file \"${src}\" succeeded.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(573):  string(REGEX REPLACE ([][]) [\\1] _glob_id_dir ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(574):  file(GLOB files RELATIVE ${CMAKE_${lang}_COMPILER_ID_DIR} ${_glob_id_dir}/* ${_glob_id_dir}/*.xctest/* ${_glob_id_dir}/*.framework/* )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(586):  list(REMOVE_ITEM files ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(587):  set(COMPILER_${lang}_PRODUCED_FILES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(588):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(597):  if(NOT COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(605):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${CMAKE_${lang}_COMPILER_ID_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Bruce-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__BCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECC_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECC_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECC_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECC_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_cc) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_cc = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_cc/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_cc/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_cc     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(4):  set(_compiler_id_pp_test defined(__SDCC_VERSION_MAJOR) || defined(SDCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(6):  set(_compiler_id_version_compute 
# if defined(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(__SDCC_VERSION_MINOR)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(__SDCC_VERSION_PATCH)
# else
  /* SDCC = VRP */
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(SDCC/100)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(SDCC/10 % 10)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(SDCC    % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_C) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_C >= 0x5100
   /* __SUNPRO_C = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TINYC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(70):  list(APPEND ordered_compilers TinyCC Bruce )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(87):  list(APPEND ordered_compilers SDCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(560):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(562):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compiling the ${lang} compiler identification source file \"${src}\" succeeded.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(573):  string(REGEX REPLACE ([][]) [\\1] _glob_id_dir ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(574):  file(GLOB files RELATIVE ${CMAKE_${lang}_COMPILER_ID_DIR} ${_glob_id_dir}/* ${_glob_id_dir}/*.xctest/* ${_glob_id_dir}/*.framework/* )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(586):  list(REMOVE_ITEM files ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(587):  set(COMPILER_${lang}_PRODUCED_FILES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(588):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(597):  if(NOT COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(605):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${CMAKE_${lang}_COMPILER_ID_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Bruce-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__BCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECC_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECC_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECC_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECC_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_cc) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_cc = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_cc/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_cc/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_cc     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(4):  set(_compiler_id_pp_test defined(__SDCC_VERSION_MAJOR) || defined(SDCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(6):  set(_compiler_id_version_compute 
# if defined(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(__SDCC_VERSION_MINOR)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(__SDCC_VERSION_PATCH)
# else
  /* SDCC = VRP */
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(SDCC/100)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(SDCC/10 % 10)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(SDCC    % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_C) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_C >= 0x5100
   /* __SUNPRO_C = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TINYC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(70):  list(APPEND ordered_compilers TinyCC Bruce )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(87):  list(APPEND ordered_compilers SDCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(560):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(562):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compiling the ${lang} compiler identification source file \"${src}\" succeeded.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(573):  string(REGEX REPLACE ([][]) [\\1] _glob_id_dir ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(574):  file(GLOB files RELATIVE ${CMAKE_${lang}_COMPILER_ID_DIR} ${_glob_id_dir}/* ${_glob_id_dir}/*.xctest/* ${_glob_id_dir}/*.framework/* )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(586):  list(REMOVE_ITEM files ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(587):  set(COMPILER_${lang}_PRODUCED_FILES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(588):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(597):  if(NOT COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(599):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Compilation of the ${lang} compiler identification source \" ${src}\" did not produce an executable in \" ${CMAKE_${lang}_COMPILER_ID_DIR}\".\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(605):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${CMAKE_${lang}_COMPILER_ID_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Bruce-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__BCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECC_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECC_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECC_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECC_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_cc) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_cc = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_cc/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_cc/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_cc     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(4):  set(_compiler_id_pp_test defined(__SDCC_VERSION_MAJOR) || defined(SDCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(6):  set(_compiler_id_version_compute 
# if defined(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(__SDCC_VERSION_MINOR)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(__SDCC_VERSION_PATCH)
# else
  /* SDCC = VRP */
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(SDCC/100)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(SDCC/10 % 10)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(SDCC    % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_C) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_C >= 0x5100
   /* __SUNPRO_C = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TINYC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(70):  list(APPEND ordered_compilers TinyCC Bruce )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(87):  list(APPEND ordered_compilers SDCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(560):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(562):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compiling the ${lang} compiler identification source file \"${src}\" succeeded.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(573):  string(REGEX REPLACE ([][]) [\\1] _glob_id_dir ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(574):  file(GLOB files RELATIVE ${CMAKE_${lang}_COMPILER_ID_DIR} ${_glob_id_dir}/* ${_glob_id_dir}/*.xctest/* ${_glob_id_dir}/*.framework/* )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(586):  list(REMOVE_ITEM files ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(587):  set(COMPILER_${lang}_PRODUCED_FILES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(588):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(597):  if(NOT COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(605):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${CMAKE_${lang}_COMPILER_ID_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Bruce-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__BCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECC_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECC_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECC_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECC_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_cc) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_cc = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_cc/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_cc/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_cc     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(4):  set(_compiler_id_pp_test defined(__SDCC_VERSION_MAJOR) || defined(SDCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SDCC-C-DetermineCompiler.cmake(6):  set(_compiler_id_version_compute 
# if defined(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(__SDCC_VERSION_MAJOR)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(__SDCC_VERSION_MINOR)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(__SDCC_VERSION_PATCH)
# else
  /* SDCC = VRP */
#  define COMPILER_VERSION_MAJOR @MACRO_DEC@(SDCC/100)
#  define COMPILER_VERSION_MINOR @MACRO_DEC@(SDCC/10 % 10)
#  define COMPILER_VERSION_PATCH @MACRO_DEC@(SDCC    % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_C) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-C-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_C >= 0x5100
   /* __SUNPRO_C = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_C>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_C>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_C    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TINYC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-C-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMC__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-C-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-C-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMC__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMC__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMC__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMC__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(70):  list(APPEND ordered_compilers TinyCC Bruce )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(87):  list(APPEND ordered_compilers SDCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(544):  set(MSG Compiling the ${lang} compiler identification source file \"${src}\" failed.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(552):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log ${MSG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(558):  set(COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(559):  set(COMPILER_${lang}_PRODUCED_OUTPUT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(44):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(50):  if(CMAKE_${lang}_COMPILER_ID_TOOL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(53):  elseif(NOT CMAKE_${lang}_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(58):  if(CMAKE_${lang}_COMPILER AND NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(59):  foreach(userflags ${CMAKE_${lang}_COMPILER_ID_FLAGS_LIST}  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(60):  CMAKE_DETERMINE_COMPILER_ID_VENDOR(${lang} ${userflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(841):  if(NOT CMAKE_${lang}_COMPILER_ID_DIR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(851):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(60):  CMAKE_DETERMINE_COMPILER_ID_VENDOR(${lang} ${userflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(841):  if(NOT CMAKE_${lang}_COMPILER_ID_DIR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(851):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(65):  if(NOT CMAKE_${lang}_COMPILER_ID AND ${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(72):  if(lang STREQUAL CUDA AND CMAKE_${lang}_COMPILER_ID STREQUAL NVIDIA AND NOT CMAKE_${lang}_COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(88):  if(lang STREQUAL Swift AND CMAKE_${lang}_COMPILER AND NOT CMAKE_${lang}_COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(111):  if(COMPILER_QNXNTO AND CMAKE_${lang}_COMPILER_ID STREQUAL GNU )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(127):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(131):  if(CMAKE_GENERATOR STREQUAL Ninja AND MSVC_${lang}_ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(135):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(136):  set(CMAKE_${lang}_CL_SHOWINCLUDES_PREFIX  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(139):  set(_variant  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(140):  if(x${CMAKE_${lang}_COMPILER_ID} STREQUAL xClang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(160):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(161):  set(CMAKE_${lang}_COMPILER_FRONTEND_VARIANT  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(165):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(181):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(182):  message(STATUS The ${lang} compiler identification is unknown )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(185):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(186):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(187):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(188):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(190):  set(CMAKE_${lang}_XCODE_ARCHS ${CMAKE_${lang}_XCODE_ARCHS} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(191):  set(CMAKE_${lang}_CL_SHOWINCLUDES_PREFIX ${CMAKE_${lang}_CL_SHOWINCLUDES_PREFIX} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(192):  set(CMAKE_${lang}_COMPILER_FRONTEND_VARIANT ${CMAKE_${lang}_COMPILER_FRONTEND_VARIANT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(193):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(194):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(195):  set(CMAKE_${lang}_COMPILER_WRAPPER ${CMAKE_${lang}_COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(196):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(197):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(198):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(199):  set(CMAKE_${lang}_COMPILER_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(200):  set(CMAKE_${lang}_COMPILER_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(119):  if(CMAKE_C_COMPILER_ID STREQUAL GNU )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(122):  if(CMAKE_C_PLATFORM_ID MATCHES MinGW )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(124):  elseif(CMAKE_C_PLATFORM_ID MATCHES Cygwin )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(145):  if(NOT _CMAKE_TOOLCHAIN_LOCATION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(146):  get_filename_component(_CMAKE_TOOLCHAIN_LOCATION ${CMAKE_C_COMPILER} PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(156):  if(CMAKE_CROSSCOMPILING AND NOT _CMAKE_TOOLCHAIN_PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(158):  if(CMAKE_C_COMPILER_ID MATCHES GNU|Clang|QCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(178):  elseif(CMAKE_C_COMPILER_ID MATCHES TI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(189):  set(_CMAKE_PROCESSING_LANGUAGE C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(190):  include(CMakeFindBinUtils )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(24):  function(__resolve_tool_path CMAKE_TOOL SEARCH_PATH DOCSTRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(57):  __resolve_tool_path(CMAKE_LINKER ${_CMAKE_TOOLCHAIN_LOCATION} Default Linker )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(26):  if(${CMAKE_TOOL} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(31):  get_filename_component(_CMAKE_USER_TOOL_PATH ${${CMAKE_TOOL}} DIRECTORY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(33):  if(NOT _CMAKE_USER_TOOL_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(58):  __resolve_tool_path(CMAKE_MT ${_CMAKE_TOOLCHAIN_LOCATION} Default Manifest Tool )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(26):  if(${CMAKE_TOOL} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(60):  set(_CMAKE_TOOL_VARS  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(63):  if(( x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_SIMULATE_ID} STREQUAL xMSVC AND ( x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_FRONTEND_VARIANT} STREQUAL xMSVC OR NOT x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL xClang ) ) OR x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL xMSVC OR ( CMAKE_HOST_WIN32 AND x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL xPGI ) OR ( CMAKE_HOST_WIN32 AND x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL xNVIDIA ) OR ( CMAKE_GENERATOR MATCHES Visual Studio AND NOT CMAKE_VS_PLATFORM_NAME STREQUAL Tegra-Android ) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(83):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(84):  if(CMAKE_C_COMPILER_EXTERNAL_TOOLCHAIN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(87):  if(CMAKE_CXX_COMPILER_EXTERNAL_TOOLCHAIN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(91):  if(${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL Clang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(104):  find_program(CMAKE_AR NAMES ${_CMAKE_TOOLCHAIN_PREFIX}ar${_CMAKE_TOOLCHAIN_SUFFIX} ${_CMAKE_ADDITIONAL_AR_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(106):  find_program(CMAKE_RANLIB NAMES ${_CMAKE_TOOLCHAIN_PREFIX}ranlib ${_CMAKE_ADDITIONAL_RANLIB_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(107):  if(NOT CMAKE_RANLIB )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(112):  find_program(CMAKE_STRIP NAMES ${_CMAKE_TOOLCHAIN_PREFIX}strip${_CMAKE_TOOLCHAIN_SUFFIX} ${_CMAKE_ADDITIONAL_STRIP_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(113):  find_program(CMAKE_LINKER NAMES ${_CMAKE_TOOLCHAIN_PREFIX}ld ${_CMAKE_ADDITIONAL_LINKER_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(114):  find_program(CMAKE_NM NAMES ${_CMAKE_TOOLCHAIN_PREFIX}nm ${_CMAKE_ADDITIONAL_NM_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(115):  find_program(CMAKE_OBJDUMP NAMES ${_CMAKE_TOOLCHAIN_PREFIX}objdump ${_CMAKE_ADDITIONAL_OBJDUMP_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(116):  find_program(CMAKE_OBJCOPY NAMES ${_CMAKE_TOOLCHAIN_PREFIX}objcopy ${_CMAKE_ADDITIONAL_OBJCOPY_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(117):  find_program(CMAKE_READELF NAMES ${_CMAKE_TOOLCHAIN_PREFIX}readelf ${_CMAKE_ADDITIONAL_READELF_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(118):  find_program(CMAKE_DLLTOOL NAMES ${_CMAKE_TOOLCHAIN_PREFIX}dlltool ${_CMAKE_ADDITIONAL_DLLTOOL_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(119):  find_program(CMAKE_ADDR2LINE NAMES ${_CMAKE_TOOLCHAIN_PREFIX}addr2line ${_CMAKE_ADDITIONAL_ADDR2LINE_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(121):  list(APPEND _CMAKE_TOOL_VARS AR RANLIB STRIP LINKER NM OBJDUMP OBJCOPY READELF DLLTOOL ADDR2LINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(124):  if(CMAKE_PLATFORM_HAS_INSTALLNAME )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(135):  foreach(var IN LISTS _CMAKE_TOOL_VARS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(142):  unset(_CMAKE_TOOL_VARS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(143):  unset(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(191):  include(Compiler/${CMAKE_C_COMPILER_ID}-FindBinUtils OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(192):  unset(_CMAKE_PROCESSING_LANGUAGE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(194):  if(CMAKE_C_COMPILER_ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(197):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(198):  set(_SET_CMAKE_C_COMPILER_ARCHITECTURE_ID  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(201):  if(MSVC_C_ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(206):  if(CMAKE_C_XCODE_ARCHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(212):  configure_file(${CMAKE_ROOT}/Modules/CMakeCCompiler.cmake.in ${CMAKE_PLATFORM_INFO_DIR}/CMakeCCompiler.cmake @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake(216):  set(CMAKE_C_COMPILER_ENV_VAR CC )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(1):  set(CMAKE_C_COMPILER C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/mccppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(2):  set(CMAKE_C_COMPILER_ARG1  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(3):  set(CMAKE_C_COMPILER_ID  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(4):  set(CMAKE_C_COMPILER_VERSION  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(5):  set(CMAKE_C_COMPILER_VERSION_INTERNAL  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(6):  set(CMAKE_C_COMPILER_WRAPPER  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(7):  set(CMAKE_C_STANDARD_COMPUTED_DEFAULT 90 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(8):  set(CMAKE_C_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(9):  set(CMAKE_C90_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(10):  set(CMAKE_C99_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(11):  set(CMAKE_C11_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(13):  set(CMAKE_C_PLATFORM_ID  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(14):  set(CMAKE_C_SIMULATE_ID  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(15):  set(CMAKE_C_COMPILER_FRONTEND_VARIANT  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(16):  set(CMAKE_C_SIMULATE_VERSION  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(20):  set(CMAKE_AR C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/libppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(21):  set(CMAKE_C_COMPILER_AR  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(22):  set(CMAKE_RANLIB : )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(23):  set(CMAKE_C_COMPILER_RANLIB  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(24):  set(CMAKE_LINKER C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/lnkppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(25):  set(CMAKE_MT  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(26):  set(CMAKE_COMPILER_IS_GNUCC )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(27):  set(CMAKE_C_COMPILER_LOADED 1 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(28):  set(CMAKE_C_COMPILER_WORKS )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(29):  set(CMAKE_C_ABI_COMPILED )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(30):  set(CMAKE_COMPILER_IS_MINGW )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(31):  set(CMAKE_COMPILER_IS_CYGWIN )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(32):  if(CMAKE_COMPILER_IS_CYGWIN )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(37):  set(CMAKE_C_COMPILER_ENV_VAR CC )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(39):  if(CMAKE_COMPILER_IS_MINGW )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(42):  set(CMAKE_C_COMPILER_ID_RUN 1 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(43):  set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(44):  set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(45):  set(CMAKE_C_LINKER_PREFERENCE 10 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(48):  set(CMAKE_C_SIZEOF_DATA_PTR  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(49):  set(CMAKE_C_COMPILER_ABI  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(50):  set(CMAKE_C_LIBRARY_ARCHITECTURE  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(52):  if(CMAKE_C_SIZEOF_DATA_PTR )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(56):  if(CMAKE_C_COMPILER_ABI )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(60):  if(CMAKE_C_LIBRARY_ARCHITECTURE )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(64):  set(CMAKE_C_CL_SHOWINCLUDES_PREFIX  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(65):  if(CMAKE_C_CL_SHOWINCLUDES_PREFIX )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(73):  set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(74):  set(CMAKE_C_IMPLICIT_LINK_LIBRARIES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(75):  set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(76):  set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(23):  include(${CMAKE_ROOT}/Modules/CMakeDetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(5):  macro(_cmake_find_compiler lang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(92):  macro(_cmake_find_compiler_path lang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(26):  include(Platform/${CMAKE_SYSTEM_NAME}-Determine-CXX OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(27):  include(Platform/${CMAKE_SYSTEM_NAME}-CXX OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(28):  if(NOT CMAKE_CXX_COMPILER_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(29):  set(CMAKE_CXX_COMPILER_NAMES CC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(32):  if(${CMAKE_GENERATOR} MATCHES Visual Studio )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(33):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(34):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(37):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(38):  if(NOT CMAKE_CXX_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(65):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(66):  _cmake_find_compiler_path(CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(93):  if(CMAKE_CXX_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(98):  list(LENGTH CMAKE_CXX_COMPILER _CMAKE_CXX_COMPILER_LIST_LENGTH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(99):  if(${_CMAKE_CXX_COMPILER_LIST_LENGTH} EQUAL 2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(103):  unset(_CMAKE_CXX_COMPILER_LIST_LENGTH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(106):  get_filename_component(_CMAKE_USER_CXX_COMPILER_PATH ${CMAKE_CXX_COMPILER} PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(107):  if(NOT _CMAKE_USER_CXX_COMPILER_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(68):  mark_as_advanced(CMAKE_CXX_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(73):  set(CMAKE_CXX_COMPILER_ID_TEST_FLAGS_FIRST )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(74):  set(CMAKE_CXX_COMPILER_ID_TEST_FLAGS -c --c++ --ec++ --target=arm-arm-none-eabi -mcpu=cortex-m3 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(87):  if(NOT CMAKE_CXX_COMPILER_ID_RUN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(88):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(91):  set(CMAKE_CXX_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(92):  set(CMAKE_CXX_PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(93):  file(READ ${CMAKE_ROOT}/Modules/CMakePlatformId.h.in CMAKE_CXX_COMPILER_ID_PLATFORM_CONTENT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(98):  list(APPEND CMAKE_CXX_COMPILER_ID_VENDORS IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(99):  set(CMAKE_CXX_COMPILER_ID_VENDOR_FLAGS_IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(100):  set(CMAKE_CXX_COMPILER_ID_VENDOR_REGEX_IAR IAR .+ Compiler )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(107):  set(CMAKE_CXX_COMPILER_ID_TOOL_MATCH_REGEX \nLd[^\n]*(\n[ \t]+[^\n]*)*\n[ \t]+([^ \t\r\n]+)[^\r\n]*-o[^\r\n]*CompilerIdCXX/(\\./)?(CompilerIdCXX.(framework|xctest)/)?CompilerIdCXX[ \t\n\\\"] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(108):  set(CMAKE_CXX_COMPILER_ID_TOOL_MATCH_INDEX 2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(110):  include(${CMAKE_ROOT}/Modules/CMakeDetermineCompilerId.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(9):  function(CMAKE_DETERMINE_COMPILER_ID lang flagvar src )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(203):  include(CMakeCompilerIdDetection )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(5):  function(_readFile file )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(14):  function(compiler_id_detection outvar lang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(207):  function(CMAKE_DETERMINE_COMPILER_ID_WRITE lang src )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(225):  function(CMAKE_DETERMINE_COMPILER_ID_BUILD lang testflags userflags src )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(616):  function(CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR lang output )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(627):  function(CMAKE_DETERMINE_COMPILER_ID_CHECK lang file )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(839):  function(CMAKE_DETERMINE_COMPILER_ID_VENDOR lang userflags )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(886):  function(CMAKE_DETERMINE_MSVC_SHOWINCLUDES_PREFIX lang userflags )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(111):  CMAKE_DETERMINE_COMPILER_ID(CXX CXXFLAGS CMakeCXXCompilerId.cpp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(11):  string(STRIP ${CMAKE_${lang}_COMPILER_ARG1} CMAKE_${lang}_COMPILER_ID_ARG1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(12):  string(REGEX REPLACE  + ; CMAKE_${lang}_COMPILER_ID_ARG1 ${CMAKE_${lang}_COMPILER_ID_ARG1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(15):  if(CMAKE_${lang}_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(16):  set(CMAKE_${lang}_COMPILER_ID_FLAGS ${CMAKE_${lang}_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(20):  string(REPLACE   ; CMAKE_${lang}_COMPILER_ID_FLAGS_LIST ${CMAKE_${lang}_COMPILER_ID_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(23):  set(CMAKE_${lang}_COMPILER_ID_DIR ${CMAKE_PLATFORM_INFO_DIR}/CompilerId${lang} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(27):  foreach(userflags ${CMAKE_${lang}_COMPILER_ID_FLAGS_LIST}  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(28):  foreach(testflags ${CMAKE_${lang}_COMPILER_ID_TEST_FLAGS_FIRST}  ${CMAKE_${lang}_COMPILER_ID_TEST_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(21):  set(nonlang C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__COMO__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __COMO_VERSION__ = VRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__COMO_VERSION__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__COMO_VERSION__ % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECCXX) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) || defined(__GNUG__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_aCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_CC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(45):  list(APPEND ordered_compilers Comeau )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(560):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(562):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compiling the ${lang} compiler identification source file \"${src}\" succeeded.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(573):  string(REGEX REPLACE ([][]) [\\1] _glob_id_dir ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(574):  file(GLOB files RELATIVE ${CMAKE_${lang}_COMPILER_ID_DIR} ${_glob_id_dir}/* ${_glob_id_dir}/*.xctest/* ${_glob_id_dir}/*.framework/* )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(586):  list(REMOVE_ITEM files ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(587):  set(COMPILER_${lang}_PRODUCED_FILES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(588):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(597):  if(NOT COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(605):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${CMAKE_${lang}_COMPILER_ID_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(21):  set(nonlang C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__COMO__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __COMO_VERSION__ = VRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__COMO_VERSION__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__COMO_VERSION__ % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECCXX) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) || defined(__GNUG__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_aCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_CC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(45):  list(APPEND ordered_compilers Comeau )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(560):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(562):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compiling the ${lang} compiler identification source file \"${src}\" succeeded.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(573):  string(REGEX REPLACE ([][]) [\\1] _glob_id_dir ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(574):  file(GLOB files RELATIVE ${CMAKE_${lang}_COMPILER_ID_DIR} ${_glob_id_dir}/* ${_glob_id_dir}/*.xctest/* ${_glob_id_dir}/*.framework/* )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(586):  list(REMOVE_ITEM files ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(587):  set(COMPILER_${lang}_PRODUCED_FILES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(588):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(597):  if(NOT COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(605):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${CMAKE_${lang}_COMPILER_ID_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(21):  set(nonlang C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__COMO__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __COMO_VERSION__ = VRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__COMO_VERSION__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__COMO_VERSION__ % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECCXX) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) || defined(__GNUG__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_aCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_CC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(45):  list(APPEND ordered_compilers Comeau )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(560):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(562):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compiling the ${lang} compiler identification source file \"${src}\" succeeded.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(573):  string(REGEX REPLACE ([][]) [\\1] _glob_id_dir ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(574):  file(GLOB files RELATIVE ${CMAKE_${lang}_COMPILER_ID_DIR} ${_glob_id_dir}/* ${_glob_id_dir}/*.xctest/* ${_glob_id_dir}/*.framework/* )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(586):  list(REMOVE_ITEM files ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(587):  set(COMPILER_${lang}_PRODUCED_FILES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(588):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(597):  if(NOT COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(605):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${CMAKE_${lang}_COMPILER_ID_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(21):  set(nonlang C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__COMO__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __COMO_VERSION__ = VRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__COMO_VERSION__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__COMO_VERSION__ % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECCXX) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) || defined(__GNUG__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_aCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_CC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(45):  list(APPEND ordered_compilers Comeau )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(544):  set(MSG Compiling the ${lang} compiler identification source file \"${src}\" failed.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(552):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log ${MSG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(558):  set(COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(559):  set(COMPILER_${lang}_PRODUCED_OUTPUT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(21):  set(nonlang C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__COMO__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __COMO_VERSION__ = VRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__COMO_VERSION__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__COMO_VERSION__ % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECCXX) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) || defined(__GNUG__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_aCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_CC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(45):  list(APPEND ordered_compilers Comeau )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(544):  set(MSG Compiling the ${lang} compiler identification source file \"${src}\" failed.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(552):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log ${MSG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(558):  set(COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(559):  set(COMPILER_${lang}_PRODUCED_OUTPUT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(44):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(28):  foreach(testflags ${CMAKE_${lang}_COMPILER_ID_TEST_FLAGS_FIRST}  ${CMAKE_${lang}_COMPILER_ID_TEST_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(21):  set(nonlang C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__COMO__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __COMO_VERSION__ = VRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__COMO_VERSION__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__COMO_VERSION__ % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECCXX) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) || defined(__GNUG__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_aCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_CC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(45):  list(APPEND ordered_compilers Comeau )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(560):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(562):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compiling the ${lang} compiler identification source file \"${src}\" succeeded.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(573):  string(REGEX REPLACE ([][]) [\\1] _glob_id_dir ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(574):  file(GLOB files RELATIVE ${CMAKE_${lang}_COMPILER_ID_DIR} ${_glob_id_dir}/* ${_glob_id_dir}/*.xctest/* ${_glob_id_dir}/*.framework/* )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(586):  list(REMOVE_ITEM files ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(587):  set(COMPILER_${lang}_PRODUCED_FILES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(588):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(597):  if(NOT COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(605):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${CMAKE_${lang}_COMPILER_ID_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(21):  set(nonlang C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__COMO__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __COMO_VERSION__ = VRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__COMO_VERSION__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__COMO_VERSION__ % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECCXX) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) || defined(__GNUG__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_aCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_CC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(45):  list(APPEND ordered_compilers Comeau )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(560):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(562):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compiling the ${lang} compiler identification source file \"${src}\" succeeded.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(573):  string(REGEX REPLACE ([][]) [\\1] _glob_id_dir ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(574):  file(GLOB files RELATIVE ${CMAKE_${lang}_COMPILER_ID_DIR} ${_glob_id_dir}/* ${_glob_id_dir}/*.xctest/* ${_glob_id_dir}/*.framework/* )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(586):  list(REMOVE_ITEM files ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(587):  set(COMPILER_${lang}_PRODUCED_FILES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(588):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(597):  if(NOT COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(605):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${CMAKE_${lang}_COMPILER_ID_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(21):  set(nonlang C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__COMO__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __COMO_VERSION__ = VRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__COMO_VERSION__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__COMO_VERSION__ % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECCXX) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) || defined(__GNUG__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_aCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_CC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(45):  list(APPEND ordered_compilers Comeau )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(560):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(562):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compiling the ${lang} compiler identification source file \"${src}\" succeeded.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(573):  string(REGEX REPLACE ([][]) [\\1] _glob_id_dir ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(574):  file(GLOB files RELATIVE ${CMAKE_${lang}_COMPILER_ID_DIR} ${_glob_id_dir}/* ${_glob_id_dir}/*.xctest/* ${_glob_id_dir}/*.framework/* )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(586):  list(REMOVE_ITEM files ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(587):  set(COMPILER_${lang}_PRODUCED_FILES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(588):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(590):  list(APPEND COMPILER_${lang}_PRODUCED_FILES ${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(591):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Compilation of the ${lang} compiler identification source \" ${src}\" produced \"${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(589):  if(NOT IS_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(597):  if(NOT COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(605):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${CMAKE_${lang}_COMPILER_ID_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(38):  CMAKE_DETERMINE_COMPILER_ID_CHECK(${lang} ${CMAKE_${lang}_COMPILER_ID_DIR}/${file} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(629):  if(NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(631):  set(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(632):  set(COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(633):  set(COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(634):  set(COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(635):  set(COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(636):  set(COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(637):  set(COMPILER_VERSION_INTERNAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(638):  set(HAVE_COMPILER_VERSION_MAJOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(639):  set(HAVE_COMPILER_VERSION_MINOR 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(640):  set(HAVE_COMPILER_VERSION_PATCH 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(641):  set(HAVE_COMPILER_VERSION_TWEAK 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(642):  set(COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(643):  set(DIGIT_VALUE_1 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(644):  set(DIGIT_VALUE_2 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(645):  set(DIGIT_VALUE_3 100 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(646):  set(DIGIT_VALUE_4 1000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(647):  set(DIGIT_VALUE_5 10000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(648):  set(DIGIT_VALUE_6 100000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(649):  set(DIGIT_VALUE_7 1000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(650):  set(DIGIT_VALUE_8 10000000 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(651):  set(PLATFORM_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(652):  set(ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(653):  set(SIMULATE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(654):  set(SIMULATE_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(655):  foreach(encoding  ENCODING;UTF-16LE ENCODING;UTF-16BE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(656):  file(STRINGS ${file} CMAKE_${lang}_COMPILER_ID_STRINGS LIMIT_COUNT 38 ${encoding} REGEX .?I.?N.?F.?O.?:.?[A-Za-z0-9_]+\\[[^]]*\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(659):  if(NOT CMAKE_${lang}_COMPILER_ID_STRINGS STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(660):  break()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(663):  set(COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(666):  list(FILTER CMAKE_${lang}_COMPILER_ID_STRINGS EXCLUDE REGEX \\?<Constant \\\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(668):  list(REMOVE_DUPLICATES CMAKE_${lang}_COMPILER_ID_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(669):  foreach(info ${CMAKE_${lang}_COMPILER_ID_STRINGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(677):  if(COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(680):  set(COMPILER_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(683):  set(PLATFORM_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(686):  set(ARCHITECTURE_ID ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(673):  if(${info} MATCHES (.)I.N.F.O.:. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(676):  if(${info} MATCHES INFO:compiler\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(682):  if(${info} MATCHES INFO:platform\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(685):  if(${info} MATCHES INFO:arch\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(688):  if(${info} MATCHES INFO:compiler_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(692):  if(${info} MATCHES INFO:compiler_version_internal\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(696):  foreach(comp MAJOR MINOR PATCH TWEAK )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(697):  foreach(digit 1 2 3 4 5 6 7 8 9 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(698):  if(${info} MATCHES INFO:compiler_version_${comp}_digit_${digit}\\[([0-9])\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(705):  if(${info} MATCHES INFO:compiler_wrapper\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(708):  if(${info} MATCHES INFO:simulate\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(711):  if(${info} MATCHES INFO:simulate_version\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(715):  if(${info} MATCHES INFO:qnxnto\\[\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(718):  if(${info} MATCHES INFO:dialect_default\\[([^]\"]*)\\] )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(719):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_MATCH_1} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(724):  if(NOT DEFINED COMPILER_VERSION AND HAVE_COMPILER_VERSION_MAJOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(738):  if(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(740):  file(READ ${file} peoffsethex LIMIT 1 OFFSET 60 HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(741):  if(NOT peoffsethex STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(742):  string(SUBSTRING ${peoffsethex} 0 1 peoffsethex1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(743):  string(SUBSTRING ${peoffsethex} 1 1 peoffsethex2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(744):  set(peoffsetexpression ${peoffsethex1} * 16 + ${peoffsethex2} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(745):  string(REPLACE a 10 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(746):  string(REPLACE b 11 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(747):  string(REPLACE c 12 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(748):  string(REPLACE d 13 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(749):  string(REPLACE e 14 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(750):  string(REPLACE f 15 peoffsetexpression ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(751):  math(EXPR peoffset ${peoffsetexpression} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(753):  file(READ ${file} peheader LIMIT 6 OFFSET ${peoffset} HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(754):  if(peheader STREQUAL 50450000a201 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(756):  elseif(peheader STREQUAL 50450000a301 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(758):  elseif(peheader STREQUAL 50450000a601 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(760):  elseif(peheader STREQUAL 50450000a801 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(767):  if(COMPILER_ID AND NOT COMPILER_ID_TWICE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(779):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(784):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(786):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log The ${lang} compiler identification could not be found in \" ${file}\"\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(793):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(812):  if(NOT DEFINED CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(816):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(817):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(818):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(819):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(821):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(822):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(823):  set(CMAKE_${lang}_COMPILER_WRAPPER ${COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(824):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(825):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(826):  set(CMAKE_EXECUTABLE_FORMAT ${CMAKE_EXECUTABLE_FORMAT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(827):  set(COMPILER_QNXNTO ${COMPILER_QNXNTO} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(828):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(21):  set(nonlang C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__COMO__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __COMO_VERSION__ = VRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__COMO_VERSION__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__COMO_VERSION__ % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECCXX) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) || defined(__GNUG__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_aCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_CC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(45):  list(APPEND ordered_compilers Comeau )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(544):  set(MSG Compiling the ${lang} compiler identification source file \"${src}\" failed.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(552):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log ${MSG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(558):  set(COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(559):  set(COMPILER_${lang}_PRODUCED_OUTPUT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(31):  separate_arguments(testflags UNIX_COMMAND ${testflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(32):  CMAKE_DETERMINE_COMPILER_ID_BUILD(${lang} ${testflags} ${userflags} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(227):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(228):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(229):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR}/tmp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(230):  CMAKE_DETERMINE_COMPILER_ID_WRITE(${lang} ${src} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(208):  find_file(src_in ${src}.in PATHS ${CMAKE_ROOT}/Modules ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(209):  file(READ ${src_in} ID_CONTENT_IN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(211):  compiler_id_detection(CMAKE_${lang}_COMPILER_ID_CONTENT ${lang} ID_STRING VERSION_STRINGS PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(16):  if(NOT lang STREQUAL Fortran AND NOT lang STREQUAL CSharp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(17):  file(GLOB lang_files ${CMAKE_ROOT}/Modules/Compiler/*-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(19):  set(nonlang CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(20):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(21):  set(nonlang C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(24):  file(GLOB nonlang_files ${CMAKE_ROOT}/Modules/Compiler/*-${nonlang}-DetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(26):  list(REMOVE_ITEM lang_files ${nonlang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(29):  set(files ${lang_files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(30):  if(files )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(31):  foreach(file ${files} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ADSP-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if defined(__VISUALDSPVERSION__)
  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__VISUALDSPVERSION__>>24)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__VISUALDSPVERSION__>>16 & 0xFF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__VISUALDSPVERSION__>>8  & 0xFF)
#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__ARMCC_VERSION) && !defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMCC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
#if __ARMCC_VERSION >= 1000000
  /* __ARMCC_VERSION = VRRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION     % 10000)
#else
  /* __ARMCC_VERSION = VRPPPP */
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCC_VERSION/100000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCC_VERSION/10000 % 10)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCC_VERSION    % 10000)
#endif
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  # define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ARMCOMPILER_VERSION/1000000)
  # define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ARMCOMPILER_VERSION/10000 % 100)
  # define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ARMCOMPILER_VERSION     % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/ARMClang-DetermineCompiler.cmake(9):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__ARMCOMPILER_VERSION) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) && defined(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/AppleClang-DetermineCompiler.cmake(6):  string(APPEND _compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__apple_build_version__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Borland-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __BORLANDC__ = 0xVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__BORLANDC__>>8)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__BORLANDC__ & 0xFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/Clang-DetermineCompilerInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(2):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__clang_major__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__clang_minor__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__clang_patchlevel__)
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Clang-DetermineCompilerInternal.cmake(12):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__COMO__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __COMO_VERSION__ = VRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__COMO_VERSION__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__COMO_VERSION__ % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__DECCXX) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __DECCXX_VER = VVRRTPPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__DECCXX_VER/10000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__DECCXX_VER/100000  % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__DECCXX_VER         % 10000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_CRAYC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Cray-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_RELEASE_MAJOR)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_RELEASE_MINOR) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Embarcadero-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__CODEGEARC_VERSION__>>24 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__CODEGEARC_VERSION__>>16 & 0x00FF)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CODEGEARC_VERSION__     & 0xFFFF) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Fujitsu-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ghs__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GHS-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
/* __GHS_VERSION_NUMBER = VVVVRP */
# ifdef __GHS_VERSION_NUMBER
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GHS_VERSION_NUMBER / 10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GHS_VERSION_NUMBER      % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__GNUC__) || defined(__GNUG__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__GNUC__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# else
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__HP_aCC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/HP-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __HP_aCC = VVRRPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__HP_aCC/10000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__HP_aCC/100 % 100)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__HP_aCC     % 100) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(26):  set(_compiler_id_pp_test defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IAR-DetermineCompiler.cmake(28):  set(_compiler_id_version_compute 
# if defined(__VER__) && defined(__ICCARM__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 1000000)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(((__VER__) / 1000) % 1000)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@((__VER__) % 1000)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__VER__) / 100)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__VER__) - (((__VER__) / 100)*100))
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__SUBVERSION__)
#  define @PREFIX@COMPILER_VERSION_INTERNAL @MACRO_DEC@(__IAR_SYSTEMS_ICC__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__INTEL_COMPILER) || defined(__ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __INTEL_COMPILER = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__INTEL_COMPILER/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__INTEL_COMPILER/10 % 10)
# if defined(__INTEL_COMPILER_UPDATE)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER_UPDATE)
# else
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__INTEL_COMPILER   % 10)
# endif
# if defined(__INTEL_COMPILER_BUILD_DATE)
  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__INTEL_COMPILER_BUILD_DATE)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUC__)
# elif defined(__GNUG__)
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(__GNUG__)
# endif
# if defined(__GNUC_MINOR__)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(__GNUC_MINOR__)
# endif
# if defined(__GNUC_PATCHLEVEL__)
#  define @PREFIX@SIMULATE_VERSION_PATCH @MACRO_DEC@(__GNUC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Intel-DetermineCompiler.cmake(34):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif
# if defined(__GNUC__)
#  define @PREFIX@SIMULATE_ID \"GNU\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(_MSC_VER) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/MSVC-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* _MSC_VER = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# if defined(_MSC_FULL_VER)
#  if _MSC_VER >= 1400
    /* _MSC_FULL_VER = VVRRPPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 100000)
#  else
    /* _MSC_FULL_VER = VVRRPPPP */
#   define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(_MSC_FULL_VER % 10000)
#  endif
# endif
# if defined(_MSC_BUILD)
#  define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(_MSC_BUILD)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__NVCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if defined(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__CUDACC_VER_MAJOR__)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__CUDACC_VER_MINOR__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__CUDACC_VER_BUILD__)
# endif
# if defined(_MSC_VER)
   /* _MSC_VER = VVRR */
#  define @PREFIX@SIMULATE_VERSION_MAJOR @MACRO_DEC@(_MSC_VER / 100)
#  define @PREFIX@SIMULATE_VERSION_MINOR @MACRO_DEC@(_MSC_VER % 100)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/NVIDIA-DetermineCompiler.cmake(16):  set(_compiler_id_simulate 
# if defined(_MSC_VER)
#  define @PREFIX@SIMULATE_ID \"MSVC\"
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRP + 1100 */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@((__WATCOMC__ - 1100) / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PGI) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PGI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PGIC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PGIC_MINOR__)
# if defined(__PGIC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PGIC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__PATHCC__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/PathScale-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__PATHCC__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__PATHCC_MINOR__)
# if defined(__PATHCC_PATCHLEVEL__)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__PATHCC_PATCHLEVEL__)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SCO-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SCO_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__SUNPRO_CC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
# if __SUNPRO_CC >= 0x5100
   /* __SUNPRO_CC = 0xVRRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>12)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xFF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# else
   /* __SUNPRO_CC = 0xVRP */
#  define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_HEX@(__SUNPRO_CC>>8)
#  define @PREFIX@COMPILER_VERSION_MINOR @MACRO_HEX@(__SUNPRO_CC>>4 & 0xF)
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_HEX@(__SUNPRO_CC    & 0xF)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__TI_COMPILER_VERSION__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/TI-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000000)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__TI_COMPILER_VERSION__/1000   % 1000)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__TI_COMPILER_VERSION__        % 1000) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__WATCOMC__) && __WATCOMC__ < 1200 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/Watcom-DetermineCompiler.cmake(4):  set(_compiler_id_version_compute 
   /* __WATCOMC__ = VVRR */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__WATCOMC__ / 100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@((__WATCOMC__ / 10) % 10)
# if (__WATCOMC__ % 10) > 0
#  define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__WATCOMC__ % 10)
# endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XL-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(1):  set(_compiler_id_pp_test defined(__ibmxl__) && defined(__clang__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake(3):  set(_compiler_id_version_compute 
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__ibmxl_version__)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__ibmxl_release__)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__ibmxl_modification__)
# define @PREFIX@COMPILER_VERSION_TWEAK @MACRO_DEC@(__ibmxl_ptf_fix_level__)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(32):  _readFile(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(6):  include(${file} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(2):  set(_compiler_id_pp_test defined(__IBMCPP__) && defined(__COMPILER_VER__) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake(4):  include(${CMAKE_CURRENT_LIST_DIR}/IBMCPP-CXX-DetermineVersionInternal.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake(2):  set(_compiler_id_version_compute 
  /* __IBMCPP__ = VRP */
# define @PREFIX@COMPILER_VERSION_MAJOR @MACRO_DEC@(__IBMCPP__/100)
# define @PREFIX@COMPILER_VERSION_MINOR @MACRO_DEC@(__IBMCPP__/10 % 10)
# define @PREFIX@COMPILER_VERSION_PATCH @MACRO_DEC@(__IBMCPP__    % 10) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(7):  get_filename_component(name ${file} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(8):  string(REGEX REPLACE -.*  CompilerId ${name} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(9):  set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(10):  set(_compiler_id_simulate_${CompilerId} ${_compiler_id_simulate} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(11):  set(_compiler_id_pp_test_${CompilerId} ${_compiler_id_pp_test} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(35):  set(options ID_STRING VERSION_STRINGS ID_DEFINE PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(36):  set(oneValueArgs PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(37):  cmake_parse_arguments(CID ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(38):  if(CID_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(44):  if(lang STREQUAL CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(45):  list(APPEND ordered_compilers Comeau )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(49):  list(APPEND ordered_compilers Intel PathScale Embarcadero Borland Watcom OpenWatcom SunPro HP Compaq zOS XLClang XL VisualAge PGI Cray TI Fujitsu GHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(69):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(75):  list(APPEND ordered_compilers SCO ARMCC AppleClang ARMClang Clang GNU MSVC ADSP IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(86):  if(lang STREQUAL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(93):  if(lang STREQUAL CUDA )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(97):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(105):  set(pp_if #if )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(106):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(107):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n/* Version number components: V=Version, R=Revision, P=Patch
   Version date components:   YYYY=Year, MM=Month,   DD=Day  */\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(111):  foreach(Id ${ordered_compilers} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(112):  if(NOT _compiler_id_pp_test_${Id} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(115):  set(id_content ${pp_if} ${_compiler_id_pp_test_${Id}}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(116):  if(CID_ID_STRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(117):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(118):  string(CONFIGURE ${_compiler_id_simulate_${Id}} SIMULATE_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(119):  string(APPEND id_content # define ${CID_PREFIX}COMPILER_ID \"${Id}\"${SIMULATE_BLOCK} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(121):  if(CID_ID_DEFINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(125):  if(CID_VERSION_STRINGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(126):  set(PREFIX ${CID_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(127):  set(MACRO_DEC DEC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(128):  set(MACRO_HEX HEX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(129):  string(CONFIGURE ${_compiler_id_version_compute_${Id}} VERSION_BLOCK @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(130):  string(APPEND id_content ${VERSION_BLOCK}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(132):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${id_content} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(133):  set(pp_if #elif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(136):  if(CID_PLATFORM_DEFAULT_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(137):  set(platform_compiler_detection 
/* These compilers are either not known or too old to define an
  identification macro.  Try to identify the platform and guess that
  it is the native compiler.  */
#elif defined(__hpux) || defined(__hpua)
# define ${CID_PREFIX}COMPILER_ID \"HP\"

#else /* unknown compiler */
# define ${CID_PREFIX}COMPILER_ID \"\" )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(148):  string(APPEND CMAKE_${lang}_COMPILER_ID_CONTENT \n${platform_compiler_detection}\n#endif )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(151):  set(${outvar} ${CMAKE_${lang}_COMPILER_ID_CONTENT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(217):  unset(src_in CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(218):  string(CONFIGURE ${ID_CONTENT_IN} ID_CONTENT_OUT @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(219):  file(WRITE ${CMAKE_${lang}_COMPILER_ID_DIR}/${src} ${ID_CONTENT_OUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(233):  set(COMPILER_DESCRIPTION Compiler: ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1}
Build flags: ${userflags}
Id flags: ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS}
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(240):  if(${CMAKE_GENERATOR} MATCHES Visual Studio ([0-9]+) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(401):  elseif(${CMAKE_GENERATOR} MATCHES Xcode )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(481):  elseif(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(523):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(524):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${testflags} ${CMAKE_${lang}_COMPILER_ID_FLAGS_ALWAYS} ${src} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT ERROR_VARIABLE CMAKE_${lang}_COMPILER_ID_OUTPUT RESULT_VARIABLE CMAKE_${lang}_COMPILER_ID_RESULT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(539):  if(CMAKE_${lang}_COMPILER_ID_RESULT OR CMAKE_${lang}_COMPILER_ID_OUTPUT MATCHES Bad # preprocessor line )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(544):  set(MSG Compiling the ${lang} compiler identification source file \"${src}\" failed.
${COMPILER_DESCRIPTION}
The output was:
${CMAKE_${lang}_COMPILER_ID_RESULT}
${CMAKE_${lang}_COMPILER_ID_OUTPUT}

 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(552):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log ${MSG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(558):  set(COMPILER_${lang}_PRODUCED_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(559):  set(COMPILER_${lang}_PRODUCED_OUTPUT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(609):  set(COMPILER_${lang}_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(610):  set(COMPILER_${lang}_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(33):  CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR(${lang} ${COMPILER_${lang}_PRODUCED_OUTPUT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(617):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_MATCH_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(622):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(34):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(37):  foreach(file ${COMPILER_${lang}_PRODUCED_FILES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(40):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(44):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(50):  if(CMAKE_${lang}_COMPILER_ID_TOOL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(53):  elseif(NOT CMAKE_${lang}_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(58):  if(CMAKE_${lang}_COMPILER AND NOT CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(59):  foreach(userflags ${CMAKE_${lang}_COMPILER_ID_FLAGS_LIST}  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(60):  CMAKE_DETERMINE_COMPILER_ID_VENDOR(${lang} ${userflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(841):  if(NOT CMAKE_${lang}_COMPILER_ID_DIR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(851):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(60):  CMAKE_DETERMINE_COMPILER_ID_VENDOR(${lang} ${userflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(841):  if(NOT CMAKE_${lang}_COMPILER_ID_DIR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(851):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(65):  if(NOT CMAKE_${lang}_COMPILER_ID AND ${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(72):  if(lang STREQUAL CUDA AND CMAKE_${lang}_COMPILER_ID STREQUAL NVIDIA AND NOT CMAKE_${lang}_COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(88):  if(lang STREQUAL Swift AND CMAKE_${lang}_COMPILER AND NOT CMAKE_${lang}_COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(111):  if(COMPILER_QNXNTO AND CMAKE_${lang}_COMPILER_ID STREQUAL GNU )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(127):  if(NOT CMAKE_EXECUTABLE_FORMAT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(131):  if(CMAKE_GENERATOR STREQUAL Ninja AND MSVC_${lang}_ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(135):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(136):  set(CMAKE_${lang}_CL_SHOWINCLUDES_PREFIX  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(139):  set(_variant  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(140):  if(x${CMAKE_${lang}_COMPILER_ID} STREQUAL xClang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(160):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(161):  set(CMAKE_${lang}_COMPILER_FRONTEND_VARIANT  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(165):  if(CMAKE_${lang}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(181):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(182):  message(STATUS The ${lang} compiler identification is unknown )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(185):  set(CMAKE_${lang}_COMPILER_ID ${CMAKE_${lang}_COMPILER_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(186):  set(CMAKE_${lang}_PLATFORM_ID ${CMAKE_${lang}_PLATFORM_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(187):  set(CMAKE_${lang}_COMPILER_ARCHITECTURE_ID ${CMAKE_${lang}_COMPILER_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(188):  set(MSVC_${lang}_ARCHITECTURE_ID ${MSVC_${lang}_ARCHITECTURE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(190):  set(CMAKE_${lang}_XCODE_ARCHS ${CMAKE_${lang}_XCODE_ARCHS} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(191):  set(CMAKE_${lang}_CL_SHOWINCLUDES_PREFIX ${CMAKE_${lang}_CL_SHOWINCLUDES_PREFIX} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(192):  set(CMAKE_${lang}_COMPILER_FRONTEND_VARIANT ${CMAKE_${lang}_COMPILER_FRONTEND_VARIANT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(193):  set(CMAKE_${lang}_COMPILER_VERSION ${CMAKE_${lang}_COMPILER_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(194):  set(CMAKE_${lang}_COMPILER_VERSION_INTERNAL ${CMAKE_${lang}_COMPILER_VERSION_INTERNAL} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(195):  set(CMAKE_${lang}_COMPILER_WRAPPER ${CMAKE_${lang}_COMPILER_WRAPPER} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(196):  set(CMAKE_${lang}_SIMULATE_ID ${CMAKE_${lang}_SIMULATE_ID} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(197):  set(CMAKE_${lang}_SIMULATE_VERSION ${CMAKE_${lang}_SIMULATE_VERSION} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(198):  set(CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT ${CMAKE_${lang}_STANDARD_COMPUTED_DEFAULT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(199):  set(CMAKE_${lang}_COMPILER_PRODUCED_OUTPUT ${COMPILER_${lang}_PRODUCED_OUTPUT} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(200):  set(CMAKE_${lang}_COMPILER_PRODUCED_FILES ${COMPILER_${lang}_PRODUCED_FILES} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(114):  if(CMAKE_CXX_COMPILER_ID STREQUAL GNU )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(117):  if(CMAKE_CXX_PLATFORM_ID MATCHES MinGW )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(119):  elseif(CMAKE_CXX_PLATFORM_ID MATCHES Cygwin )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(140):  if(NOT _CMAKE_TOOLCHAIN_LOCATION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(153):  if(CMAKE_CROSSCOMPILING AND NOT _CMAKE_TOOLCHAIN_PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(155):  if(${CMAKE_CXX_COMPILER_ID} MATCHES GNU|Clang|QCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(175):  elseif(${CMAKE_CXX_COMPILER_ID} MATCHES TI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(187):  set(_CMAKE_PROCESSING_LANGUAGE CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(188):  include(CMakeFindBinUtils )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(24):  function(__resolve_tool_path CMAKE_TOOL SEARCH_PATH DOCSTRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(57):  __resolve_tool_path(CMAKE_LINKER ${_CMAKE_TOOLCHAIN_LOCATION} Default Linker )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(26):  if(${CMAKE_TOOL} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(31):  get_filename_component(_CMAKE_USER_TOOL_PATH ${${CMAKE_TOOL}} DIRECTORY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(33):  if(NOT _CMAKE_USER_TOOL_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(58):  __resolve_tool_path(CMAKE_MT ${_CMAKE_TOOLCHAIN_LOCATION} Default Manifest Tool )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(26):  if(${CMAKE_TOOL} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(60):  set(_CMAKE_TOOL_VARS  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(63):  if(( x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_SIMULATE_ID} STREQUAL xMSVC AND ( x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_FRONTEND_VARIANT} STREQUAL xMSVC OR NOT x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL xClang ) ) OR x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL xMSVC OR ( CMAKE_HOST_WIN32 AND x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL xPGI ) OR ( CMAKE_HOST_WIN32 AND x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL xNVIDIA ) OR ( CMAKE_GENERATOR MATCHES Visual Studio AND NOT CMAKE_VS_PLATFORM_NAME STREQUAL Tegra-Android ) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(83):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(84):  if(CMAKE_C_COMPILER_EXTERNAL_TOOLCHAIN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(87):  if(CMAKE_CXX_COMPILER_EXTERNAL_TOOLCHAIN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(91):  if(${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL Clang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(104):  find_program(CMAKE_AR NAMES ${_CMAKE_TOOLCHAIN_PREFIX}ar${_CMAKE_TOOLCHAIN_SUFFIX} ${_CMAKE_ADDITIONAL_AR_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(106):  find_program(CMAKE_RANLIB NAMES ${_CMAKE_TOOLCHAIN_PREFIX}ranlib ${_CMAKE_ADDITIONAL_RANLIB_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(107):  if(NOT CMAKE_RANLIB )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(112):  find_program(CMAKE_STRIP NAMES ${_CMAKE_TOOLCHAIN_PREFIX}strip${_CMAKE_TOOLCHAIN_SUFFIX} ${_CMAKE_ADDITIONAL_STRIP_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(113):  find_program(CMAKE_LINKER NAMES ${_CMAKE_TOOLCHAIN_PREFIX}ld ${_CMAKE_ADDITIONAL_LINKER_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(114):  find_program(CMAKE_NM NAMES ${_CMAKE_TOOLCHAIN_PREFIX}nm ${_CMAKE_ADDITIONAL_NM_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(115):  find_program(CMAKE_OBJDUMP NAMES ${_CMAKE_TOOLCHAIN_PREFIX}objdump ${_CMAKE_ADDITIONAL_OBJDUMP_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(116):  find_program(CMAKE_OBJCOPY NAMES ${_CMAKE_TOOLCHAIN_PREFIX}objcopy ${_CMAKE_ADDITIONAL_OBJCOPY_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(117):  find_program(CMAKE_READELF NAMES ${_CMAKE_TOOLCHAIN_PREFIX}readelf ${_CMAKE_ADDITIONAL_READELF_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(118):  find_program(CMAKE_DLLTOOL NAMES ${_CMAKE_TOOLCHAIN_PREFIX}dlltool ${_CMAKE_ADDITIONAL_DLLTOOL_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(119):  find_program(CMAKE_ADDR2LINE NAMES ${_CMAKE_TOOLCHAIN_PREFIX}addr2line ${_CMAKE_ADDITIONAL_ADDR2LINE_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(121):  list(APPEND _CMAKE_TOOL_VARS AR RANLIB STRIP LINKER NM OBJDUMP OBJCOPY READELF DLLTOOL ADDR2LINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(124):  if(CMAKE_PLATFORM_HAS_INSTALLNAME )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(135):  foreach(var IN LISTS _CMAKE_TOOL_VARS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(142):  unset(_CMAKE_TOOL_VARS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(143):  unset(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(189):  include(Compiler/${CMAKE_CXX_COMPILER_ID}-FindBinUtils OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(190):  unset(_CMAKE_PROCESSING_LANGUAGE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(192):  if(CMAKE_CXX_COMPILER_ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(195):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(196):  set(_SET_CMAKE_CXX_COMPILER_ARCHITECTURE_ID  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(199):  if(MSVC_CXX_ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(204):  if(CMAKE_CXX_XCODE_ARCHS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(210):  configure_file(${CMAKE_ROOT}/Modules/CMakeCXXCompiler.cmake.in ${CMAKE_PLATFORM_INFO_DIR}/CMakeCXXCompiler.cmake @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake(215):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(1):  set(CMAKE_CXX_COMPILER C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/mccppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(2):  set(CMAKE_CXX_COMPILER_ARG1  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(3):  set(CMAKE_CXX_COMPILER_ID  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(4):  set(CMAKE_CXX_COMPILER_VERSION  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(5):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(6):  set(CMAKE_CXX_COMPILER_WRAPPER  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(7):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 98 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(8):  set(CMAKE_CXX_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(9):  set(CMAKE_CXX98_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(10):  set(CMAKE_CXX11_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(11):  set(CMAKE_CXX14_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(12):  set(CMAKE_CXX17_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(13):  set(CMAKE_CXX20_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(15):  set(CMAKE_CXX_PLATFORM_ID  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(16):  set(CMAKE_CXX_SIMULATE_ID  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(17):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(18):  set(CMAKE_CXX_SIMULATE_VERSION  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(22):  set(CMAKE_AR C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/libppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(23):  set(CMAKE_CXX_COMPILER_AR  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(24):  set(CMAKE_RANLIB : )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(25):  set(CMAKE_CXX_COMPILER_RANLIB  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(26):  set(CMAKE_LINKER C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/lnkppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(27):  set(CMAKE_MT  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(28):  set(CMAKE_COMPILER_IS_GNUCXX )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(29):  set(CMAKE_CXX_COMPILER_LOADED 1 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(30):  set(CMAKE_CXX_COMPILER_WORKS )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(31):  set(CMAKE_CXX_ABI_COMPILED )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(32):  set(CMAKE_COMPILER_IS_MINGW )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(33):  set(CMAKE_COMPILER_IS_CYGWIN )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(34):  if(CMAKE_COMPILER_IS_CYGWIN )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(39):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(41):  if(CMAKE_COMPILER_IS_MINGW )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(44):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(45):  set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;CPP )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(46):  set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(48):  foreach(lang C OBJC OBJCXX )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(49):  if(CMAKE_${lang}_COMPILER_ID_RUN )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(50):  foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(51):  list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension} )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(51):  list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension} )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(49):  if(CMAKE_${lang}_COMPILER_ID_RUN )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(49):  if(CMAKE_${lang}_COMPILER_ID_RUN )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(56):  set(CMAKE_CXX_LINKER_PREFERENCE 30 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(57):  set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(60):  set(CMAKE_CXX_SIZEOF_DATA_PTR  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(61):  set(CMAKE_CXX_COMPILER_ABI  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(62):  set(CMAKE_CXX_LIBRARY_ARCHITECTURE  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(64):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(68):  if(CMAKE_CXX_COMPILER_ABI )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(72):  if(CMAKE_CXX_LIBRARY_ARCHITECTURE )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(76):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(77):  if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(85):  set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(86):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(87):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(88):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(14):  set(APPLE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(15):  set(UNIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(16):  set(CYGWIN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(17):  set(WIN32 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(21):  include(CMakeGenericSystem )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(4):  include(CMakeInitializeConfigs )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(4):  include_guard(GLOBAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(8):  function(cmake_initialize_per_config_variable _PREFIX _DOCSTRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(6):  set(CMAKE_SHARED_LIBRARY_C_FLAGS  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(7):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(8):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(9):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(10):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(11):  set(CMAKE_INCLUDE_FLAG_C -I )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(12):  set(CMAKE_LIBRARY_PATH_FLAG -L )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(13):  set(CMAKE_LIBRARY_PATH_TERMINATOR  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(14):  set(CMAKE_LINK_LIBRARY_FLAG -l )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(16):  set(CMAKE_LINK_LIBRARY_SUFFIX  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(17):  set(CMAKE_STATIC_LIBRARY_PREFIX lib )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(18):  set(CMAKE_STATIC_LIBRARY_SUFFIX .a )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(19):  set(CMAKE_SHARED_LIBRARY_PREFIX lib )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(20):  set(CMAKE_SHARED_LIBRARY_SUFFIX .so )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(21):  set(CMAKE_EXECUTABLE_SUFFIX  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(22):  set(CMAKE_DL_LIBS dl )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(24):  set(CMAKE_FIND_LIBRARY_PREFIXES lib )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(25):  set(CMAKE_FIND_LIBRARY_SUFFIXES .so .a )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(27):  set(CMAKE_AUTOGEN_ORIGIN_DEPENDS ON )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(28):  set(CMAKE_AUTOMOC_COMPILER_PREDEFINES ON )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(29):  set(CMAKE_AUTOMOC_PATH_PREFIX ON )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(30):  set(CMAKE_AUTOMOC_MACRO_NAMES Q_OBJECT Q_GADGET Q_NAMESPACE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(33):  set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(35):  set(CMAKE_SKIP_RPATH NO CACHE BOOL If set, runtime paths are not added when using shared libraries. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(37):  set(CMAKE_SKIP_INSTALL_RPATH NO CACHE BOOL If set, runtime paths are not added when installing shared libraries, but are added when building. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(40):  set(CMAKE_VERBOSE_MAKEFILE FALSE CACHE BOOL If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(42):  if(CMAKE_GENERATOR MATCHES Make )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(43):  set(CMAKE_COLOR_MAKEFILE ON CACHE BOOL Enable/Disable color output during build. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(46):  mark_as_advanced(CMAKE_COLOR_MAKEFILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(47):  if(DEFINED CMAKE_RULE_MESSAGES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(50):  if(DEFINED CMAKE_TARGET_MESSAGES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(53):  if(CMAKE_GENERATOR MATCHES Unix Makefiles )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(54):  set(CMAKE_EXPORT_COMPILE_COMMANDS OFF CACHE BOOL Enable/Disable output of compile commands during generation. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(57):  mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(61):  if(CMAKE_GENERATOR MATCHES Ninja )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(75):  function(GetDefaultWindowsPrefixBase var )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(163):  if(NOT DEFINED CMAKE_INSTALL_PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(164):  set(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(168):  if(CMAKE_HOST_UNIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(171):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(172):  GetDefaultWindowsPrefixBase(CMAKE_GENERIC_PROGRAM_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(82):  if(${CMAKE_GENERATOR} MATCHES (Win64|IA64) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(84):  elseif(${CMAKE_GENERATOR_PLATFORM} MATCHES ARM64 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(86):  elseif(${CMAKE_GENERATOR} MATCHES ARM )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(88):  elseif(${CMAKE_SIZEOF_VOID_P} STREQUAL 8 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(90):  elseif($ENV{LIB} MATCHES (amd64|ia64) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(94):  if(NOT arch_hint )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(95):  set(arch_hint x86 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(116):  set(_PREFIX_ENV_VAR ProgramFiles )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(118):  if($ENV{ProgramW6432} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(122):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(124):  if($ENV{ProgramW6432} STREQUAL $ENV{ProgramFiles} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(127):  if(NOT ${arch_hint} STREQUAL x64 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(129):  set(_PREFIX_ENV_VAR ProgramFiles(x86) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(147):  if(NOT $ENV{${_PREFIX_ENV_VAR}} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(148):  file(TO_CMAKE_PATH $ENV{${_PREFIX_ENV_VAR}} _base )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(155):  set(${var} ${_base} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(173):  set(CMAKE_INSTALL_PREFIX ${CMAKE_GENERIC_PROGRAM_FILES}/${PROJECT_NAME} CACHE PATH Install path prefix, prepended onto install directories. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(176):  set(CMAKE_GENERIC_PROGRAM_FILES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(181):  set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME Unspecified )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(183):  mark_as_advanced(CMAKE_SKIP_RPATH CMAKE_SKIP_INSTALL_RPATH CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(24):  set(CMAKE_SYSTEM_INFO_FILE Platform/${CMAKE_SYSTEM_NAME} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(26):  include(${CMAKE_SYSTEM_INFO_FILE} OPTIONAL RESULT_VARIABLE _INCLUDED_SYSTEM_INFO_FILE )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(38):  set(CMAKE_IMPORT_LIBRARY_PREFIX  )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(39):  set(CMAKE_SHARED_LIBRARY_PREFIX  )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(40):  set(CMAKE_SHARED_MODULE_PREFIX  )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(41):  set(CMAKE_STATIC_LIBRARY_PREFIX  )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(43):  set(CMAKE_EXECUTABLE_SUFFIX .exe )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(44):  set(CMAKE_IMPORT_LIBRARY_SUFFIX .lib )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(45):  set(CMAKE_SHARED_LIBRARY_SUFFIX .lib )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(46):  set(CMAKE_SHARED_MODULE_SUFFIX .lib )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(47):  set(CMAKE_STATIC_LIBRARY_SUFFIX .lib )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(49):  set(CMAKE_C_FLAGS \"-J${DSPACE_RTLIB}\" )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(51):  set(CMAKE_INCLUDE_FLAG_C -I )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(52):  set(CMAKE_INCLUDE_FLAG_CXX -I )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(54):  add_definitions(-D__DSPACE__ )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(55):  remove_definitions(-DLINUX )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(56):  remove_definitions(-D__LINUX__ )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(28):  if(NOT _INCLUDED_SYSTEM_INFO_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(42):  if(CMAKE_EXTRA_GENERATOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(52):  if(NOT CMAKE_MODULE_EXISTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(53):  set(CMAKE_SHARED_MODULE_PREFIX ${CMAKE_SHARED_LIBRARY_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(54):  set(CMAKE_SHARED_MODULE_SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(58):  set(CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(11):  include(CMakeLanguageInformation )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeLanguageInformation.cmake(9):  macro(__cmake_include_compiler_wrapper lang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(15):  if(UNIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(17):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(18):  set(CMAKE_C_OUTPUT_EXTENSION .obj )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(21):  set(_INCLUDED_FILE 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(24):  if(CMAKE_C_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(28):  set(CMAKE_BASE_NAME )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(29):  get_filename_component(CMAKE_BASE_NAME ${CMAKE_C_COMPILER} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(30):  if(CMAKE_COMPILER_IS_GNUCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(36):  if(CMAKE_SYSTEM_PROCESSOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(37):  if(CMAKE_C_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(40):  if(NOT _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(41):  include(Platform/${CMAKE_EFFECTIVE_SYSTEM_NAME}-${CMAKE_BASE_NAME}-${CMAKE_SYSTEM_PROCESSOR} OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(47):  if(CMAKE_C_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(51):  if(NOT _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(52):  include(Platform/${CMAKE_EFFECTIVE_SYSTEM_NAME}-${CMAKE_BASE_NAME} OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(57):  if(CMAKE_C_COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(65):  if(NOT _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(66):  include(Platform/${CMAKE_SYSTEM_NAME} OPTIONAL )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(38):  set(CMAKE_IMPORT_LIBRARY_PREFIX  )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(39):  set(CMAKE_SHARED_LIBRARY_PREFIX  )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(40):  set(CMAKE_SHARED_MODULE_PREFIX  )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(41):  set(CMAKE_STATIC_LIBRARY_PREFIX  )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(43):  set(CMAKE_EXECUTABLE_SUFFIX .exe )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(44):  set(CMAKE_IMPORT_LIBRARY_SUFFIX .lib )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(45):  set(CMAKE_SHARED_LIBRARY_SUFFIX .lib )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(46):  set(CMAKE_SHARED_MODULE_SUFFIX .lib )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(47):  set(CMAKE_STATIC_LIBRARY_SUFFIX .lib )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(49):  set(CMAKE_C_FLAGS \"-J${DSPACE_RTLIB}\" )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(51):  set(CMAKE_INCLUDE_FLAG_C -I )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(52):  set(CMAKE_INCLUDE_FLAG_CXX -I )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(54):  add_definitions(-D__DSPACE__ )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(55):  remove_definitions(-DLINUX )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(56):  remove_definitions(-D__LINUX__ )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(69):  if(CMAKE_C_SIZEOF_DATA_PTR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(82):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(88):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(98):  if(NOT CMAKE_MODULE_EXISTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(99):  set(CMAKE_SHARED_MODULE_C_FLAGS ${CMAKE_SHARED_LIBRARY_C_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(100):  set(CMAKE_SHARED_MODULE_CREATE_C_FLAGS ${CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(103):  set(CMAKE_C_FLAGS_INIT $ENV{CFLAGS} ${CMAKE_C_FLAGS_INIT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(105):  cmake_initialize_per_config_variable(CMAKE_C_FLAGS Flags used by the C compiler )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP ${${_PREFIX}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(${_PREFIX} ${_INIT} CACHE STRING ${_DOCSTRING} during all build types. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(${_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS ${CMAKE_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(107):  if(CMAKE_C_STANDARD_LIBRARIES_INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(113):  include(CMakeCommonLanguageInclude )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(9):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT  $ENV{LDFLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(10):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT  $ENV{LDFLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(11):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT  $ENV{LDFLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(13):  cmake_initialize_per_config_variable(CMAKE_EXE_LINKER_FLAGS Flags used by the linker )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP ${${_PREFIX}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(${_PREFIX} ${_INIT} CACHE STRING ${_DOCSTRING} during all build types. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(${_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS ${CMAKE_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(14):  cmake_initialize_per_config_variable(CMAKE_SHARED_LINKER_FLAGS Flags used by the linker during the creation of shared libraries )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP ${${_PREFIX}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(${_PREFIX} ${_INIT} CACHE STRING ${_DOCSTRING} during all build types. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(${_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS ${CMAKE_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(15):  cmake_initialize_per_config_variable(CMAKE_MODULE_LINKER_FLAGS Flags used by the linker during the creation of modules )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP ${${_PREFIX}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(${_PREFIX} ${_INIT} CACHE STRING ${_DOCSTRING} during all build types. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(${_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS ${CMAKE_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(16):  cmake_initialize_per_config_variable(CMAKE_STATIC_LINKER_FLAGS Flags used by the linker during the creation of static libraries )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP ${${_PREFIX}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(${_PREFIX} ${_INIT} CACHE STRING ${_DOCSTRING} during all build types. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(${_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS ${CMAKE_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(19):  set(CMAKE_BUILD_TOOL ${CMAKE_MAKE_PROGRAM} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(21):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(143):  if(NOT CMAKE_C_CREATE_SHARED_LIBRARY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(144):  set(CMAKE_C_CREATE_SHARED_LIBRARY <CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(149):  if(NOT CMAKE_C_CREATE_SHARED_MODULE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(150):  set(CMAKE_C_CREATE_SHARED_MODULE ${CMAKE_C_CREATE_SHARED_LIBRARY} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(155):  if(NOT DEFINED CMAKE_C_ARCHIVE_CREATE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(158):  if(NOT DEFINED CMAKE_C_ARCHIVE_APPEND )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(161):  if(NOT DEFINED CMAKE_C_ARCHIVE_FINISH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(162):  set(CMAKE_C_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(166):  if(NOT CMAKE_C_COMPILE_OBJECT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(167):  set(CMAKE_C_COMPILE_OBJECT <CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT>   -c <SOURCE> )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(171):  if(NOT CMAKE_C_LINK_EXECUTABLE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(172):  set(CMAKE_C_LINK_EXECUTABLE <CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES> )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(176):  if(NOT CMAKE_EXECUTABLE_RUNTIME_C_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(177):  set(CMAKE_EXECUTABLE_RUNTIME_C_FLAG ${CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(180):  if(NOT CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(181):  set(CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP ${CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(184):  if(NOT CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(185):  set(CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG ${CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCInformation.cmake(188):  set(CMAKE_C_INFORMATION_LOADED 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(5):  if(CMAKE_C_COMPILER_FORCED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(12):  include(CMakeTestCompilerCommon )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(5):  function(PrintTestCompilerStatus LANG MSG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(10):  macro(__TestCompiler_setTryCompileTargetType )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(22):  macro(__TestCompiler_restoreTryCompileTargetType )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(15):  set(__CMAKE_SAVED_TRY_COMPILE_TARGET_TYPE ${CMAKE_TRY_COMPILE_TARGET_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(16):  if(_CMAKE_FEATURE_DETECTION_TARGET_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(22):  unset(CMAKE_C_COMPILER_WORKS CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(29):  if(NOT CMAKE_C_COMPILER_WORKS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(30):  PrintTestCompilerStatus(C  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(6):  message(STATUS Check for working ${LANG} compiler: ${CMAKE_${LANG}_COMPILER}${MSG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(31):  __TestCompiler_setTryCompileTargetType()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(11):  if(NOT CMAKE_TRY_COMPILE_TARGET_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(12):  if(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(32):  file(WRITE ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeTmp/testCCompiler.c #ifdef __cplusplus\n # error \"The CMAKE_C_COMPILER is set to a C++ compiler\"\n #endif\n #if defined(__CLASSIC_C__)\n int main(argc, argv)\n   int argc;\n   char* argv[];\n #else\n int main(int argc, char* argv[])\n #endif\n { (void)argv; return argc-1;}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(44):  try_compile(CMAKE_C_COMPILER_WORKS ${CMAKE_BINARY_DIR} ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeTmp/testCCompiler.c OUTPUT_VARIABLE __CMAKE_C_COMPILER_OUTPUT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(48):  set(CMAKE_C_COMPILER_WORKS ${CMAKE_C_COMPILER_WORKS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(49):  unset(CMAKE_C_COMPILER_WORKS CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(50):  set(C_TEST_WAS_RUN 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(51):  __TestCompiler_restoreTryCompileTargetType()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(23):  if(__CMAKE_TEST_COMPILER_TARGET_TYPE_RESTORE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(54):  if(NOT CMAKE_C_COMPILER_WORKS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(64):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(65):  if(C_TEST_WAS_RUN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(66):  PrintTestCompilerStatus(C  -- works )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(6):  message(STATUS Check for working ${LANG} compiler: ${CMAKE_${LANG}_COMPILER}${MSG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(67):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Determining if the C compiler works passed with  the following output:\n${__CMAKE_C_COMPILER_OUTPUT}\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(73):  include(${CMAKE_ROOT}/Modules/CMakeDetermineCompilerABI.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(9):  include(${CMAKE_ROOT}/Modules/CMakeParseImplicitIncludeInfo.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeParseImplicitIncludeInfo.cmake(9):  function(cmake_parse_implicit_include_line line lang id_var log_var state_var )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeParseImplicitIncludeInfo.cmake(162):  function(cmake_parse_implicit_include_info text lang dir_var log_var state_var )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(10):  include(${CMAKE_ROOT}/Modules/CMakeParseImplicitLinkInfo.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeParseImplicitLinkInfo.cmake(4):  cmake_policy(PUSH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeParseImplicitLinkInfo.cmake(5):  cmake_policy(SET CMP0053 NEW )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeParseImplicitLinkInfo.cmake(6):  cmake_policy(SET CMP0054 NEW )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeParseImplicitLinkInfo.cmake(12):  function(CMAKE_PARSE_IMPLICIT_LINK_INFO text lib_var dir_var fwk_var log_var obj_regex )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeParseImplicitLinkInfo.cmake(204):  cmake_policy(POP )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(11):  include(CMakeTestCompilerCommon )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(5):  function(PrintTestCompilerStatus LANG MSG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(10):  macro(__TestCompiler_setTryCompileTargetType )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(22):  macro(__TestCompiler_restoreTryCompileTargetType )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(13):  function(CMAKE_DETERMINE_COMPILER_ABI lang src )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(74):  CMAKE_DETERMINE_COMPILER_ABI(C ${CMAKE_ROOT}/Modules/CMakeCCompilerABI.c )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(14):  if(NOT DEFINED CMAKE_${lang}_ABI_COMPILED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(15):  message(STATUS Detecting ${lang} compiler ABI info )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(18):  set(BIN ${CMAKE_PLATFORM_INFO_DIR}/CMakeDetermineCompilerABI_${lang}.bin )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(19):  set(CMAKE_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(20):  set(COMPILE_DEFINITIONS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(21):  if(DEFINED CMAKE_${lang}_VERBOSE_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(25):  if(DEFINED CMAKE_${lang}_VERBOSE_COMPILE_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(28):  if(NOT x${CMAKE_${lang}_COMPILER_ID} STREQUAL xMSVC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(31):  list(APPEND CMAKE_FLAGS -DCMAKE_${lang}_STANDARD_LIBRARIES= )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(33):  __TestCompiler_setTryCompileTargetType()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(11):  if(NOT CMAKE_TRY_COMPILE_TARGET_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(12):  if(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(38):  set(_orig_lc_all $ENV{LC_ALL} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(39):  set(_orig_lc_messages $ENV{LC_MESSAGES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(40):  set(_orig_lang $ENV{LANG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(41):  set(ENV{LC_ALL} C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(42):  set(ENV{LC_MESSAGES} C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(43):  set(ENV{LANG} C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(45):  try_compile(CMAKE_${lang}_ABI_COMPILED ${CMAKE_BINARY_DIR} ${src} CMAKE_FLAGS ${CMAKE_FLAGS} --no-warn-unused-cli COMPILE_DEFINITIONS ${COMPILE_DEFINITIONS} OUTPUT_VARIABLE OUTPUT COPY_FILE ${BIN} COPY_FILE_ERROR _copy_error __CMAKE_INTERNAL ABI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(58):  set(ENV{LC_ALL} ${_orig_lc_all} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(59):  set(ENV{LC_MESSAGES} ${_orig_lc_messages} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(60):  set(ENV{LANG} ${_orig_lang} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(63):  set(CMAKE_${lang}_ABI_COMPILED ${CMAKE_${lang}_ABI_COMPILED} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(64):  unset(CMAKE_${lang}_ABI_COMPILED CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(65):  set(CMAKE_${lang}_ABI_COMPILED ${CMAKE_${lang}_ABI_COMPILED} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(68):  if(CMAKE_${lang}_ABI_COMPILED AND NOT _copy_error )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(168):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(169):  message(STATUS Detecting ${lang} compiler ABI info - failed )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(170):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Detecting ${lang} compiler ABI info failed to compile with the following output:\n${OUTPUT}\n${_copy_error}\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(76):  include(${CMAKE_ROOT}/Modules/CMakeDetermineCompileFeatures.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompileFeatures.cmake(5):  function(cmake_determine_compile_features lang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(77):  CMAKE_DETERMINE_COMPILE_FEATURES(C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompileFeatures.cmake(7):  if(lang STREQUAL C AND COMMAND cmake_record_c_compile_features )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompileFeatures.cmake(45):  elseif(lang STREQUAL CXX AND COMMAND cmake_record_cxx_compile_features )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(80):  configure_file(${CMAKE_ROOT}/Modules/CMakeCCompiler.cmake.in ${CMAKE_PLATFORM_INFO_DIR}/CMakeCCompiler.cmake @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(85):  include(${CMAKE_PLATFORM_INFO_DIR}/CMakeCCompiler.cmake )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(1):  set(CMAKE_C_COMPILER C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/mccppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(2):  set(CMAKE_C_COMPILER_ARG1  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(3):  set(CMAKE_C_COMPILER_ID  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(4):  set(CMAKE_C_COMPILER_VERSION  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(5):  set(CMAKE_C_COMPILER_VERSION_INTERNAL  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(6):  set(CMAKE_C_COMPILER_WRAPPER  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(7):  set(CMAKE_C_STANDARD_COMPUTED_DEFAULT 90 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(8):  set(CMAKE_C_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(9):  set(CMAKE_C90_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(10):  set(CMAKE_C99_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(11):  set(CMAKE_C11_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(13):  set(CMAKE_C_PLATFORM_ID  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(14):  set(CMAKE_C_SIMULATE_ID  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(15):  set(CMAKE_C_COMPILER_FRONTEND_VARIANT  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(16):  set(CMAKE_C_SIMULATE_VERSION  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(20):  set(CMAKE_AR C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/libppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(21):  set(CMAKE_C_COMPILER_AR  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(22):  set(CMAKE_RANLIB : )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(23):  set(CMAKE_C_COMPILER_RANLIB  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(24):  set(CMAKE_LINKER C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/lnkppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(25):  set(CMAKE_MT  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(26):  set(CMAKE_COMPILER_IS_GNUCC )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(27):  set(CMAKE_C_COMPILER_LOADED 1 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(28):  set(CMAKE_C_COMPILER_WORKS TRUE )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(29):  set(CMAKE_C_ABI_COMPILED FALSE )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(30):  set(CMAKE_COMPILER_IS_MINGW )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(31):  set(CMAKE_COMPILER_IS_CYGWIN )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(32):  if(CMAKE_COMPILER_IS_CYGWIN )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(37):  set(CMAKE_C_COMPILER_ENV_VAR CC )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(39):  if(CMAKE_COMPILER_IS_MINGW )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(42):  set(CMAKE_C_COMPILER_ID_RUN 1 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(43):  set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(44):  set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(45):  set(CMAKE_C_LINKER_PREFERENCE 10 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(48):  set(CMAKE_C_SIZEOF_DATA_PTR  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(49):  set(CMAKE_C_COMPILER_ABI  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(50):  set(CMAKE_C_LIBRARY_ARCHITECTURE  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(52):  if(CMAKE_C_SIZEOF_DATA_PTR )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(56):  if(CMAKE_C_COMPILER_ABI )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(60):  if(CMAKE_C_LIBRARY_ARCHITECTURE )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(64):  set(CMAKE_C_CL_SHOWINCLUDES_PREFIX  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(65):  if(CMAKE_C_CL_SHOWINCLUDES_PREFIX )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(73):  set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(74):  set(CMAKE_C_IMPLICIT_LINK_LIBRARIES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(75):  set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCCompiler.cmake(76):  set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(87):  if(CMAKE_C_SIZEOF_DATA_PTR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(95):  set(CMAKE_TRY_COMPILE_TARGET_TYPE ${__CMAKE_SAVED_TRY_COMPILE_TARGET_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(96):  unset(__CMAKE_SAVED_TRY_COMPILE_TARGET_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake(97):  unset(__CMAKE_C_COMPILER_OUTPUT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(11):  include(CMakeLanguageInformation )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeLanguageInformation.cmake(9):  macro(__cmake_include_compiler_wrapper lang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(15):  if(UNIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(17):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(18):  set(CMAKE_CXX_OUTPUT_EXTENSION .obj )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(21):  set(_INCLUDED_FILE 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(24):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(28):  set(CMAKE_BASE_NAME )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(29):  get_filename_component(CMAKE_BASE_NAME ${CMAKE_CXX_COMPILER} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(31):  if(CMAKE_COMPILER_IS_GNUCXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(37):  if(CMAKE_SYSTEM_PROCESSOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(38):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(41):  if(NOT _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(42):  include(Platform/${CMAKE_EFFECTIVE_SYSTEM_NAME}-${CMAKE_BASE_NAME}-${CMAKE_SYSTEM_PROCESSOR} OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(47):  if(CMAKE_CXX_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(50):  if(NOT _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(51):  include(Platform/${CMAKE_EFFECTIVE_SYSTEM_NAME}-${CMAKE_BASE_NAME} OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(56):  if(CMAKE_CXX_COMPILER_WRAPPER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(64):  if(NOT _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(65):  include(Platform/${CMAKE_SYSTEM_NAME} OPTIONAL )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(38):  set(CMAKE_IMPORT_LIBRARY_PREFIX  )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(39):  set(CMAKE_SHARED_LIBRARY_PREFIX  )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(40):  set(CMAKE_SHARED_MODULE_PREFIX  )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(41):  set(CMAKE_STATIC_LIBRARY_PREFIX  )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(43):  set(CMAKE_EXECUTABLE_SUFFIX .exe )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(44):  set(CMAKE_IMPORT_LIBRARY_SUFFIX .lib )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(45):  set(CMAKE_SHARED_LIBRARY_SUFFIX .lib )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(46):  set(CMAKE_SHARED_MODULE_SUFFIX .lib )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(47):  set(CMAKE_STATIC_LIBRARY_SUFFIX .lib )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(49):  set(CMAKE_C_FLAGS \"-J${DSPACE_RTLIB}\" )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(51):  set(CMAKE_INCLUDE_FLAG_C -I )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(52):  set(CMAKE_INCLUDE_FLAG_CXX -I )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(54):  add_definitions(-D__DSPACE__ )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(55):  remove_definitions(-DLINUX )
C:/acados/cmake/Platform/dSpaceDS1401.cmake(56):  remove_definitions(-D__LINUX__ )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(68):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(81):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(87):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(97):  if(NOT CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(98):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS ${CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(101):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_PIC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(102):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC ${CMAKE_C_COMPILE_OPTIONS_PIC} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(105):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_PIE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(106):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE ${CMAKE_C_COMPILE_OPTIONS_PIE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(108):  if(NOT CMAKE_CXX_LINK_OPTIONS_PIE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(109):  set(CMAKE_CXX_LINK_OPTIONS_PIE ${CMAKE_C_LINK_OPTIONS_PIE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(111):  if(NOT CMAKE_CXX_LINK_OPTIONS_NO_PIE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(112):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE ${CMAKE_C_LINK_OPTIONS_NO_PIE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(115):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_DLL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(116):  set(CMAKE_CXX_COMPILE_OPTIONS_DLL ${CMAKE_C_COMPILE_OPTIONS_DLL} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(119):  if(NOT CMAKE_SHARED_LIBRARY_CXX_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(120):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS ${CMAKE_SHARED_LIBRARY_C_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(123):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(124):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS ${CMAKE_SHARED_LIBRARY_LINK_C_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(127):  if(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(128):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG ${CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(131):  if(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(132):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP ${CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(135):  if(NOT CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(136):  set(CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG ${CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(139):  if(NOT DEFINED CMAKE_EXE_EXPORTS_CXX_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(140):  set(CMAKE_EXE_EXPORTS_CXX_FLAG ${CMAKE_EXE_EXPORTS_C_FLAG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(143):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(144):  set(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG ${CMAKE_SHARED_LIBRARY_SONAME_C_FLAG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(147):  if(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(148):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG ${CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(151):  if(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(152):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP ${CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(155):  if(NOT CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(156):  set(CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG ${CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(159):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(160):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH ${CMAKE_SHARED_LIBRARY_LINK_C_WITH_RUNTIME_PATH} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(163):  if(NOT CMAKE_INCLUDE_FLAG_CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(170):  if(NOT CMAKE_MODULE_EXISTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(171):  set(CMAKE_SHARED_MODULE_CXX_FLAGS ${CMAKE_SHARED_LIBRARY_CXX_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(172):  set(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS ${CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(176):  if(NOT CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(180):  if(NOT CMAKE_SHARED_MODULE_CXX_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(181):  set(CMAKE_SHARED_MODULE_CXX_FLAGS ${CMAKE_SHARED_MODULE_C_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(185):  foreach(type SHARED_LIBRARY SHARED_MODULE EXE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_${type}_LINK_STATIC_CXX_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(187):  set(CMAKE_${type}_LINK_STATIC_CXX_FLAGS ${CMAKE_${type}_LINK_STATIC_C_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(191):  set(CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS ${CMAKE_${type}_LINK_DYNAMIC_C_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_${type}_LINK_STATIC_CXX_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(187):  set(CMAKE_${type}_LINK_STATIC_CXX_FLAGS ${CMAKE_${type}_LINK_STATIC_C_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(191):  set(CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS ${CMAKE_${type}_LINK_DYNAMIC_C_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_${type}_LINK_STATIC_CXX_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(187):  set(CMAKE_${type}_LINK_STATIC_CXX_FLAGS ${CMAKE_${type}_LINK_STATIC_C_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(191):  set(CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS ${CMAKE_${type}_LINK_DYNAMIC_C_FLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(200):  set(CMAKE_CXX_FLAGS_INIT $ENV{CXXFLAGS} ${CMAKE_CXX_FLAGS_INIT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(202):  cmake_initialize_per_config_variable(CMAKE_CXX_FLAGS Flags used by the CXX compiler )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP ${${_PREFIX}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(${_PREFIX} ${_INIT} CACHE STRING ${_DOCSTRING} during all build types. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(${_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS ${CMAKE_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(204):  if(CMAKE_CXX_STANDARD_LIBRARIES_INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(210):  include(CMakeCommonLanguageInclude )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(9):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT  $ENV{LDFLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(10):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT  $ENV{LDFLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(11):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT  $ENV{LDFLAGS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(13):  cmake_initialize_per_config_variable(CMAKE_EXE_LINKER_FLAGS Flags used by the linker )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP ${${_PREFIX}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(${_PREFIX} ${_INIT} CACHE STRING ${_DOCSTRING} during all build types. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(${_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS ${CMAKE_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(14):  cmake_initialize_per_config_variable(CMAKE_SHARED_LINKER_FLAGS Flags used by the linker during the creation of shared libraries )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP ${${_PREFIX}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(${_PREFIX} ${_INIT} CACHE STRING ${_DOCSTRING} during all build types. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(${_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS ${CMAKE_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(15):  cmake_initialize_per_config_variable(CMAKE_MODULE_LINKER_FLAGS Flags used by the linker during the creation of modules )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP ${${_PREFIX}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(${_PREFIX} ${_INIT} CACHE STRING ${_DOCSTRING} during all build types. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(${_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS ${CMAKE_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(16):  cmake_initialize_per_config_variable(CMAKE_STATIC_LINKER_FLAGS Flags used by the linker during the creation of static libraries )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP ${${_PREFIX}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(${_PREFIX} ${_INIT} CACHE STRING ${_DOCSTRING} during all build types. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(${_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS ${CMAKE_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(19):  set(CMAKE_BUILD_TOOL ${CMAKE_MAKE_PROGRAM} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(21):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(239):  if(NOT CMAKE_CXX_CREATE_SHARED_LIBRARY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(240):  set(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(245):  if(NOT CMAKE_CXX_CREATE_SHARED_MODULE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(246):  set(CMAKE_CXX_CREATE_SHARED_MODULE ${CMAKE_CXX_CREATE_SHARED_LIBRARY} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(252):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_CREATE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(255):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_APPEND )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(258):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_FINISH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(259):  set(CMAKE_CXX_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(263):  if(NOT CMAKE_CXX_COMPILE_OBJECT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(264):  set(CMAKE_CXX_COMPILE_OBJECT <CMAKE_CXX_COMPILER>  <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE> )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(268):  if(NOT CMAKE_CXX_LINK_EXECUTABLE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(269):  set(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_CXX_COMPILER>  <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES> )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(273):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(277):  set(CMAKE_CXX_INFORMATION_LOADED 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(5):  if(CMAKE_CXX_COMPILER_FORCED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(12):  include(CMakeTestCompilerCommon )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(5):  function(PrintTestCompilerStatus LANG MSG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(10):  macro(__TestCompiler_setTryCompileTargetType )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(22):  macro(__TestCompiler_restoreTryCompileTargetType )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(15):  set(__CMAKE_SAVED_TRY_COMPILE_TARGET_TYPE ${CMAKE_TRY_COMPILE_TARGET_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(16):  if(_CMAKE_FEATURE_DETECTION_TARGET_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(22):  unset(CMAKE_CXX_COMPILER_WORKS CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(29):  if(NOT CMAKE_CXX_COMPILER_WORKS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(30):  PrintTestCompilerStatus(CXX  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(6):  message(STATUS Check for working ${LANG} compiler: ${CMAKE_${LANG}_COMPILER}${MSG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(31):  __TestCompiler_setTryCompileTargetType()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(11):  if(NOT CMAKE_TRY_COMPILE_TARGET_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(12):  if(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(32):  file(WRITE ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeTmp/testCXXCompiler.cxx #ifndef __cplusplus\n # error \"The CMAKE_CXX_COMPILER is set to a C compiler\"\n #endif\n int main(){return 0;}\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(37):  try_compile(CMAKE_CXX_COMPILER_WORKS ${CMAKE_BINARY_DIR} ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeTmp/testCXXCompiler.cxx OUTPUT_VARIABLE __CMAKE_CXX_COMPILER_OUTPUT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(41):  set(CMAKE_CXX_COMPILER_WORKS ${CMAKE_CXX_COMPILER_WORKS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(42):  unset(CMAKE_CXX_COMPILER_WORKS CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(43):  set(CXX_TEST_WAS_RUN 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(44):  __TestCompiler_restoreTryCompileTargetType()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(23):  if(__CMAKE_TEST_COMPILER_TARGET_TYPE_RESTORE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(47):  if(NOT CMAKE_CXX_COMPILER_WORKS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(57):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(58):  if(CXX_TEST_WAS_RUN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(59):  PrintTestCompilerStatus(CXX  -- works )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(6):  message(STATUS Check for working ${LANG} compiler: ${CMAKE_${LANG}_COMPILER}${MSG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(60):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log Determining if the CXX compiler works passed with  the following output:\n${__CMAKE_CXX_COMPILER_OUTPUT}\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(66):  include(${CMAKE_ROOT}/Modules/CMakeDetermineCompilerABI.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(9):  include(${CMAKE_ROOT}/Modules/CMakeParseImplicitIncludeInfo.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeParseImplicitIncludeInfo.cmake(9):  function(cmake_parse_implicit_include_line line lang id_var log_var state_var )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeParseImplicitIncludeInfo.cmake(162):  function(cmake_parse_implicit_include_info text lang dir_var log_var state_var )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(10):  include(${CMAKE_ROOT}/Modules/CMakeParseImplicitLinkInfo.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeParseImplicitLinkInfo.cmake(4):  cmake_policy(PUSH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeParseImplicitLinkInfo.cmake(5):  cmake_policy(SET CMP0053 NEW )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeParseImplicitLinkInfo.cmake(6):  cmake_policy(SET CMP0054 NEW )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeParseImplicitLinkInfo.cmake(12):  function(CMAKE_PARSE_IMPLICIT_LINK_INFO text lib_var dir_var fwk_var log_var obj_regex )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeParseImplicitLinkInfo.cmake(204):  cmake_policy(POP )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(11):  include(CMakeTestCompilerCommon )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(5):  function(PrintTestCompilerStatus LANG MSG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(10):  macro(__TestCompiler_setTryCompileTargetType )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(22):  macro(__TestCompiler_restoreTryCompileTargetType )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(13):  function(CMAKE_DETERMINE_COMPILER_ABI lang src )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(67):  CMAKE_DETERMINE_COMPILER_ABI(CXX ${CMAKE_ROOT}/Modules/CMakeCXXCompilerABI.cpp )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(14):  if(NOT DEFINED CMAKE_${lang}_ABI_COMPILED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(15):  message(STATUS Detecting ${lang} compiler ABI info )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(18):  set(BIN ${CMAKE_PLATFORM_INFO_DIR}/CMakeDetermineCompilerABI_${lang}.bin )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(19):  set(CMAKE_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(20):  set(COMPILE_DEFINITIONS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(21):  if(DEFINED CMAKE_${lang}_VERBOSE_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(25):  if(DEFINED CMAKE_${lang}_VERBOSE_COMPILE_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(28):  if(NOT x${CMAKE_${lang}_COMPILER_ID} STREQUAL xMSVC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(31):  list(APPEND CMAKE_FLAGS -DCMAKE_${lang}_STANDARD_LIBRARIES= )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(33):  __TestCompiler_setTryCompileTargetType()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(11):  if(NOT CMAKE_TRY_COMPILE_TARGET_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCompilerCommon.cmake(12):  if(${CMAKE_GENERATOR} MATCHES Green Hills MULTI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(38):  set(_orig_lc_all $ENV{LC_ALL} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(39):  set(_orig_lc_messages $ENV{LC_MESSAGES} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(40):  set(_orig_lang $ENV{LANG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(41):  set(ENV{LC_ALL} C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(42):  set(ENV{LC_MESSAGES} C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(43):  set(ENV{LANG} C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(45):  try_compile(CMAKE_${lang}_ABI_COMPILED ${CMAKE_BINARY_DIR} ${src} CMAKE_FLAGS ${CMAKE_FLAGS} --no-warn-unused-cli COMPILE_DEFINITIONS ${COMPILE_DEFINITIONS} OUTPUT_VARIABLE OUTPUT COPY_FILE ${BIN} COPY_FILE_ERROR _copy_error __CMAKE_INTERNAL ABI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(58):  set(ENV{LC_ALL} ${_orig_lc_all} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(59):  set(ENV{LC_MESSAGES} ${_orig_lc_messages} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(60):  set(ENV{LANG} ${_orig_lang} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(63):  set(CMAKE_${lang}_ABI_COMPILED ${CMAKE_${lang}_ABI_COMPILED} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(64):  unset(CMAKE_${lang}_ABI_COMPILED CACHE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(65):  set(CMAKE_${lang}_ABI_COMPILED ${CMAKE_${lang}_ABI_COMPILED} PARENT_SCOPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(68):  if(CMAKE_${lang}_ABI_COMPILED AND NOT _copy_error )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(168):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(169):  message(STATUS Detecting ${lang} compiler ABI info - failed )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerABI.cmake(170):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Detecting ${lang} compiler ABI info failed to compile with the following output:\n${OUTPUT}\n${_copy_error}\n\n )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(69):  include(${CMAKE_ROOT}/Modules/CMakeDetermineCompileFeatures.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompileFeatures.cmake(5):  function(cmake_determine_compile_features lang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(70):  CMAKE_DETERMINE_COMPILE_FEATURES(CXX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompileFeatures.cmake(7):  if(lang STREQUAL C AND COMMAND cmake_record_c_compile_features )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompileFeatures.cmake(45):  elseif(lang STREQUAL CXX AND COMMAND cmake_record_cxx_compile_features )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(73):  configure_file(${CMAKE_ROOT}/Modules/CMakeCXXCompiler.cmake.in ${CMAKE_PLATFORM_INFO_DIR}/CMakeCXXCompiler.cmake @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(78):  include(${CMAKE_PLATFORM_INFO_DIR}/CMakeCXXCompiler.cmake )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(1):  set(CMAKE_CXX_COMPILER C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/mccppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(2):  set(CMAKE_CXX_COMPILER_ARG1  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(3):  set(CMAKE_CXX_COMPILER_ID  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(4):  set(CMAKE_CXX_COMPILER_VERSION  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(5):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(6):  set(CMAKE_CXX_COMPILER_WRAPPER  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(7):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 98 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(8):  set(CMAKE_CXX_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(9):  set(CMAKE_CXX98_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(10):  set(CMAKE_CXX11_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(11):  set(CMAKE_CXX14_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(12):  set(CMAKE_CXX17_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(13):  set(CMAKE_CXX20_COMPILE_FEATURES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(15):  set(CMAKE_CXX_PLATFORM_ID  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(16):  set(CMAKE_CXX_SIMULATE_ID  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(17):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(18):  set(CMAKE_CXX_SIMULATE_VERSION  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(22):  set(CMAKE_AR C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/libppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(23):  set(CMAKE_CXX_COMPILER_AR  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(24):  set(CMAKE_RANLIB : )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(25):  set(CMAKE_CXX_COMPILER_RANLIB  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(26):  set(CMAKE_LINKER C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/lnkppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(27):  set(CMAKE_MT  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(28):  set(CMAKE_COMPILER_IS_GNUCXX )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(29):  set(CMAKE_CXX_COMPILER_LOADED 1 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(30):  set(CMAKE_CXX_COMPILER_WORKS TRUE )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(31):  set(CMAKE_CXX_ABI_COMPILED FALSE )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(32):  set(CMAKE_COMPILER_IS_MINGW )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(33):  set(CMAKE_COMPILER_IS_CYGWIN )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(34):  if(CMAKE_COMPILER_IS_CYGWIN )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(39):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(41):  if(CMAKE_COMPILER_IS_MINGW )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(44):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(45):  set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;CPP )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(46):  set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(48):  foreach(lang C OBJC OBJCXX )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(49):  if(CMAKE_${lang}_COMPILER_ID_RUN )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(50):  foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(51):  list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension} )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(51):  list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension} )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(49):  if(CMAKE_${lang}_COMPILER_ID_RUN )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(49):  if(CMAKE_${lang}_COMPILER_ID_RUN )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(56):  set(CMAKE_CXX_LINKER_PREFERENCE 30 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(57):  set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(60):  set(CMAKE_CXX_SIZEOF_DATA_PTR  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(61):  set(CMAKE_CXX_COMPILER_ABI  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(62):  set(CMAKE_CXX_LIBRARY_ARCHITECTURE  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(64):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(68):  if(CMAKE_CXX_COMPILER_ABI )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(72):  if(CMAKE_CXX_LIBRARY_ARCHITECTURE )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(76):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(77):  if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(85):  set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(86):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(87):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeCXXCompiler.cmake(88):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(80):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(88):  set(CMAKE_TRY_COMPILE_TARGET_TYPE ${__CMAKE_SAVED_TRY_COMPILE_TARGET_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(89):  unset(__CMAKE_SAVED_TRY_COMPILE_TARGET_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake(90):  unset(__CMAKE_CXX_COMPILER_OUTPUT )
C:/acados/CMakeLists.txt(43):  enable_language(ASM )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(7):  include(${CMAKE_ROOT}/Modules/CMakeDetermineCompiler.cmake )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(5):  macro(_cmake_find_compiler lang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(92):  macro(_cmake_find_compiler_path lang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(9):  if(NOT CMAKE_ASM${ASM_DIALECT}_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(44):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(45):  _cmake_find_compiler_path(ASM${ASM_DIALECT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(93):  if(CMAKE_ASM_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(98):  list(LENGTH CMAKE_ASM_COMPILER _CMAKE_ASM_COMPILER_LIST_LENGTH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(99):  if(${_CMAKE_ASM_COMPILER_LIST_LENGTH} EQUAL 2 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(103):  unset(_CMAKE_ASM_COMPILER_LIST_LENGTH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(106):  get_filename_component(_CMAKE_USER_ASM_COMPILER_PATH ${CMAKE_ASM_COMPILER} PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompiler.cmake(107):  if(NOT _CMAKE_USER_ASM_COMPILER_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(47):  mark_as_advanced(CMAKE_ASM${ASM_DIALECT}_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(49):  if(NOT _CMAKE_TOOLCHAIN_LOCATION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(54):  if(NOT CMAKE_ASM${ASM_DIALECT}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(57):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS GNU )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(58):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_GNU --version )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(59):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_GNU (GNU assembler)|(GCC)|(Free Software Foundation) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(61):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS Clang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(62):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_Clang --version )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(63):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_Clang (clang version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(65):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS AppleClang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(66):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_AppleClang --version )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(67):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_AppleClang (Apple LLVM version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(69):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS ARMClang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(70):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_ARMClang --version )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(71):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_ARMClang armclang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(73):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS HP )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(74):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_HP -V )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(75):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_HP HP C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(77):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS Intel )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(78):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_Intel --version )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(79):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_Intel (ICC) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(81):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS SunPro )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(82):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_SunPro -V )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(83):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_SunPro Sun C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(85):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS XL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(86):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_XL -qversion )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(87):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_XL XL C )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(89):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS MSVC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(90):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_MSVC -? )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(91):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_MSVC Microsoft )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(93):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS TI )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(94):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_TI -h )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(95):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_TI Texas Instruments )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(97):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(98):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_IAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(99):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_IAR IAR Assembler )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(101):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS ARMCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(102):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_ARMCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(103):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_ARMCC (ARM Compiler)|(ARM Assembler) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(105):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS NASM )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(106):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_NASM -v )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(107):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_NASM (NASM version) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(109):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS YASM )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(110):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_YASM --version )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(111):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_YASM (yasm) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(113):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS ADSP )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(114):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_ADSP -version )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(115):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_ADSP Analog Devices )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(117):  list(APPEND CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDORS QCC )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(118):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_FLAGS_QCC -V )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(119):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_VENDOR_REGEX_QCC gcc_nto )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(121):  include(CMakeDetermineCompilerId )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(9):  function(CMAKE_DETERMINE_COMPILER_ID lang flagvar src )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(203):  include(CMakeCompilerIdDetection )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(5):  function(_readFile file )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeCompilerIdDetection.cmake(14):  function(compiler_id_detection outvar lang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(207):  function(CMAKE_DETERMINE_COMPILER_ID_WRITE lang src )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(225):  function(CMAKE_DETERMINE_COMPILER_ID_BUILD lang testflags userflags src )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(616):  function(CMAKE_DETERMINE_COMPILER_ID_MATCH_VENDOR lang output )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(627):  function(CMAKE_DETERMINE_COMPILER_ID_CHECK lang file )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(839):  function(CMAKE_DETERMINE_COMPILER_ID_VENDOR lang userflags )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(886):  function(CMAKE_DETERMINE_MSVC_SHOWINCLUDES_PREFIX lang userflags )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(122):  set(userflags )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(123):  CMAKE_DETERMINE_COMPILER_ID_VENDOR(ASM${ASM_DIALECT} ${userflags} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(841):  if(NOT CMAKE_${lang}_COMPILER_ID_DIR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(845):  set(CMAKE_${lang}_COMPILER_ID_DIR ${CMAKE_PLATFORM_INFO_DIR}/CompilerId${lang} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(846):  file(REMOVE_RECURSE ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(847):  file(MAKE_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(851):  foreach(vendor ${CMAKE_${lang}_COMPILER_ID_VENDORS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(852):  set(flags ${CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(853):  set(regex ${CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(854):  execute_process(COMMAND ${CMAKE_${lang}_COMPILER} ${CMAKE_${lang}_COMPILER_ID_ARG1} ${userflags} ${flags} WORKING_DIRECTORY ${CMAKE_${lang}_COMPILER_ID_DIR} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result TIMEOUT 10 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(865):  if(${output} MATCHES ${regex} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(872):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(873):  if(${result} MATCHES timeout )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(877):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineCompilerId.cmake(878):  file(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log Checking whether the ${lang} compiler is ${vendor} using \"${flags}\"  did not match \"${regex}\":\n${output} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(124):  if(x${CMAKE_ASM${ASM_DIALECT}_COMPILER_ID} STREQUAL xIAR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(137):  unset(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID_OUTPUT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(138):  unset(_all_compileid_matches )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(139):  unset(_compileid )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(142):  if(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(156):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(157):  message(STATUS The ASM${ASM_DIALECT} compiler identification is unknown )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(167):  if(NOT _CMAKE_TOOLCHAIN_PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(168):  get_filename_component(COMPILER_BASENAME ${CMAKE_ASM${ASM_DIALECT}_COMPILER} NAME )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(169):  if(COMPILER_BASENAME MATCHES ^(.+-)g?as(-[0-9]+\\.[0-9]+\\.[0-9]+)?(\\.exe)?$ )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(175):  if(NOT _CMAKE_TOOLCHAIN_PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(176):  if(COMPILER_BASENAME MATCHES ^(.+-)g?cc(-[0-9]+\\.[0-9]+\\.[0-9]+)?(\\.exe)?$ )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(182):  if(NOT _CMAKE_TOOLCHAIN_PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(183):  if(COMPILER_BASENAME MATCHES ^(.+-)[gc]\\+\\+(-[0-9]+\\.[0-9]+\\.[0-9]+)?(\\.exe)?$ )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(189):  set(_CMAKE_PROCESSING_LANGUAGE ASM )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(190):  include(CMakeFindBinUtils )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(24):  function(__resolve_tool_path CMAKE_TOOL SEARCH_PATH DOCSTRING )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(57):  __resolve_tool_path(CMAKE_LINKER ${_CMAKE_TOOLCHAIN_LOCATION} Default Linker )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(26):  if(${CMAKE_TOOL} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(31):  get_filename_component(_CMAKE_USER_TOOL_PATH ${${CMAKE_TOOL}} DIRECTORY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(33):  if(NOT _CMAKE_USER_TOOL_PATH )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(58):  __resolve_tool_path(CMAKE_MT ${_CMAKE_TOOLCHAIN_LOCATION} Default Manifest Tool )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(26):  if(${CMAKE_TOOL} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(60):  set(_CMAKE_TOOL_VARS  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(63):  if(( x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_SIMULATE_ID} STREQUAL xMSVC AND ( x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_FRONTEND_VARIANT} STREQUAL xMSVC OR NOT x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL xClang ) ) OR x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL xMSVC OR ( CMAKE_HOST_WIN32 AND x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL xPGI ) OR ( CMAKE_HOST_WIN32 AND x${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL xNVIDIA ) OR ( CMAKE_GENERATOR MATCHES Visual Studio AND NOT CMAKE_VS_PLATFORM_NAME STREQUAL Tegra-Android ) )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(83):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(84):  if(CMAKE_C_COMPILER_EXTERNAL_TOOLCHAIN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(87):  if(CMAKE_CXX_COMPILER_EXTERNAL_TOOLCHAIN )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(91):  if(${CMAKE_${_CMAKE_PROCESSING_LANGUAGE}_COMPILER_ID} STREQUAL Clang )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(104):  find_program(CMAKE_AR NAMES ${_CMAKE_TOOLCHAIN_PREFIX}ar${_CMAKE_TOOLCHAIN_SUFFIX} ${_CMAKE_ADDITIONAL_AR_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(106):  find_program(CMAKE_RANLIB NAMES ${_CMAKE_TOOLCHAIN_PREFIX}ranlib ${_CMAKE_ADDITIONAL_RANLIB_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(107):  if(NOT CMAKE_RANLIB )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(112):  find_program(CMAKE_STRIP NAMES ${_CMAKE_TOOLCHAIN_PREFIX}strip${_CMAKE_TOOLCHAIN_SUFFIX} ${_CMAKE_ADDITIONAL_STRIP_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(113):  find_program(CMAKE_LINKER NAMES ${_CMAKE_TOOLCHAIN_PREFIX}ld ${_CMAKE_ADDITIONAL_LINKER_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(114):  find_program(CMAKE_NM NAMES ${_CMAKE_TOOLCHAIN_PREFIX}nm ${_CMAKE_ADDITIONAL_NM_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(115):  find_program(CMAKE_OBJDUMP NAMES ${_CMAKE_TOOLCHAIN_PREFIX}objdump ${_CMAKE_ADDITIONAL_OBJDUMP_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(116):  find_program(CMAKE_OBJCOPY NAMES ${_CMAKE_TOOLCHAIN_PREFIX}objcopy ${_CMAKE_ADDITIONAL_OBJCOPY_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(117):  find_program(CMAKE_READELF NAMES ${_CMAKE_TOOLCHAIN_PREFIX}readelf ${_CMAKE_ADDITIONAL_READELF_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(118):  find_program(CMAKE_DLLTOOL NAMES ${_CMAKE_TOOLCHAIN_PREFIX}dlltool ${_CMAKE_ADDITIONAL_DLLTOOL_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(119):  find_program(CMAKE_ADDR2LINE NAMES ${_CMAKE_TOOLCHAIN_PREFIX}addr2line ${_CMAKE_ADDITIONAL_ADDR2LINE_NAMES} HINTS ${_CMAKE_TOOLCHAIN_LOCATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(121):  list(APPEND _CMAKE_TOOL_VARS AR RANLIB STRIP LINKER NM OBJDUMP OBJCOPY READELF DLLTOOL ADDR2LINE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(124):  if(CMAKE_PLATFORM_HAS_INSTALLNAME )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(135):  foreach(var IN LISTS _CMAKE_TOOL_VARS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(136):  get_property(_CMAKE_TOOL_CACHED CACHE CMAKE_${var} PROPERTY TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(137):  if(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(138):  mark_as_advanced(CMAKE_${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(140):  unset(_CMAKE_ADDITIONAL_${var}_NAMES )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(142):  unset(_CMAKE_TOOL_VARS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeFindBinUtils.cmake(143):  unset(_CMAKE_TOOL_CACHED )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(191):  include(Compiler/${CMAKE_ASM${ASM_DIALECT}_COMPILER_ID}-FindBinUtils OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(192):  unset(_CMAKE_PROCESSING_LANGUAGE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(194):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_ENV_VAR ASM${ASM_DIALECT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(196):  if(CMAKE_ASM${ASM_DIALECT}_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(197):  message(STATUS Found assembler: ${CMAKE_ASM${ASM_DIALECT}_COMPILER} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(202):  foreach(_var COMPILER COMPILER_ID COMPILER_ARG1 COMPILER_ENV_VAR COMPILER_AR COMPILER_RANLIB COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(211):  set(_CMAKE_ASM_${_var} ${CMAKE_ASM${ASM_DIALECT}_${_var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(211):  set(_CMAKE_ASM_${_var} ${CMAKE_ASM${ASM_DIALECT}_${_var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(211):  set(_CMAKE_ASM_${_var} ${CMAKE_ASM${ASM_DIALECT}_${_var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(211):  set(_CMAKE_ASM_${_var} ${CMAKE_ASM${ASM_DIALECT}_${_var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(211):  set(_CMAKE_ASM_${_var} ${CMAKE_ASM${ASM_DIALECT}_${_var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(211):  set(_CMAKE_ASM_${_var} ${CMAKE_ASM${ASM_DIALECT}_${_var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(211):  set(_CMAKE_ASM_${_var} ${CMAKE_ASM${ASM_DIALECT}_${_var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(214):  if(CMAKE_ASM${ASM_DIALECT}_COMPILER_ARCHITECTURE_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(217):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(218):  set(_SET_CMAKE_ASM_COMPILER_ARCHITECTURE_ID  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(222):  configure_file(${CMAKE_ROOT}/Modules/CMakeASMCompiler.cmake.in ${CMAKE_PLATFORM_INFO_DIR}/CMakeASM${ASM_DIALECT}Compiler.cmake @ONLY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(225):  foreach(_var COMPILER COMPILER_ID COMPILER_ARG1 COMPILER_ENV_VAR COMPILER_AR COMPILER_RANLIB COMPILER_VERSION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(234):  unset(_CMAKE_ASM_${_var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(234):  unset(_CMAKE_ASM_${_var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(234):  unset(_CMAKE_ASM_${_var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(234):  unset(_CMAKE_ASM_${_var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(234):  unset(_CMAKE_ASM_${_var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(234):  unset(_CMAKE_ASM_${_var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeDetermineASMCompiler.cmake(234):  unset(_CMAKE_ASM_${_var} )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeASMCompiler.cmake(1):  set(CMAKE_ASM_COMPILER C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/asmppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeASMCompiler.cmake(2):  set(CMAKE_ASM_COMPILER_ARG1  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeASMCompiler.cmake(3):  set(CMAKE_AR C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/libppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeASMCompiler.cmake(4):  set(CMAKE_ASM_COMPILER_AR  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeASMCompiler.cmake(5):  set(CMAKE_RANLIB : )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeASMCompiler.cmake(6):  set(CMAKE_ASM_COMPILER_RANLIB  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeASMCompiler.cmake(7):  set(CMAKE_LINKER C:/ProgramData/dSPACE/071346EA-BFFA-4465-9551-2E48EDF35320/Compiler/PPCTools/bin/lnkppc.exe )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeASMCompiler.cmake(8):  set(CMAKE_MT  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeASMCompiler.cmake(9):  set(CMAKE_ASM_COMPILER_LOADED 1 )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeASMCompiler.cmake(10):  set(CMAKE_ASM_COMPILER_ID  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeASMCompiler.cmake(11):  set(CMAKE_ASM_COMPILER_VERSION  )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeASMCompiler.cmake(12):  set(CMAKE_ASM_COMPILER_ENV_VAR ASM )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeASMCompiler.cmake(15):  set(CMAKE_ASM_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC )
C:/acados/buildDS1401/CMakeFiles/3.16.0/CMakeASMCompiler.cmake(16):  set(CMAKE_ASM_LINKER_PREFERENCE 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(5):  if(UNIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(7):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(8):  set(CMAKE_ASM${ASM_DIALECT}_OUTPUT_EXTENSION .obj )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(11):  set(CMAKE_INCLUDE_FLAG_ASM${ASM_DIALECT} -I )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(12):  set(CMAKE_BASE_NAME )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(13):  get_filename_component(CMAKE_BASE_NAME ${CMAKE_ASM${ASM_DIALECT}_COMPILER} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(15):  if(${CMAKE_BASE_NAME} STREQUAL as )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(20):  set(_INCLUDED_FILE  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(21):  if(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(24):  if(NOT _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(25):  if(ASM${ASM_DIALECT} STREQUAL ASM )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(26):  message(STATUS Warning: Did not find file Compiler/${CMAKE_ASM${ASM_DIALECT}_COMPILER_ID}-ASM${ASM_DIALECT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(28):  include(Platform/${CMAKE_BASE_NAME} OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(31):  if(CMAKE_SYSTEM_PROCESSOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(32):  include(Platform/${CMAKE_EFFECTIVE_SYSTEM_NAME}-${CMAKE_ASM${ASM_DIALECT}_COMPILER_ID}-ASM${ASM_DIALECT}-${CMAKE_SYSTEM_PROCESSOR} OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(33):  if(NOT _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(34):  include(Platform/${CMAKE_EFFECTIVE_SYSTEM_NAME}-${CMAKE_BASE_NAME}-${CMAKE_SYSTEM_PROCESSOR} OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(38):  include(Platform/${CMAKE_EFFECTIVE_SYSTEM_NAME}-${CMAKE_ASM${ASM_DIALECT}_COMPILER_ID}-ASM${ASM_DIALECT} OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(39):  if(NOT _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(40):  include(Platform/${CMAKE_EFFECTIVE_SYSTEM_NAME}-${CMAKE_BASE_NAME} OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(49):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(55):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_ASM )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(62):  if(NOT CMAKE_ASM${ASM_DIALECT}_SOURCE_FILE_EXTENSIONS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(63):  set(CMAKE_ASM${ASM_DIALECT}_SOURCE_FILE_EXTENSIONS s;S;asm )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(68):  set(CMAKE_ASM${ASM_DIALECT}_FLAGS_INIT $ENV{ASM${ASM_DIALECT}FLAGS} ${CMAKE_ASM${ASM_DIALECT}_FLAGS_INIT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(70):  cmake_initialize_per_config_variable(CMAKE_ASM${ASM_DIALECT}_FLAGS Flags used by the ASM${ASM_DIALECT} compiler )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP ${${_PREFIX}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(${_PREFIX} ${_INIT} CACHE STRING ${_DOCSTRING} during all build types. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(${_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS ${CMAKE_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(72):  if(NOT CMAKE_ASM${ASM_DIALECT}_COMPILE_OBJECT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(73):  set(CMAKE_ASM${ASM_DIALECT}_COMPILE_OBJECT <CMAKE_ASM${ASM_DIALECT}_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE> )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(76):  if(NOT CMAKE_ASM${ASM_DIALECT}_CREATE_STATIC_LIBRARY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(77):  set(CMAKE_ASM${ASM_DIALECT}_CREATE_STATIC_LIBRARY <CMAKE_AR> cr <TARGET> <LINK_FLAGS> <OBJECTS>  <CMAKE_RANLIB> <TARGET>  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(82):  if(NOT CMAKE_ASM${ASM_DIALECT}_LINK_EXECUTABLE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(83):  set(CMAKE_ASM${ASM_DIALECT}_LINK_EXECUTABLE <CMAKE_ASM${ASM_DIALECT}_COMPILER> <FLAGS> <CMAKE_ASM${ASM_DIALECT}_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES> )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(87):  if(NOT CMAKE_EXECUTABLE_RUNTIME_ASM${ASM_DIALECT}_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(88):  set(CMAKE_EXECUTABLE_RUNTIME_ASM${ASM_DIALECT}_FLAG ${CMAKE_SHARED_LIBRARY_RUNTIME_ASM${ASM_DIALECT}_FLAG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(91):  if(NOT CMAKE_EXECUTABLE_RUNTIME_ASM${ASM_DIALECT}_FLAG_SEP )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(92):  set(CMAKE_EXECUTABLE_RUNTIME_ASM${ASM_DIALECT}_FLAG_SEP ${CMAKE_SHARED_LIBRARY_RUNTIME_ASM${ASM_DIALECT}_FLAG_SEP} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(95):  if(NOT CMAKE_EXECUTABLE_RPATH_LINK_ASM${ASM_DIALECT}_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(96):  set(CMAKE_EXECUTABLE_RPATH_LINK_ASM${ASM_DIALECT}_FLAG ${CMAKE_SHARED_LIBRARY_RPATH_LINK_ASM${ASM_DIALECT}_FLAG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(100):  if(NOT CMAKE_ASM${ASM_DIALECT}_CREATE_SHARED_LIBRARY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(101):  set(CMAKE_ASM${ASM_DIALECT}_CREATE_SHARED_LIBRARY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(104):  if(NOT CMAKE_ASM${ASM_DIALECT}_CREATE_SHARED_MODULE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(105):  set(CMAKE_ASM${ASM_DIALECT}_CREATE_SHARED_MODULE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(109):  set(CMAKE_ASM${ASM_DIALECT}_INFOMATION_LOADED 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestASMCompiler.cmake(12):  set(_ASM_COMPILER_WORKS 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestASMCompiler.cmake(14):  if(CMAKE_ASM${ASM_DIALECT}_COMPILER )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestASMCompiler.cmake(15):  set(_ASM_COMPILER_WORKS 1 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestASMCompiler.cmake(19):  if(ASM${ASM_DIALECT} STREQUAL ASM )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestASMCompiler.cmake(20):  if(NOT CMAKE_ASM${ASM_DIALECT}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestASMCompiler.cmake(21):  set(_ASM_COMPILER_WORKS 0 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeTestASMCompiler.cmake(25):  set(CMAKE_ASM${ASM_DIALECT}_COMPILER_WORKS ${_ASM_COMPILER_WORKS} CACHE INTERNAL  )
C:/acados/CMakeLists.txt(44):  list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake )
C:/acados/CMakeLists.txt(46):  set(CMAKE_POSITION_INDEPENDENT_CODE TRUE )
C:/acados/CMakeLists.txt(50):  set(ACADOS_INSTALL_DIR ${PROJECT_SOURCE_DIR} CACHE PATH Installation path to PROJECT_SOURCE_DIR )
C:/acados/CMakeLists.txt(51):  set(BLASFEO_TARGET X64_AUTOMATIC CACHE STRING BLASFEO Target architecture )
C:/acados/CMakeLists.txt(52):  set(HPIPM_TARGET X64_AUTOMATIC CACHE STRING HPIPM Target architecture )
C:/acados/CMakeLists.txt(53):  set(LA HIGH_PERFORMANCE CACHE STRING Linear algebra optimization level )
C:/acados/CMakeLists.txt(55):  if(CMAKE_SYSTEM_NAME MATCHES Windows )
C:/acados/CMakeLists.txt(57):  else()
C:/acados/CMakeLists.txt(58):  set(BUILD_SHARED_LIBS ON CACHE STRING Build shared libraries )
C:/acados/CMakeLists.txt(61):  option(ACADOS_WITH_OPENMP OpenMP Parallelization OFF )
C:/acados/CMakeLists.txt(62):  option(ACADOS_SILENT No console status output OFF )
C:/acados/CMakeLists.txt(65):  option(ACADOS_UNIT_TESTS Compile Unit tests OFF )
C:/acados/CMakeLists.txt(66):  option(ACADOS_EXAMPLES Compile Examples OFF )
C:/acados/CMakeLists.txt(67):  option(ACADOS_LINT Compile Lint OFF )
C:/acados/CMakeLists.txt(69):  option(ACADOS_WITH_QPOASES qpOASES solver OFF )
C:/acados/CMakeLists.txt(70):  option(ACADOS_WITH_HPMPC HPMPC solver OFF )
C:/acados/CMakeLists.txt(71):  option(ACADOS_WITH_QORE QORE solver OFF )
C:/acados/CMakeLists.txt(72):  option(ACADOS_WITH_OOQP OOQP solver OFF )
C:/acados/CMakeLists.txt(73):  option(ACADOS_WITH_QPDUNES qpDUNES solver OFF )
C:/acados/CMakeLists.txt(74):  option(ACADOS_WITH_OSQP OSQP solver OFF )
C:/acados/CMakeLists.txt(76):  option(ACADOS_MATLAB The Matlab Interface OFF )
C:/acados/CMakeLists.txt(77):  option(ACADOS_OCTAVE The Octave Interface OFF )
C:/acados/CMakeLists.txt(78):  option(ACADOS_OCTAVE_TEMPLATE Template MEX Interface OFF )
C:/acados/CMakeLists.txt(79):  option(ACADOS_PYTHON Python Interface OFF )
C:/acados/CMakeLists.txt(83):  set(CMAKE_INSTALL_PREFIX ${ACADOS_INSTALL_DIR} )
C:/acados/CMakeLists.txt(84):  set(EXTERNAL_SRC_DIR ${PROJECT_SOURCE_DIR}/external )
C:/acados/CMakeLists.txt(85):  set(BLASFEO_SRC_DIR ${PROJECT_SOURCE_DIR}/external/blasfeo )
C:/acados/CMakeLists.txt(88):  if(NOT CMAKE_BUILD_TYPE )
C:/acados/CMakeLists.txt(89):  set(CMAKE_BUILD_TYPE Release CACHE STRING Valid build types are:         Release (default), None, Debug, WithExternalLibs, RelWithDebInfo, MinSizeRel. FORCE )
C:/acados/CMakeLists.txt(95):  message(STATUS Build type is ${CMAKE_BUILD_TYPE} )
C:/acados/CMakeLists.txt(97):  enable_testing(true )
C:/acados/CMakeLists.txt(99):  if(CMAKE_CXX_COMPILER_ID MATCHES GNU AND NOT CMAKE_SYSTEM_NAME MATCHES Windows )
C:/acados/CMakeLists.txt(103):  if(CMAKE_CXX_COMPILER_ID MATCHES GNU AND CMAKE_SYSTEM_NAME MATCHES Windows )
C:/acados/CMakeLists.txt(108):  set(CMAKE_C_COMPILER_ID ${CMAKE_C_COMPILER_ID} -mcpu=powerpc )
C:/acados/CMakeLists.txt(110):  if(CMAKE_CXX_COMPILER_ID MATCHES GNU OR CMAKE_CXX_COMPILER_ID MATCHES Clang )
C:/acados/CMakeLists.txt(113):  elseif(CMAKE_CXX_COMPILER_ID MATCHES MSVC )
C:/acados/CMakeLists.txt(119):  if(ACADOS_WITH_OPENMP )
C:/acados/CMakeLists.txt(151):  else()
C:/acados/CMakeLists.txt(152):  set(ACADOS_WITH_OPENMP OFF )
C:/acados/CMakeLists.txt(153):  message(STATUS ACADOS_WITH_OPENMP: ${ACADOS_WITH_OPENMP} )
C:/acados/CMakeLists.txt(156):  if(ACADOS_SILENT )
C:/acados/CMakeLists.txt(163):  if(NOT TARGET uninstall )
C:/acados/CMakeLists.txt(166):  configure_file(${CMAKE_CURRENT_SOURCE_DIR}/cmake/cmake_uninstall.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/cmake/cmake_uninstall.cmake IMMEDIATE @ONLY )
C:/acados/CMakeLists.txt(171):  add_custom_target(uninstall ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake/cmake_uninstall.cmake )
C:/acados/CMakeLists.txt(176):  set(CMAKE_SKIP_BUILD_RPATH FALSE )
C:/acados/CMakeLists.txt(177):  set(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE )
C:/acados/CMakeLists.txt(179):  if(CMAKE_BUILD_TYPE MATCHES WithExternalLibs )
C:/acados/CMakeLists.txt(190):  if(ACADOS_WITH_HPMPC MATCHES ON AND CMAKE_C_COMPILER_ID MATCHES MSVC )
C:/acados/CMakeLists.txt(195):  if(ACADOS_WITH_OOQP MATCHES ON )
C:/acados/CMakeLists.txt(208):  if(ACADOS_WITH_QORE MATCHES ON )
C:/acados/CMakeLists.txt(221):  if(ACADOS_LINT )
C:/acados/CMakeLists.txt(228):  if(ACADOS_MATLAB OR ACADOS_OCTAVE OR ACADOS_OCTAVE_TEMPLATE OR ACADOS_PYTHON )
C:/acados/CMakeLists.txt(235):  add_subdirectory(acados )
C:/acados/acados/CMakeLists.txt(35):  set(PACKAGE_SO_VERSION 0.1 )
C:/acados/acados/CMakeLists.txt(37):  include(CMakePackageConfigHelpers )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(222):  include(WriteBasicConfigVersionFile )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/WriteBasicConfigVersionFile.cmake(24):  function(WRITE_BASIC_CONFIG_VERSION_FILE _filename )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(224):  macro(WRITE_BASIC_PACKAGE_VERSION_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(228):  function(CONFIGURE_PACKAGE_CONFIG_FILE _inputFile _outputFile )
C:/acados/acados/CMakeLists.txt(40):  file(GLOB_RECURSE ACADOS_SRC ${PROJECT_SOURCE_DIR}/acados/*.c )
C:/acados/acados/CMakeLists.txt(43):  if(NOT ACADOS_WITH_HPMPC )
C:/acados/acados/CMakeLists.txt(44):  list(REMOVE_ITEM ACADOS_SRC ${PROJECT_SOURCE_DIR}/acados/ocp_qp/ocp_qp_hpmpc.c )
C:/acados/acados/CMakeLists.txt(47):  if(NOT ACADOS_WITH_OOQP )
C:/acados/acados/CMakeLists.txt(48):  list(REMOVE_ITEM ACADOS_SRC ${PROJECT_SOURCE_DIR}/acados/ocp_qp/ocp_qp_ooqp.c )
C:/acados/acados/CMakeLists.txt(49):  list(REMOVE_ITEM ACADOS_SRC ${PROJECT_SOURCE_DIR}/acados/dense_qp/dense_qp_ooqp.c )
C:/acados/acados/CMakeLists.txt(52):  if(NOT ACADOS_WITH_QORE )
C:/acados/acados/CMakeLists.txt(53):  list(REMOVE_ITEM ACADOS_SRC ${PROJECT_SOURCE_DIR}/acados/dense_qp/dense_qp_qore.c )
C:/acados/acados/CMakeLists.txt(56):  if(NOT ACADOS_WITH_QPOASES )
C:/acados/acados/CMakeLists.txt(57):  list(REMOVE_ITEM ACADOS_SRC ${PROJECT_SOURCE_DIR}/acados/dense_qp/dense_qp_qpoases.c )
C:/acados/acados/CMakeLists.txt(60):  if(NOT ACADOS_WITH_QPDUNES )
C:/acados/acados/CMakeLists.txt(61):  list(REMOVE_ITEM ACADOS_SRC ${PROJECT_SOURCE_DIR}/acados/ocp_qp/ocp_qp_qpdunes.c )
C:/acados/acados/CMakeLists.txt(64):  if(NOT ACADOS_WITH_OSQP )
C:/acados/acados/CMakeLists.txt(65):  list(REMOVE_ITEM ACADOS_SRC ${PROJECT_SOURCE_DIR}/acados/ocp_qp/ocp_qp_osqp.c )
C:/acados/acados/CMakeLists.txt(69):  add_library(acados ${ACADOS_SRC} )
C:/acados/acados/CMakeLists.txt(71):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -J D:/MSA/acados/external/blasfeo/include )
C:/acados/acados/CMakeLists.txt(72):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -J D:/MSA/acados/external/hpipm/include )
C:/acados/acados/CMakeLists.txt(74):  target_include_directories(acados PUBLIC $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}> $<BUILD_INTERFACE:${EXTERNAL_SRC_DIR}/qore/QPSOLVER_DENSE/include> $<BUILD_INTERFACE:${EXTERNAL_SRC_DIR}/qore/QPSOLVER_DENSE/source> $<BUILD_INTERFACE:${EXTERNAL_SRC_DIR}/qore/KKTPACK_DENSE/include> $<BUILD_INTERFACE:${EXTERNAL_SRC_DIR}/qore/KKTPACK_DENSE/source> $<BUILD_INTERFACE:${EXTERNAL_SRC_DIR}/qore/QPCORE/include> $<BUILD_INTERFACE:${EXTERNAL_SRC_DIR}/qore> $<BUILD_INTERFACE:${EXTERNAL_SRC_DIR}/hpipm/include> $<BUILD_INTERFACE:${EXTERNAL_SRC_DIR}> $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/interfaces> $<INSTALL_INTERFACE:include> )
C:/acados/acados/CMakeLists.txt(90):  if(ACADOS_WITH_OPENMP )
C:/acados/acados/CMakeLists.txt(97):  if(ACADOS_WITH_HPMPC )
C:/acados/acados/CMakeLists.txt(102):  if(ACADOS_WITH_QORE )
C:/acados/acados/CMakeLists.txt(108):  if(ACADOS_WITH_QPOASES )
C:/acados/acados/CMakeLists.txt(115):  if(ACADOS_WITH_QPDUNES )
C:/acados/acados/CMakeLists.txt(122):  if(ACADOS_WITH_OSQP )
C:/acados/acados/CMakeLists.txt(130):  if(ACADOS_WITH_OOQP )
C:/acados/acados/CMakeLists.txt(135):  target_link_libraries(acados PUBLIC hpipm blasfeo m )
C:/acados/acados/CMakeLists.txt(137):  if(CMAKE_BUILD_TYPE MATCHES Debug )
C:/acados/acados/CMakeLists.txt(142):  if(NOT CMAKE_BUILD_TYPE MATCHES Debug )
C:/acados/acados/CMakeLists.txt(143):  target_compile_definitions(acados PUBLIC MEASURE_TIMINGS )
C:/acados/acados/CMakeLists.txt(147):  if(COVERAGE MATCHES lcov )
C:/acados/acados/CMakeLists.txt(155):  target_compile_definitions(acados PRIVATE ALIGNMENT=64 )
C:/acados/acados/CMakeLists.txt(157):  install(TARGETS acados EXPORT acadosTargets LIBRARY DESTINATION lib ARCHIVE DESTINATION lib RUNTIME DESTINATION bin )
C:/acados/acados/CMakeLists.txt(162):  install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} DESTINATION include FILES_MATCHING PATTERN *.h PATTERN simplified EXCLUDE )
C:/acados/acados/CMakeLists.txt(167):  install(EXPORT acadosTargets DESTINATION cmake )
C:/acados/acados/CMakeLists.txt(169):  configure_package_config_file(${PROJECT_SOURCE_DIR}/cmake/acadosConfig.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/cmake/acadosConfig.cmake INSTALL_DESTINATION cmake PATH_VARS ACADOS_WITH_HPMPC ACADOS_WITH_QORE ACADOS_WITH_QPOASES ACADOS_WITH_QPDUNES ACADOS_WITH_OSQP ACADOS_WITH_OOQP )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(229):  set(options NO_SET_AND_CHECK_MACRO NO_CHECK_REQUIRED_COMPONENTS_MACRO )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(230):  set(oneValueArgs INSTALL_DESTINATION INSTALL_PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(231):  set(multiValueArgs PATH_VARS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(233):  cmake_parse_arguments(CCF ${options} ${oneValueArgs} ${multiValueArgs} ${ARGN} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(235):  if(CCF_UNPARSED_ARGUMENTS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(239):  if(NOT CCF_INSTALL_DESTINATION )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(243):  if(DEFINED CCF_INSTALL_PREFIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(249):  elseif(IS_ABSOLUTE ${CMAKE_INSTALL_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(251):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(252):  get_filename_component(installPrefix ${CMAKE_INSTALL_PREFIX} ABSOLUTE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(255):  if(IS_ABSOLUTE ${CCF_INSTALL_DESTINATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(257):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(258):  set(absInstallDir ${installPrefix}/${CCF_INSTALL_DESTINATION} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(261):  file(RELATIVE_PATH PACKAGE_RELATIVE_PATH ${absInstallDir} ${installPrefix} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(263):  foreach(var ${CCF_PATH_VARS} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(264):  if(NOT DEFINED ${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(266):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(267):  if(IS_ABSOLUTE ${${var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(270):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(271):  set(PACKAGE_${var} \${PACKAGE_PREFIX_DIR}/${${var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(264):  if(NOT DEFINED ${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(266):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(267):  if(IS_ABSOLUTE ${${var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(270):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(271):  set(PACKAGE_${var} \${PACKAGE_PREFIX_DIR}/${${var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(264):  if(NOT DEFINED ${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(266):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(267):  if(IS_ABSOLUTE ${${var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(270):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(271):  set(PACKAGE_${var} \${PACKAGE_PREFIX_DIR}/${${var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(264):  if(NOT DEFINED ${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(266):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(267):  if(IS_ABSOLUTE ${${var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(270):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(271):  set(PACKAGE_${var} \${PACKAGE_PREFIX_DIR}/${${var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(264):  if(NOT DEFINED ${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(266):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(267):  if(IS_ABSOLUTE ${${var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(270):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(271):  set(PACKAGE_${var} \${PACKAGE_PREFIX_DIR}/${${var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(264):  if(NOT DEFINED ${var} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(266):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(267):  if(IS_ABSOLUTE ${${var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(270):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(271):  set(PACKAGE_${var} \${PACKAGE_PREFIX_DIR}/${${var}} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(276):  get_filename_component(inputFileName ${_inputFile} NAME )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(278):  set(PACKAGE_INIT 
####### Expanded from @PACKAGE_INIT@ by configure_package_config_file() #######
####### Any changes to this file will be overwritten by the next CMake run ####
####### The input file was ${inputFileName}                            ########

get_filename_component(PACKAGE_PREFIX_DIR \"\${CMAKE_CURRENT_LIST_DIR}/${PACKAGE_RELATIVE_PATH}\" ABSOLUTE)
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(286):  if(${absInstallDir} MATCHES ^(/usr)?/lib(64)?/.+ )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(301):  if(NOT CCF_NO_SET_AND_CHECK_MACRO )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(302):  string(APPEND PACKAGE_INIT 
macro(set_and_check _var _file)
  set(\${_var} \"\${_file}\")
  if(NOT EXISTS \"\${_file}\")
    message(FATAL_ERROR \"File or directory \${_file} referenced by variable \${_var} does not exist !\")
  endif()
endmacro()
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(313):  if(NOT CCF_NO_CHECK_REQUIRED_COMPONENTS_MACRO )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(314):  string(APPEND PACKAGE_INIT 
macro(check_required_components _NAME)
  foreach(comp \${\${_NAME}_FIND_COMPONENTS})
    if(NOT \${_NAME}_\${comp}_FOUND)
      if(\${_NAME}_FIND_REQUIRED_\${comp})
        set(\${_NAME}_FOUND FALSE)
      endif()
    endif()
  endforeach()
endmacro()
 )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(327):  string(APPEND PACKAGE_INIT 
#################################################################################### )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakePackageConfigHelpers.cmake(330):  configure_file(${_inputFile} ${_outputFile} @ONLY )
C:/acados/acados/CMakeLists.txt(179):  install(FILES ${CMAKE_CURRENT_BINARY_DIR}/cmake/acadosConfig.cmake DESTINATION cmake )
C:/acados/CMakeLists.txt(238):  add_subdirectory(${PROJECT_SOURCE_DIR}/interfaces/acados_c )
C:/acados/interfaces/acados_c/CMakeLists.txt(34):  set(INTERFACES_ACADOS_C_SRC ${CMAKE_CURRENT_SOURCE_DIR}/external_function_interface.c ${CMAKE_CURRENT_SOURCE_DIR}/dense_qp_interface.c ${CMAKE_CURRENT_SOURCE_DIR}/ocp_nlp_interface.c ${CMAKE_CURRENT_SOURCE_DIR}/ocp_qp_interface.c ${CMAKE_CURRENT_SOURCE_DIR}/condensing_interface.c ${CMAKE_CURRENT_SOURCE_DIR}/sim_interface.c )
C:/acados/interfaces/acados_c/CMakeLists.txt(42):  target_sources(acados PRIVATE ${INTERFACES_ACADOS_C_SRC} )
C:/acados/interfaces/acados_c/CMakeLists.txt(44):  install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} DESTINATION include FILES_MATCHING PATTERN *.h )
C:/acados/CMakeLists.txt(241):  add_subdirectory(${EXTERNAL_SRC_DIR} )
C:/acados/external/CMakeLists.txt(17):  if(CMAKE_CXX_COMPILER_ID MATCHES GNU OR CMAKE_CXX_COMPILER_ID MATCHES Clang )
C:/acados/external/CMakeLists.txt(22):  if(CMAKE_SYSTEM_NAME MATCHES dSpace )
C:/acados/external/CMakeLists.txt(23):  set(USE_C99_MATH OFF CACHE BOOL fmax is not implemented for dSpace. )
C:/acados/external/CMakeLists.txt(27):  set(BLASFEO_HEADERS_INSTALLATION_DIRECTORY include/blasfeo/include CACHE STRING  )
C:/acados/external/CMakeLists.txt(29):  set(TARGET ${BLASFEO_TARGET} CACHE STRING Set CPU architecture target FORCE )
C:/acados/external/CMakeLists.txt(30):  set(MF PANELMAJ CACHE STRING Matrix format FORCE )
C:/acados/external/CMakeLists.txt(31):  set(BLAS_API OFF CACHE BOOL Compile BLAS API FORCE )
C:/acados/external/CMakeLists.txt(32):  add_subdirectory(blasfeo )
C:/acados/external/blasfeo/CMakeLists.txt(36):  cmake_minimum_required(VERSION 2.8.11 )
C:/acados/external/blasfeo/CMakeLists.txt(39):  set(CMAKE_INSTALL_PREFIX /opt/blasfeo CACHE STRING Installation path )
C:/acados/external/blasfeo/CMakeLists.txt(41):  project(blasfeo C ASM )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(5):  if(UNIX )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(7):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(8):  set(CMAKE_ASM${ASM_DIALECT}_OUTPUT_EXTENSION .obj )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(11):  set(CMAKE_INCLUDE_FLAG_ASM${ASM_DIALECT} -I )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(12):  set(CMAKE_BASE_NAME )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(13):  get_filename_component(CMAKE_BASE_NAME ${CMAKE_ASM${ASM_DIALECT}_COMPILER} NAME_WE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(15):  if(${CMAKE_BASE_NAME} STREQUAL as )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(20):  set(_INCLUDED_FILE  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(21):  if(CMAKE_ASM${ASM_DIALECT}_COMPILER_ID )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(24):  if(NOT _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(25):  if(ASM${ASM_DIALECT} STREQUAL ASM )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(26):  message(STATUS Warning: Did not find file Compiler/${CMAKE_ASM${ASM_DIALECT}_COMPILER_ID}-ASM${ASM_DIALECT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(28):  include(Platform/${CMAKE_BASE_NAME} OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(31):  if(CMAKE_SYSTEM_PROCESSOR )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(32):  include(Platform/${CMAKE_EFFECTIVE_SYSTEM_NAME}-${CMAKE_ASM${ASM_DIALECT}_COMPILER_ID}-ASM${ASM_DIALECT}-${CMAKE_SYSTEM_PROCESSOR} OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(33):  if(NOT _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(34):  include(Platform/${CMAKE_EFFECTIVE_SYSTEM_NAME}-${CMAKE_BASE_NAME}-${CMAKE_SYSTEM_PROCESSOR} OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(38):  include(Platform/${CMAKE_EFFECTIVE_SYSTEM_NAME}-${CMAKE_ASM${ASM_DIALECT}_COMPILER_ID}-ASM${ASM_DIALECT} OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(39):  if(NOT _INCLUDED_FILE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(40):  include(Platform/${CMAKE_EFFECTIVE_SYSTEM_NAME}-${CMAKE_BASE_NAME} OPTIONAL )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(49):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(55):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_ASM )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(62):  if(NOT CMAKE_ASM${ASM_DIALECT}_SOURCE_FILE_EXTENSIONS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(68):  set(CMAKE_ASM${ASM_DIALECT}_FLAGS_INIT $ENV{ASM${ASM_DIALECT}FLAGS} ${CMAKE_ASM${ASM_DIALECT}_FLAGS_INIT} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(70):  cmake_initialize_per_config_variable(CMAKE_ASM${ASM_DIALECT}_FLAGS Flags used by the ASM${ASM_DIALECT} compiler )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP ${${_PREFIX}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(${_PREFIX} ${_INIT} CACHE STRING ${_DOCSTRING} during all build types. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(${_PREFIX} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS ${CMAKE_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT ${_BUILD_TYPE} STREQUAL  )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER ${_BUILD_TYPE} _BUILD_TYPE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP ${${_PREFIX}_${_BUILD_TYPE}_INIT} _INIT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(${_PREFIX}_${_BUILD_TYPE} ${_INIT} CACHE STRING ${_DOCSTRING} during ${_BUILD_TYPE} builds. )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(${_PREFIX}_${_BUILD_TYPE} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(72):  if(NOT CMAKE_ASM${ASM_DIALECT}_COMPILE_OBJECT )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(76):  if(NOT CMAKE_ASM${ASM_DIALECT}_CREATE_STATIC_LIBRARY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(82):  if(NOT CMAKE_ASM${ASM_DIALECT}_LINK_EXECUTABLE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(87):  if(NOT CMAKE_EXECUTABLE_RUNTIME_ASM${ASM_DIALECT}_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(88):  set(CMAKE_EXECUTABLE_RUNTIME_ASM${ASM_DIALECT}_FLAG ${CMAKE_SHARED_LIBRARY_RUNTIME_ASM${ASM_DIALECT}_FLAG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(91):  if(NOT CMAKE_EXECUTABLE_RUNTIME_ASM${ASM_DIALECT}_FLAG_SEP )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(92):  set(CMAKE_EXECUTABLE_RUNTIME_ASM${ASM_DIALECT}_FLAG_SEP ${CMAKE_SHARED_LIBRARY_RUNTIME_ASM${ASM_DIALECT}_FLAG_SEP} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(95):  if(NOT CMAKE_EXECUTABLE_RPATH_LINK_ASM${ASM_DIALECT}_FLAG )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(96):  set(CMAKE_EXECUTABLE_RPATH_LINK_ASM${ASM_DIALECT}_FLAG ${CMAKE_SHARED_LIBRARY_RPATH_LINK_ASM${ASM_DIALECT}_FLAG} )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(100):  if(NOT CMAKE_ASM${ASM_DIALECT}_CREATE_SHARED_LIBRARY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(101):  set(CMAKE_ASM${ASM_DIALECT}_CREATE_SHARED_LIBRARY )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(104):  if(NOT CMAKE_ASM${ASM_DIALECT}_CREATE_SHARED_MODULE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(105):  set(CMAKE_ASM${ASM_DIALECT}_CREATE_SHARED_MODULE )
C:/Program Files/cmake-3.16.0-win64-x64/share/cmake-3.16/Modules/CMakeASMInformation.cmake(109):  set(CMAKE_ASM${ASM_DIALECT}_INFOMATION_LOADED 1 )
C:/acados/external/blasfeo/CMakeLists.txt(43):  set(CMAKE_VERBOSE_MAKEFILE ON )
C:/acados/external/blasfeo/CMakeLists.txt(49):  set(TARGET X64_AUTOMATIC CACHE STRING Target architecture )
C:/acados/external/blasfeo/CMakeLists.txt(65):  set(LA HIGH_PERFORMANCE CACHE STRING Linear algebra backend )
C:/acados/external/blasfeo/CMakeLists.txt(70):  set(BLASFEO_REF_API OFF )
C:/acados/external/blasfeo/CMakeLists.txt(71):  set(BLASFEO_HP_API OFF )
C:/acados/external/blasfeo/CMakeLists.txt(77):  set(MF PANELMAJ CACHE STRING Matrix Format internally used in blasfeo_{d,s}mat struct )
C:/acados/external/blasfeo/CMakeLists.txt(80):  set(BLAS_API ON CACHE BOOL Compile BLAS API )
C:/acados/external/blasfeo/CMakeLists.txt(86):  set(FORTRAN_BLAS_API OFF CACHE BOOL Standard fortran BLAS API )
C:/acados/external/blasfeo/CMakeLists.txt(89):  set(EXTERNAL_BLAS 0 CACHE STRING Reference blas to use )
C:/acados/external/blasfeo/CMakeLists.txt(98):  set(K_MAX_STACK 300 CACHE STRING Maximum k value using stack memory )
C:/acados/external/blasfeo/CMakeLists.txt(102):  set(MACRO_LEVEL 1 )
C:/acados/external/blasfeo/CMakeLists.txt(105):  set(USE_C99_MATH ON CACHE BOOL Use C99 extension to math library )
C:/acados/external/blasfeo/CMakeLists.txt(109):  set(EXT_DEP ON CACHE BOOL Compile external dependencies in BLASFEO )
C:/acados/external/blasfeo/CMakeLists.txt(113):  set(RUNTIME_CHECKS OFF )
C:/acados/external/blasfeo/CMakeLists.txt(116):  set(BLASFEO_TESTING OFF CACHE BOOL Tests disabled )
C:/acados/external/blasfeo/CMakeLists.txt(119):  set(BLASFEO_BENCHMARKS OFF CACHE BOOL Benchmarks disabled )
C:/acados/external/blasfeo/CMakeLists.txt(121):  set(BLASFEO_EXAMPLES ON CACHE BOOL Examples enabled )
C:/acados/external/blasfeo/CMakeLists.txt(125):  set(BUILD_SHARED_LIBS OFF CACHE STRING Build shared libraries )
C:/acados/external/blasfeo/CMakeLists.txt(128):  set(BLASFEO_HEADERS_INSTALLATION_DIRECTORY include CACHE STRING Headers local installation directory )
C:/acados/external/blasfeo/CMakeLists.txt(133):  set(ALLOWED_TARGETS X64_AUTOMATIC X64_INTEL_HASWELL X64_INTEL_SANDY_BRIDGE X64_INTEL_CORE X64_AMD_BULLDOZER ARMV8A_ARM_CORTEX_A57 ARMV8A_ARM_CORTEX_A53 ARMV7A_ARM_CORTEX_A15 ARMV7A_ARM_CORTEX_A9 ARMV7A_ARM_CORTEX_A7 GENERIC )
C:/acados/external/blasfeo/CMakeLists.txt(146):  set_property(CACHE TARGET PROPERTY STRINGS ${ALLOWED_TARGETS} )
C:/acados/external/blasfeo/CMakeLists.txt(152):  set(X64_AUTOMATIC_TARGETS X64_INTEL_HASWELL X64_AMD_BULLDOZER X64_INTEL_SANDY_BRIDGE X64_INTEL_CORE GENERIC )
C:/acados/external/blasfeo/CMakeLists.txt(161):  list(FIND ALLOWED_TARGETS ${TARGET} isvalid )
C:/acados/external/blasfeo/CMakeLists.txt(162):  if(${isvalid} EQUAL -1 )
C:/acados/external/blasfeo/CMakeLists.txt(168):  set(ALLOWED_BACKENDS HIGH_PERFORMANCE REFERENCE BLAS )
C:/acados/external/blasfeo/CMakeLists.txt(173):  set_property(CACHE LA PROPERTY STRINGS ${ALLOWED_BACKENDS} )
C:/acados/external/blasfeo/CMakeLists.txt(175):  list(FIND ALLOWED_BACKENDS ${LA} isvalid )
C:/acados/external/blasfeo/CMakeLists.txt(176):  if(${isvalid} EQUAL -1 )
C:/acados/external/blasfeo/CMakeLists.txt(182):  set(ALLOWED_MATRIX_FORMAT COLMAJ PANELMAJ )
C:/acados/external/blasfeo/CMakeLists.txt(186):  set_property(CACHE MF PROPERTY STRINGS ${ALLOWED_MATRIX_FORMAT} )
C:/acados/external/blasfeo/CMakeLists.txt(188):  list(FIND ALLOWED_MATRIX_FORMAT ${MF} isvalid )
C:/acados/external/blasfeo/CMakeLists.txt(189):  if(${isvalid} EQUAL -1 )
C:/acados/external/blasfeo/CMakeLists.txt(193):  if(${LA} MATCHES HIGH_PERFORMANCE )
C:/acados/external/blasfeo/CMakeLists.txt(194):  if(${BLASFEO_REF_API} )
C:/acados/external/blasfeo/CMakeLists.txt(202):  set(ALLOWED_EXTERNAL_BLAS 0 OPENBLAS NETLIB MKL BLIS ATLAS ARMPL )
C:/acados/external/blasfeo/CMakeLists.txt(211):  set_property(CACHE EXTERNAL_BLAS PROPERTY STRINGS ${ALLOWED_EXTERNAL_BLAS} )
C:/acados/external/blasfeo/CMakeLists.txt(213):  list(FIND ALLOWED_EXTERNAL_BLAS ${EXTERNAL_BLAS} isvalid )
C:/acados/external/blasfeo/CMakeLists.txt(214):  if(${isvalid} EQUAL -1 )
C:/acados/external/blasfeo/CMakeLists.txt(220):  if(NOT ${CMAKE_PROJECT_NAME} STREQUAL blasfeo )
C:/acados/external/blasfeo/CMakeLists.txt(221):  set(BLASFEO_ALLOWED_TARGETS ${ALLOWED_TARGETS} PARENT_SCOPE )
C:/acados/external/blasfeo/CMakeLists.txt(222):  set(BLASFEO_ALLOWED_BACKENDS ${ALLOWED_BACKENDS} PARENT_SCOPE )
C:/acados/external/blasfeo/CMakeLists.txt(223):  set(BLASFEO_ALLOWED_EXTERNAL_BLAS ${ALLOWED_EXTERNAL_BLAS} PARENT_SCOPE )
C:/acados/external/blasfeo/CMakeLists.txt(226):  if(NOT DEFINED ( BLASFEO_CROSSCOMPILING ) )
C:/acados/external/blasfeo/CMakeLists.txt(227):  set(BLASFEO_CROSSCOMPILING ${CMAKE_CROSSCOMPILING} )
C:/acados/external/blasfeo/CMakeLists.txt(231):  if(CMAKE_SYSTEM MATCHES dSpace )
C:/acados/external/blasfeo/CMakeLists.txt(232):  set(BLASFEO_TESTING OFF CACHE BOOL Examples disabled FORCE )
C:/acados/external/blasfeo/CMakeLists.txt(233):  set(BLASFEO_BENCHMARKS OFF CACHE BOOL Benchmarks disabled FORCE )
C:/acados/external/blasfeo/CMakeLists.txt(234):  set(BLASFEO_EXAMPLES OFF CACHE BOOL Examples disabled FORCE )
C:/acados/external/blasfeo/CMakeLists.txt(242):  if(CMAKE_C_COMPILER_ID MATCHES MSVC )
C:/acados/external/blasfeo/CMakeLists.txt(254):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -I${BLASFEO_PATH}/include )
C:/acados/external/blasfeo/CMakeLists.txt(256):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -J D:/MSA/acados/external/blasfeo/include )
C:/acados/external/blasfeo/CMakeLists.txt(257):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -H )
C:/acados/external/blasfeo/CMakeLists.txt(258):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -q )
C:/acados/external/blasfeo/CMakeLists.txt(259):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -S )
C:/acados/external/blasfeo/CMakeLists.txt(260):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -x )
C:/acados/external/blasfeo/CMakeLists.txt(261):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -xG )
C:/acados/external/blasfeo/CMakeLists.txt(262):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -ze )
C:/acados/external/blasfeo/CMakeLists.txt(263):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -f )
C:/acados/external/blasfeo/CMakeLists.txt(264):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -p603e )
C:/acados/external/blasfeo/CMakeLists.txt(269):  message(STATUS Using linear algebra: ${LA} )
C:/acados/external/blasfeo/CMakeLists.txt(270):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -DLA_${LA} )
C:/acados/external/blasfeo/CMakeLists.txt(271):  set(CMAKE_ASM_FLAGS ${CMAKE_ASM_FLAGS} -DLA_${LA} )
C:/acados/external/blasfeo/CMakeLists.txt(273):  if(${BLASFEO_REF_API} )
C:/acados/external/blasfeo/CMakeLists.txt(278):  message(STATUS Using matrix format: ${MF} )
C:/acados/external/blasfeo/CMakeLists.txt(279):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -DMF_${MF} )
C:/acados/external/blasfeo/CMakeLists.txt(280):  set(CMAKE_ASM_FLAGS ${CMAKE_ASM_FLAGS} -DMF_${MF} )
C:/acados/external/blasfeo/CMakeLists.txt(283):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -DK_MAX_STACK=${K_MAX_STACK} )
C:/acados/external/blasfeo/CMakeLists.txt(286):  if(${BLAS_API} )
C:/acados/external/blasfeo/CMakeLists.txt(295):  if(${RUNTIME_CHECKS} )
C:/acados/external/blasfeo/CMakeLists.txt(300):  if(${USE_C99_MATH} )
C:/acados/external/blasfeo/CMakeLists.txt(305):  if(${EXT_DEP} )
C:/acados/external/blasfeo/CMakeLists.txt(310):  if(${MACRO_LEVEL} MATCHES 1 )
C:/acados/external/blasfeo/CMakeLists.txt(311):  set(CMAKE_ASM_FLAGS ${CMAKE_ASM_FLAGS} -DMACRO_LEVEL=1 )
C:/acados/external/blasfeo/CMakeLists.txt(313):  if(${MACRO_LEVEL} MATCHES 2 )
C:/acados/external/blasfeo/CMakeLists.txt(318):  if(${CMAKE_HOST_SYSTEM_NAME} MATCHES Linux )
C:/acados/external/blasfeo/CMakeLists.txt(322):  if(${CMAKE_HOST_SYSTEM_NAME} MATCHES Darwin )
C:/acados/external/blasfeo/CMakeLists.txt(326):  if(${CMAKE_HOST_SYSTEM_NAME} MATCHES Windows )
C:/acados/external/blasfeo/CMakeLists.txt(327):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -DOS_WINDOWS )
C:/acados/external/blasfeo/CMakeLists.txt(328):  set(CMAKE_ASM_FLAGS ${CMAKE_ASM_FLAGS} -DOS_WINDOWS )
C:/acados/external/blasfeo/CMakeLists.txt(329):  if(${BUILD_SHARED_LIBS} MATCHES ON )
C:/acados/external/blasfeo/CMakeLists.txt(335):  set(C_FLAGS_BLAS_0 -DEXTERNAL_BLAS_NONE )
C:/acados/external/blasfeo/CMakeLists.txt(336):  set(C_FLAGS_BLAS_OPENBLAS -DEXTERNAL_BLAS_OPENBLAS -I/opt/openblas/include )
C:/acados/external/blasfeo/CMakeLists.txt(337):  set(C_FLAGS_BLAS_BLIS -DEXTERNAL_BLAS_BLIS -std=gnu99 -I/opt/blis/include/blis )
C:/acados/external/blasfeo/CMakeLists.txt(338):  set(C_FLAGS_BLAS_NETLIB -DEXTERNAL_BLAS_NETLIB -I/opt/netlib/include )
C:/acados/external/blasfeo/CMakeLists.txt(339):  set(C_FLAGS_BLAS_MKL -DEXTERNAL_BLAS_MKL -std=c99 -m64 -DMKL_DIRECT_CALL_SEQ -I/opt/intel/mkl/include )
C:/acados/external/blasfeo/CMakeLists.txt(340):  set(C_FLAGS_BLAS_ATLAS -DEXTERNAL_BLAS_ATLAS )
C:/acados/external/blasfeo/CMakeLists.txt(341):  set(C_FLAGS_BLAS_ARMPL -DEXTERNAL_BLAS_ARMPL -I/opt/arm/armpl_20.3_gcc-7.1/include )
C:/acados/external/blasfeo/CMakeLists.txt(343):  message(STATUS Using external BLAS: ${EXTERNAL_BLAS} )
C:/acados/external/blasfeo/CMakeLists.txt(344):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} ${C_FLAGS_BLAS_${EXTERNAL_BLAS}} )
C:/acados/external/blasfeo/CMakeLists.txt(348):  if(CMAKE_C_COMPILER_ID MATCHES GNU OR CMAKE_C_COMPILER_ID MATCHES Clang )
C:/acados/external/blasfeo/CMakeLists.txt(357):  set(C_FLAGS_TARGET_X64_INTEL_HASWELL -m64 -mavx -mavx2 -mfma )
C:/acados/external/blasfeo/CMakeLists.txt(358):  set(C_FLAGS_TARGET_X64_INTEL_SANDY_BRIDGE -m64 -mavx )
C:/acados/external/blasfeo/CMakeLists.txt(359):  set(C_FLAGS_TARGET_X64_INTEL_CORE -m64 -msse3 )
C:/acados/external/blasfeo/CMakeLists.txt(360):  set(C_FLAGS_TARGET_X64_AMD_BULLDOZER -m64 -mavx -mfma )
C:/acados/external/blasfeo/CMakeLists.txt(361):  set(C_FLAGS_TARGET_ARMV8A_ARM_CORTEX_A57 -march=armv8-a+crc+crypto+simd -mcpu=cortex-a57 )
C:/acados/external/blasfeo/CMakeLists.txt(362):  set(C_FLAGS_TARGET_ARMV8A_ARM_CORTEX_A53 -march=armv8-a+crc+crypto+simd -mcpu=cortex-a53 )
C:/acados/external/blasfeo/CMakeLists.txt(363):  set(C_FLAGS_TARGET_ARMV7A_ARM_CORTEX_A15 -marm -mfloat-abi=hard -mfpu=neon-vfpv4 -mcpu=cortex-a15 )
C:/acados/external/blasfeo/CMakeLists.txt(364):  set(C_FLAGS_TARGET_ARMV7A_ARM_CORTEX_A9 -marm -mfloat-abi=hard -mfpu=neon -mcpu=cortex-a9 )
C:/acados/external/blasfeo/CMakeLists.txt(365):  set(C_FLAGS_TARGET_ARMV7A_ARM_CORTEX_A7 -marm -mfloat-abi=hard -mfpu=neon-vfpv4 -mcpu=cortex-a7 )
C:/acados/external/blasfeo/CMakeLists.txt(366):  set(C_FLAGS_TARGET_GENERIC  )
C:/acados/external/blasfeo/CMakeLists.txt(369):  set(ASM_FLAGS_TARGET_X64_INTEL_HASWELL  )
C:/acados/external/blasfeo/CMakeLists.txt(370):  set(ASM_FLAGS_TARGET_X64_INTEL_SANDY_BRIDGE  )
C:/acados/external/blasfeo/CMakeLists.txt(371):  set(ASM_FLAGS_TARGET_X64_INTEL_CORE  )
C:/acados/external/blasfeo/CMakeLists.txt(372):  set(ASM_FLAGS_TARGET_X64_AMD_BULLDOZER  )
C:/acados/external/blasfeo/CMakeLists.txt(373):  set(ASM_FLAGS_TARGET_ARMV8A_ARM_CORTEX_A57  )
C:/acados/external/blasfeo/CMakeLists.txt(374):  set(ASM_FLAGS_TARGET_ARMV8A_ARM_CORTEX_A53  )
C:/acados/external/blasfeo/CMakeLists.txt(375):  set(ASM_FLAGS_TARGET_ARMV7A_ARM_CORTEX_A15 -mfpu=neon-vfpv4 -mcpu=cortex-a15 )
C:/acados/external/blasfeo/CMakeLists.txt(376):  set(ASM_FLAGS_TARGET_ARMV7A_ARM_CORTEX_A9 -mfpu=neon -mcpu=cortex-a9 )
C:/acados/external/blasfeo/CMakeLists.txt(377):  set(ASM_FLAGS_TARGET_ARMV7A_ARM_CORTEX_A7 -mfpu=neon-vfpv4 -mcpu=cortex-a7 )
C:/acados/external/blasfeo/CMakeLists.txt(378):  set(ASM_FLAGS_TARGET_GENERIC  )
C:/acados/external/blasfeo/CMakeLists.txt(381):  if(${TARGET} MATCHES X64_AUTOMATIC )
C:/acados/external/blasfeo/CMakeLists.txt(385):  else()
C:/acados/external/blasfeo/CMakeLists.txt(386):  include(${PROJECT_SOURCE_DIR}/cmake/TestSingleTarget.cmake )
C:/acados/external/blasfeo/cmake/TestSingleTarget.cmake(1):  include(${PROJECT_SOURCE_DIR}/cmake/isa_tests/isa_test.cmake )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(14):  function(TestISA TEST_TARGET )
C:/acados/external/blasfeo/cmake/TestSingleTarget.cmake(2):  include(${PROJECT_SOURCE_DIR}/cmake/intrinsic_tests/intrinsic_test.cmake )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(15):  function(TestIntrinsics TEST_TARGET )
C:/acados/external/blasfeo/cmake/TestSingleTarget.cmake(4):  function(TestSingleTarget )
C:/acados/external/blasfeo/CMakeLists.txt(387):  TestSingleTarget()
C:/acados/external/blasfeo/cmake/TestSingleTarget.cmake(5):  set(TEST_TARGET ${TARGET} )
C:/acados/external/blasfeo/cmake/TestSingleTarget.cmake(9):  TestISA(${TEST_TARGET} )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(17):  include(${PROJECT_SOURCE_DIR}/cmake/ArchitectureTests.cmake )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(5):  set(CMP_CHECK_X64_INTEL_HASWELL TEST_AVX2 TEST_FMA )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(11):  set(CMP_CHECK_X64_INTEL_SANDY_BRIDGE TEST_AVX )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(16):  set(CMP_CHECK_X64_INTEL_CORE TEST_SSE3 )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(21):  set(CMP_CHECK_X64_AMD_BULLDOZER TEST_AVX TEST_FMA )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(27):  set(CMP_CHECK_ARMV8A_ARM_CORTEX_A57 TEST_VFPv4 TEST_NEONv2 )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(33):  set(CMP_CHECK_ARMV8A_ARM_CORTEX_A53 TEST_VFPv4 TEST_NEONv2 )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(39):  set(CMP_CHECK_ARMV7A_ARM_CORTEX_A15 TEST_VFPv3 TEST_NEON )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(45):  set(CMP_CHECK_ARMV7A_ARM_CORTEX_A7 TEST_VFPv3 TEST_NEON )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(51):  set(CMP_CHECK_ARMV7A_ARM_CORTEX_A9 TEST_VFPv3 TEST_NEON )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(20):  set(CMP_CHECK_SRCS ${PROJECT_SOURCE_DIR}/cmake/isa_tests/isa_test.c )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(24):  set(C_DEFS_CHK  )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(27):  foreach(CHECK ${CMP_CHECK_${TEST_TARGET}} )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(32):  string(REPLACE ;  C_DEFS_CHK ${C_DEFS_CHK} )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(35):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} ${C_FLAGS_TARGET_${TEST_TARGET}} )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(36):  set(CMAKE_ASM_FLAGS ${CMAKE_ASM_FLAGS} ${ASM_FLAGS_TARGET_${TEST_TARGET}} )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(38):  if(${BLASFEO_CROSSCOMPILING} )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(39):  set(CHKISA_TARGET_RUN_${TEST_TARGET} 1 )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(42):  if(${CMAKE_VERSION} VERSION_EQUAL 3.6.0 OR ${CMAKE_VERSION} VERSION_GREATER 3.6 )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(43):  set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(48):  try_compile(CHKISA_TARGET_BUILD_${TEST_TARGET} ${CMAKE_BINARY_DIR}/compilerTest/${TEST_TARGET} SOURCES ${CMP_CHECK_SRCS} CMAKE_FLAGS -DCOMPILE_DEFINITIONS=${C_DEFS_CHK} OUTPUT_VARIABLE CHK_OUTPUT_${TEST_TARGET} )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(68):  if(${CHKISA_TARGET_BUILD_${TEST_TARGET}} )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(69):  set(CHKISA_TARGET_BUILD TRUE PARENT_SCOPE )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(71):  if(${CHKISA_TARGET_RUN_${TEST_TARGET}} STREQUAL 0 )
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(73):  else()
C:/acados/external/blasfeo/cmake/isa_tests/isa_test.cmake(74):  set(CHKISA_TARGET_RUN FALSE PARENT_SCOPE )
C:/acados/external/blasfeo/cmake/TestSingleTarget.cmake(11):  if(${CHKISA_TARGET_BUILD} )
C:/acados/external/blasfeo/cmake/TestSingleTarget.cmake(12):  message(STATUS Testing target ${TEST_TARGET}: assembly compilation [success] )
C:/acados/external/blasfeo/cmake/TestSingleTarget.cmake(14):  if(NOT ${BLASFEO_CROSSCOMPILING} )
C:/acados/external/blasfeo/cmake/TestSingleTarget.cmake(30):  TestIntrinsics(${TEST_TARGET} )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(18):  include(${PROJECT_SOURCE_DIR}/cmake/ArchitectureTests.cmake )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(5):  set(CMP_CHECK_X64_INTEL_HASWELL TEST_AVX2 TEST_FMA )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(11):  set(CMP_CHECK_X64_INTEL_SANDY_BRIDGE TEST_AVX )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(16):  set(CMP_CHECK_X64_INTEL_CORE TEST_SSE3 )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(21):  set(CMP_CHECK_X64_AMD_BULLDOZER TEST_AVX TEST_FMA )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(27):  set(CMP_CHECK_ARMV8A_ARM_CORTEX_A57 TEST_VFPv4 TEST_NEONv2 )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(33):  set(CMP_CHECK_ARMV8A_ARM_CORTEX_A53 TEST_VFPv4 TEST_NEONv2 )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(39):  set(CMP_CHECK_ARMV7A_ARM_CORTEX_A15 TEST_VFPv3 TEST_NEON )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(45):  set(CMP_CHECK_ARMV7A_ARM_CORTEX_A7 TEST_VFPv3 TEST_NEON )
C:/acados/external/blasfeo/cmake/ArchitectureTests.cmake(51):  set(CMP_CHECK_ARMV7A_ARM_CORTEX_A9 TEST_VFPv3 TEST_NEON )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(21):  set(CMP_CHECK_SRCS ${PROJECT_SOURCE_DIR}/cmake/intrinsic_tests/intrinsic_test.c )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(25):  set(C_DEFS_CHK  )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(28):  foreach(CHECK ${CMP_CHECK_${TEST_TARGET}} )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(32):  string(REPLACE ;  C_DEFS_CHK ${C_DEFS_CHK} )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(35):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} ${C_FLAGS_TARGET_${TEST_TARGET}} )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(36):  set(CMAKE_ASM_FLAGS ${CMAKE_ASM_FLAGS} ${ASM_FLAGS_TARGET_${TEST_TARGET}} )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(38):  if(${BLASFEO_CROSSCOMPILING} )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(39):  set(CHKINTRINSIC_TARGET_RUN_${TEST_TARGET} 1 )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(42):  if(${CMAKE_VERSION} VERSION_EQUAL 3.6.0 OR ${CMAKE_VERSION} VERSION_GREATER 3.6 )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(43):  set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(48):  try_compile(CHKINTRINSIC_TARGET_BUILD_${TEST_TARGET} ${CMAKE_BINARY_DIR}/compilerTest/${TEST_TARGET} SOURCES ${CMP_CHECK_SRCS} CMAKE_FLAGS -DCOMPILE_DEFINITIONS=${C_DEFS_CHK} OUTPUT_VARIABLE CHK_OUTPUT${TEST_TARGET} )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(66):  if(${CHKINTRINSIC_TARGET_BUILD_${TEST_TARGET}} )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(67):  set(CHKINTRINSIC_TARGET_BUILD TRUE PARENT_SCOPE )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(69):  if(${CHKINTRINSIC_TARGET_RUN_${TEST_TARGET}} STREQUAL 0 )
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(71):  else()
C:/acados/external/blasfeo/cmake/intrinsic_tests/intrinsic_test.cmake(72):  set(CHKINTRINSIC_TARGET_RUN FALSE PARENT_SCOPE )
C:/acados/external/blasfeo/cmake/TestSingleTarget.cmake(32):  if(${CHKINTRINSIC_TARGET_BUILD} )
C:/acados/external/blasfeo/cmake/TestSingleTarget.cmake(33):  message(STATUS Testing target ${TEST_TARGET}: intrinsic compilation [success] )
C:/acados/external/blasfeo/cmake/TestSingleTarget.cmake(35):  if(NOT ${BLASFEO_CROSSCOMPILING} )
C:/acados/external/blasfeo/CMakeLists.txt(388):  message(STATUS Compiling for target: ${TARGET} )
C:/acados/external/blasfeo/CMakeLists.txt(393):  if(${TARGET} MATCHES X64_INTEL_HASWELL )
C:/acados/external/blasfeo/CMakeLists.txt(398):  if(${TARGET} MATCHES X64_INTEL_SANDY_BRIDGE )
C:/acados/external/blasfeo/CMakeLists.txt(402):  if(${TARGET} MATCHES X64_INTEL_CORE )
C:/acados/external/blasfeo/CMakeLists.txt(406):  if(${TARGET} MATCHES X64_AMD_BULLDOZER )
C:/acados/external/blasfeo/CMakeLists.txt(411):  if(${TARGET} MATCHES ARMV8A_ARM_CORTEX_A57 )
C:/acados/external/blasfeo/CMakeLists.txt(416):  if(${TARGET} MATCHES ARMV8A_ARM_CORTEX_A53 )
C:/acados/external/blasfeo/CMakeLists.txt(421):  if(${TARGET} MATCHES ARMV7A_ARM_CORTEX_A15 )
C:/acados/external/blasfeo/CMakeLists.txt(426):  if(${TARGET} MATCHES ARMV7A_ARM_CORTEX_A7 )
C:/acados/external/blasfeo/CMakeLists.txt(431):  if(${TARGET} MATCHES ARMV7A_ARM_CORTEX_A9 )
C:/acados/external/blasfeo/CMakeLists.txt(438):  configure_file(${PROJECT_SOURCE_DIR}/blasfeo_target.h.in ${CMAKE_CURRENT_SOURCE_DIR}/include/blasfeo_target.h @ONLY )
C:/acados/external/blasfeo/CMakeLists.txt(443):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -DTARGET_${TARGET} )
C:/acados/external/blasfeo/CMakeLists.txt(444):  set(CMAKE_ASM_FLAGS ${CMAKE_ASM_FLAGS} -DTARGET_${TARGET} )
C:/acados/external/blasfeo/CMakeLists.txt(446):  if(CMAKE_C_COMPILER_ID MATCHES GNU OR CMAKE_C_COMPILER_ID MATCHES Clang )
C:/acados/external/blasfeo/CMakeLists.txt(455):  file(GLOB AUX_COMMON_SRC ${PROJECT_SOURCE_DIR}/auxiliary/blasfeo_processor_features.c ${PROJECT_SOURCE_DIR}/auxiliary/blasfeo_stdlib.c ${PROJECT_SOURCE_DIR}/auxiliary/memory.c ${PROJECT_SOURCE_DIR}/auxiliary/d_aux_common.c ${PROJECT_SOURCE_DIR}/auxiliary/s_aux_common.c )
C:/acados/external/blasfeo/CMakeLists.txt(463):  file(GLOB AUX_EXT_DEP_SRC ${PROJECT_SOURCE_DIR}/auxiliary/d_aux_ext_dep_common.c ${PROJECT_SOURCE_DIR}/auxiliary/s_aux_ext_dep_common.c ${PROJECT_SOURCE_DIR}/auxiliary/d_aux_ext_dep.c ${PROJECT_SOURCE_DIR}/auxiliary/s_aux_ext_dep.c ${PROJECT_SOURCE_DIR}/auxiliary/v_aux_ext_dep_lib.c ${PROJECT_SOURCE_DIR}/auxiliary/i_aux_ext_dep_lib.c ${PROJECT_SOURCE_DIR}/auxiliary/timing.c )
C:/acados/external/blasfeo/CMakeLists.txt(473):  file(GLOB AUX_REF_SRC ${PROJECT_SOURCE_DIR}/auxiliary/d_aux_ref.c ${PROJECT_SOURCE_DIR}/auxiliary/s_aux_ref.c )
C:/acados/external/blasfeo/CMakeLists.txt(478):  file(GLOB BLASFEO_REF_SRC ${PROJECT_SOURCE_DIR}/blasfeo_ref/d_blas1_ref.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/d_blas2_ref.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/d_blas2_diag_ref.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/d_blas3_ref.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/d_blas3_diag_ref.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/d_lapack_ref.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/s_blas1_ref.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/s_blas2_ref.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/s_blas2_diag_ref.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/s_blas3_ref.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/s_blas3_diag_ref.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/s_lapack_ref.c )
C:/acados/external/blasfeo/CMakeLists.txt(494):  file(GLOB AUX_HP_CM_SRC ${PROJECT_SOURCE_DIR}/auxiliary/d_aux_hp_cm.c ${PROJECT_SOURCE_DIR}/auxiliary/s_aux_hp_cm.c )
C:/acados/external/blasfeo/CMakeLists.txt(499):  file(GLOB BLASFEO_HP_CM_SRC ${PROJECT_SOURCE_DIR}/blasfeo_hp_cm/dgemm.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_cm/dsyrk.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_cm/dtrsm.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_cm/dtrmm.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_cm/dpotrf.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_cm/dgetrf.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_cm/sgemm.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_cm/strsm.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_cm/spotrf.c )
C:/acados/external/blasfeo/CMakeLists.txt(512):  file(GLOB BLASFEO_HP_CM_REF_SRC ${PROJECT_SOURCE_DIR}/blasfeo_ref/d_blas1_hp_cm.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/d_blas2_hp_cm.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/d_blas2_diag_hp_cm.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/d_blas3_hp_cm.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/d_blas3_diag_hp_cm.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/d_lapack_hp_cm.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/s_blas1_hp_cm.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/s_blas2_hp_cm.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/s_blas2_diag_hp_cm.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/s_blas3_hp_cm.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/s_blas3_diag_hp_cm.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/s_lapack_hp_cm.c )
C:/acados/external/blasfeo/CMakeLists.txt(528):  file(GLOB BLASFEO_WR_SRC ${PROJECT_SOURCE_DIR}/blasfeo_wr/d_blas1_lib.c ${PROJECT_SOURCE_DIR}/blasfeo_wr/d_blas2_lib.c ${PROJECT_SOURCE_DIR}/blasfeo_wr/d_blas2_diag_lib.c ${PROJECT_SOURCE_DIR}/blasfeo_wr/d_blas3_lib.c ${PROJECT_SOURCE_DIR}/blasfeo_wr/d_blas3_diag_lib.c ${PROJECT_SOURCE_DIR}/blasfeo_wr/d_lapack_lib.c ${PROJECT_SOURCE_DIR}/blasfeo_wr/s_blas1_lib.c ${PROJECT_SOURCE_DIR}/blasfeo_wr/s_blas2_lib.c ${PROJECT_SOURCE_DIR}/blasfeo_wr/s_blas2_diag_lib.c ${PROJECT_SOURCE_DIR}/blasfeo_wr/s_blas3_lib.c ${PROJECT_SOURCE_DIR}/blasfeo_wr/s_blas3_diag_lib.c ${PROJECT_SOURCE_DIR}/blasfeo_wr/s_lapack_lib.c )
C:/acados/external/blasfeo/CMakeLists.txt(545):  file(GLOB BLAS_SRC ${PROJECT_SOURCE_DIR}/blas_api/dcopy.c ${PROJECT_SOURCE_DIR}/blas_api/daxpy.c ${PROJECT_SOURCE_DIR}/blas_api/ddot.c ${PROJECT_SOURCE_DIR}/blas_api/dgemm_ref.c ${PROJECT_SOURCE_DIR}/blas_api/dsyrk_ref.c ${PROJECT_SOURCE_DIR}/blas_api/dtrmm_ref.c ${PROJECT_SOURCE_DIR}/blas_api/dtrsm_ref.c ${PROJECT_SOURCE_DIR}/blas_api/dgesv.c ${PROJECT_SOURCE_DIR}/blas_api/dgetrf_ref.c ${PROJECT_SOURCE_DIR}/blas_api/dgetrs.c ${PROJECT_SOURCE_DIR}/blas_api/dlaswp.c ${PROJECT_SOURCE_DIR}/blas_api/dposv.c ${PROJECT_SOURCE_DIR}/blas_api/dpotrf_ref.c ${PROJECT_SOURCE_DIR}/blas_api/dpotrs.c ${PROJECT_SOURCE_DIR}/blas_api/dtrtrs.c ${PROJECT_SOURCE_DIR}/blas_api/saxpy.c ${PROJECT_SOURCE_DIR}/blas_api/sdot.c ${PROJECT_SOURCE_DIR}/blas_api/sgemm_ref.c ${PROJECT_SOURCE_DIR}/blas_api/strsm_ref.c ${PROJECT_SOURCE_DIR}/blas_api/spotrf_ref.c )
C:/acados/external/blasfeo/CMakeLists.txt(569):  file(GLOB REF_BLAS_SRC ${PROJECT_SOURCE_DIR}/blasfeo_ref/d_blas3_ref_blas.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/d_lapack_ref_blas.c ${PROJECT_SOURCE_DIR}/blasfeo_ref/s_blas3_ref_blas.c )
C:/acados/external/blasfeo/CMakeLists.txt(576):  file(GLOB BLAS_CM_SRC ${PROJECT_SOURCE_DIR}/blas_api/dgemm_ref.c ${PROJECT_SOURCE_DIR}/blas_api/dsyrk_ref.c ${PROJECT_SOURCE_DIR}/blas_api/dtrmm_ref.c ${PROJECT_SOURCE_DIR}/blas_api/dtrsm_ref.c ${PROJECT_SOURCE_DIR}/blas_api/dpotrf_ref.c ${PROJECT_SOURCE_DIR}/blas_api/dgetrf_ref.c ${PROJECT_SOURCE_DIR}/blas_api/sgemm_ref.c )
C:/acados/external/blasfeo/CMakeLists.txt(587):  if(${TARGET} MATCHES X64_INTEL_HASWELL OR ${TARGET} MATCHES X64_INTEL_SANDY_BRIDGE )
C:/acados/external/blasfeo/CMakeLists.txt(612):  if(${TARGET} MATCHES X64_INTEL_CORE OR ${TARGET} MATCHES X64_AMD_BULLDOZER OR ${TARGET} MATCHES ARMV8A_ARM_CORTEX_A57 OR ${TARGET} MATCHES ARMV8A_ARM_CORTEX_A53 OR ${TARGET} MATCHES ARMV7A_ARM_CORTEX_A15 OR ${TARGET} MATCHES ARMV7A_ARM_CORTEX_A7 OR ${TARGET} MATCHES ARMV7A_ARM_CORTEX_A9 OR ${TARGET} MATCHES GENERIC )
C:/acados/external/blasfeo/CMakeLists.txt(614):  file(GLOB BLASFEO_HP_PM_SRC ${PROJECT_SOURCE_DIR}/blasfeo_hp_pm/d_blas1_lib4.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_pm/d_blas2_lib4.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_pm/d_blas2_diag_lib.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_pm/d_blas3_lib4.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_pm/d_blas3_diag_lib4.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_pm/d_lapack_lib4.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_pm/s_blas1_lib4.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_pm/s_blas2_lib4.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_pm/s_blas2_diag_lib.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_pm/s_blas3_lib4.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_pm/s_blas3_diag_lib4.c ${PROJECT_SOURCE_DIR}/blasfeo_hp_pm/s_lapack_lib4.c )
C:/acados/external/blasfeo/CMakeLists.txt(630):  file(GLOB AUX_HP_PM_SRC ${PROJECT_SOURCE_DIR}/auxiliary/d_aux_lib4.c ${PROJECT_SOURCE_DIR}/auxiliary/s_aux_lib4.c ${PROJECT_SOURCE_DIR}/auxiliary/m_aux_lib44.c )
C:/acados/external/blasfeo/CMakeLists.txt(638):  if(${TARGET} MATCHES X64_INTEL_HASWELL )
C:/acados/external/blasfeo/CMakeLists.txt(683):  if(${TARGET} MATCHES X64_INTEL_SANDY_BRIDGE )
C:/acados/external/blasfeo/CMakeLists.txt(726):  if(${TARGET} MATCHES X64_INTEL_CORE )
C:/acados/external/blasfeo/CMakeLists.txt(761):  if(${TARGET} MATCHES X64_AMD_BULLDOZER )
C:/acados/external/blasfeo/CMakeLists.txt(794):  if(${TARGET} MATCHES ARMV8A_ARM_CORTEX_A57 )
C:/acados/external/blasfeo/CMakeLists.txt(838):  if(${TARGET} MATCHES ARMV8A_ARM_CORTEX_A53 )
C:/acados/external/blasfeo/CMakeLists.txt(884):  if(${TARGET} MATCHES ARMV7A_ARM_CORTEX_A15 )
C:/acados/external/blasfeo/CMakeLists.txt(920):  if(${TARGET} MATCHES ARMV7A_ARM_CORTEX_A7 )
C:/acados/external/blasfeo/CMakeLists.txt(955):  if(${TARGET} MATCHES ARMV7A_ARM_CORTEX_A9 )
C:/acados/external/blasfeo/CMakeLists.txt(990):  if(${TARGET} MATCHES GENERIC )
C:/acados/external/blasfeo/CMakeLists.txt(992):  file(GLOB KERNEL_SRC ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_dgemm_4x4_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_dgemm_diag_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_dgemv_4_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_dsymv_4_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_dgecp_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_dgetr_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_dgetrf_pivot_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_dgeqrf_4_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_dpack_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_ddot_lib.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_daxpy_lib.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_sgemm_4x4_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_sgemm_diag_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_sgemv_4_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_ssymv_4_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_sgetrf_pivot_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_sgecp_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_sgetr_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_spack_lib4.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_sdot_lib.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_saxpy_lib.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_align_generic.c ${PROJECT_SOURCE_DIR}/kernel/generic/kernel_d_aux_lib.c )
C:/acados/external/blasfeo/CMakeLists.txt(1025):  set(BLASFEO_SRC ${AUX_COMMON_SRC} )
C:/acados/external/blasfeo/CMakeLists.txt(1027):  if(${LA} MATCHES HIGH_PERFORMANCE )
C:/acados/external/blasfeo/CMakeLists.txt(1029):  list(APPEND BLASFEO_SRC ${KERNEL_SRC} )
C:/acados/external/blasfeo/CMakeLists.txt(1031):  if(${MF} MATCHES PANELMAJ )
C:/acados/external/blasfeo/CMakeLists.txt(1033):  list(APPEND BLASFEO_SRC ${AUX_HP_PM_SRC} )
C:/acados/external/blasfeo/CMakeLists.txt(1034):  list(APPEND BLASFEO_SRC ${BLASFEO_HP_PM_SRC} )
C:/acados/external/blasfeo/CMakeLists.txt(1044):  if(${BLASFEO_REF_API} )
C:/acados/external/blasfeo/CMakeLists.txt(1051):  if(${BLAS_API} )
C:/acados/external/blasfeo/CMakeLists.txt(1067):  if(${LA} MATCHES REFERENCE )
C:/acados/external/blasfeo/CMakeLists.txt(1105):  if(${EXT_DEP} )
C:/acados/external/blasfeo/CMakeLists.txt(1120):  add_library(blasfeo ${BLASFEO_SRC} )
C:/acados/external/blasfeo/CMakeLists.txt(1127):  if(SOC MATCHES XILINX )
C:/acados/external/blasfeo/CMakeLists.txt(1149):  set(PPC_STDINCL1 D:/MSA/dSPACERCPHIL2017-B/Compiler/PPCTools )
C:/acados/external/blasfeo/CMakeLists.txt(1150):  set(PPC_STDINCL2 D:/MSA/dSPACERCPHIL2017-B/Compiler/PPCTools/inc )
C:/acados/external/blasfeo/CMakeLists.txt(1151):  set(PPC_STDINCL3 D:/MSA/dSPACERCPHIL2017-B/Compiler/x86Tools )
C:/acados/external/blasfeo/CMakeLists.txt(1152):  set(PPC_STDINCL4 C:/Program Files/Common Files/dSPACE/GCC/5.2/x86_64-w64-mingw32/include )
C:/acados/external/blasfeo/CMakeLists.txt(1156):  target_include_directories(blasfeo PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include> $<INSTALL_INTERFACE:${BLASFEO_HEADERS_INSTALLATION_DIRECTORY}> )
C:/acados/external/blasfeo/CMakeLists.txt(1163):  install(TARGETS blasfeo EXPORT blasfeoConfig LIBRARY DESTINATION lib ARCHIVE DESTINATION lib RUNTIME DESTINATION bin )
C:/acados/external/blasfeo/CMakeLists.txt(1169):  install(EXPORT blasfeoConfig DESTINATION cmake )
C:/acados/external/blasfeo/CMakeLists.txt(1171):  file(GLOB_RECURSE BLASFEO_HEADERS include/*.h )
C:/acados/external/blasfeo/CMakeLists.txt(1172):  install(FILES ${BLASFEO_HEADERS} DESTINATION ${BLASFEO_HEADERS_INSTALLATION_DIRECTORY} )
C:/acados/external/blasfeo/CMakeLists.txt(1175):  if(BLASFEO_TESTING MATCHES ON )
C:/acados/external/blasfeo/CMakeLists.txt(1180):  if(BLASFEO_BENCHMARKS MATCHES ON )
C:/acados/external/blasfeo/CMakeLists.txt(1185):  if(BLASFEO_EXAMPLES MATCHES ON )
C:/acados/external/CMakeLists.txt(35):  set(HPIPM_BLASFEO_PATH ${BLASFEO_SRC_DIR} CACHE STRING Set CPU architecture target FORCE )
C:/acados/external/CMakeLists.txt(37):  set(HPIPM_BLASFEO_LIB OFF CACHE BOOL Turn off BLASFEO from HPIPM FORCE )
C:/acados/external/CMakeLists.txt(38):  set(HPIPM_HEADERS_INSTALLATION_DIRECTORY include/hpipm/include CACHE STRING  )
C:/acados/external/CMakeLists.txt(39):  set(TARGET ${HPIPM_TARGET} CACHE STRING Set CPU architecture target FORCE )
C:/acados/external/CMakeLists.txt(40):  set(HPIPM_TESTING OFF CACHE BOOL Tests disabled FORCE )
C:/acados/external/CMakeLists.txt(41):  add_subdirectory(hpipm )
C:/acados/external/hpipm/CMakeLists.txt(36):  cmake_minimum_required(VERSION 2.8.11 )
C:/acados/external/hpipm/CMakeLists.txt(39):  set(CMAKE_INSTALL_PREFIX /opt/hpipm CACHE STRING Installation path )
C:/acados/external/hpipm/CMakeLists.txt(41):  project(hpipm C )
C:/acados/external/hpipm/CMakeLists.txt(43):  set(CMAKE_VERBOSE_MAKEFILE ON )
C:/acados/external/hpipm/CMakeLists.txt(48):  set(TARGET AVX CACHE STRING Set CPU architecture target )
C:/acados/external/hpipm/CMakeLists.txt(52):  set(ALLOWED_TARGETS AVX GENERIC )
C:/acados/external/hpipm/CMakeLists.txt(56):  set_property(CACHE TARGET PROPERTY STRINGS ${ALLOWED_TARGETS} )
C:/acados/external/hpipm/CMakeLists.txt(59):  set(USE_C99_MATH ON CACHE STRING Use C99 extension to math library )
C:/acados/external/hpipm/CMakeLists.txt(62):  set(REF_BLAS 0 CACHE STRING Set CPU architecture target )
C:/acados/external/hpipm/CMakeLists.txt(70):  set(ALLOWED_REF_BLAS 0 OPENBLAS NETLIB MKL BLIS ATLAS )
C:/acados/external/hpipm/CMakeLists.txt(78):  set_property(CACHE REF_BLAS PROPERTY STRINGS ${ALLOWED_REF_BLAS} )
C:/acados/external/hpipm/CMakeLists.txt(80):  set(HPIPM_TESTING ON CACHE BOOL Tests enabled )
C:/acados/external/hpipm/CMakeLists.txt(84):  set(BUILD_SHARED_LIBS OFF CACHE STRING Build shared libraries )
C:/acados/external/hpipm/CMakeLists.txt(88):  if(NOT ${CMAKE_PROJECT_NAME} STREQUAL hpipm )
C:/acados/external/hpipm/CMakeLists.txt(89):  set(HPIPM_ALLOWED_TARGETS ${ALLOWED_TARGETS} PARENT_SCOPE )
C:/acados/external/hpipm/CMakeLists.txt(90):  set(HPIPM_ALLOWED_REF_BLAS ${ALLOWED_REF_BLAS} PARENT_SCOPE )
C:/acados/external/hpipm/CMakeLists.txt(94):  if(NOT TARGET blasfeo )
C:/acados/external/hpipm/CMakeLists.txt(120):  set(BLASFEO_INCLUDE_DIR ${BLASFEO_PATH}/include CACHE STRING Path to BLASFEO header files. )
C:/acados/external/hpipm/CMakeLists.txt(121):  set(HPIPM_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/include )
C:/acados/external/hpipm/CMakeLists.txt(124):  set(HPIPM_HEADERS_INSTALLATION_DIRECTORY include CACHE STRING Headers local installation directory )
C:/acados/external/hpipm/CMakeLists.txt(127):  set(RUNTIME_CHECKS ON )
C:/acados/external/hpipm/CMakeLists.txt(132):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -J D:/MSA/acados )
C:/acados/external/hpipm/CMakeLists.txt(133):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -J D:/MSA/acados/external/blasfeo/include )
C:/acados/external/hpipm/CMakeLists.txt(134):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -J D:/MSA/acados/external/hpipm/include )
C:/acados/external/hpipm/CMakeLists.txt(135):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -J D:/MSA/acados/include/blasfeo/include )
C:/acados/external/hpipm/CMakeLists.txt(139):  if(CMAKE_C_COMPILER_ID STREQUAL GNU OR CMAKE_C_COMPILER_ID STREQUAL Clang )
C:/acados/external/hpipm/CMakeLists.txt(144):  if(${TARGET} MATCHES AVX )
C:/acados/external/hpipm/CMakeLists.txt(149):  elseif(${TARGET} MATCHES GENERIC )
C:/acados/external/hpipm/CMakeLists.txt(150):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -DTARGET_GENERIC )
C:/acados/external/hpipm/CMakeLists.txt(154):  if(${REF_BLAS} MATCHES 0 )
C:/acados/external/hpipm/CMakeLists.txt(155):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS}  )
C:/acados/external/hpipm/CMakeLists.txt(157):  if(${REF_BLAS} MATCHES OPENBLAS )
C:/acados/external/hpipm/CMakeLists.txt(160):  if(${REF_BLAS} MATCHES BLIS )
C:/acados/external/hpipm/CMakeLists.txt(163):  if(${REF_BLAS} MATCHES NETLIB )
C:/acados/external/hpipm/CMakeLists.txt(166):  if(${REF_BLAS} MATCHES MKL )
C:/acados/external/hpipm/CMakeLists.txt(169):  if(${REF_BLAS} MATCHES ATLAS )
C:/acados/external/hpipm/CMakeLists.txt(174):  if(${USE_C99_MATH} MATCHES ON )
C:/acados/external/hpipm/CMakeLists.txt(179):  if(${RUNTIME_CHECKS} MATCHES ON )
C:/acados/external/hpipm/CMakeLists.txt(180):  set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -DRUNTIME_CHECKS )
C:/acados/external/hpipm/CMakeLists.txt(185):  file(GLOB COND_SRC ${PROJECT_SOURCE_DIR}/cond/d_cond.c ${PROJECT_SOURCE_DIR}/cond/d_cond_aux.c ${PROJECT_SOURCE_DIR}/cond/d_part_cond.c ${PROJECT_SOURCE_DIR}/cond/d_cond_qcqp.c ${PROJECT_SOURCE_DIR}/cond/d_cast_qcqp.c ${PROJECT_SOURCE_DIR}/cond/d_part_cond_qcqp.c ${PROJECT_SOURCE_DIR}/cond/s_cond.c ${PROJECT_SOURCE_DIR}/cond/s_cond_aux.c ${PROJECT_SOURCE_DIR}/cond/s_part_cond.c ${PROJECT_SOURCE_DIR}/cond/s_cond_qcqp.c ${PROJECT_SOURCE_DIR}/cond/s_cast_qcqp.c ${PROJECT_SOURCE_DIR}/cond/s_part_cond_qcqp.c )
C:/acados/external/hpipm/CMakeLists.txt(202):  file(GLOB DENSE_QP_SRC ${PROJECT_SOURCE_DIR}/dense_qp/d_dense_qp.c ${PROJECT_SOURCE_DIR}/dense_qp/d_dense_qp_dim.c ${PROJECT_SOURCE_DIR}/dense_qp/d_dense_qp_sol.c ${PROJECT_SOURCE_DIR}/dense_qp/d_dense_qp_kkt.c ${PROJECT_SOURCE_DIR}/dense_qp/d_dense_qp_ipm.c ${PROJECT_SOURCE_DIR}/dense_qp/d_dense_qp_res.c ${PROJECT_SOURCE_DIR}/dense_qp/d_dense_qp_utils.c ${PROJECT_SOURCE_DIR}/dense_qp/d_dense_qcqp_dim.c ${PROJECT_SOURCE_DIR}/dense_qp/d_dense_qcqp.c ${PROJECT_SOURCE_DIR}/dense_qp/d_dense_qcqp_sol.c ${PROJECT_SOURCE_DIR}/dense_qp/d_dense_qcqp_res.c ${PROJECT_SOURCE_DIR}/dense_qp/d_dense_qcqp_ipm.c ${PROJECT_SOURCE_DIR}/dense_qp/d_dense_qcqp_utils.c ${PROJECT_SOURCE_DIR}/dense_qp/s_dense_qp.c ${PROJECT_SOURCE_DIR}/dense_qp/s_dense_qp_dim.c ${PROJECT_SOURCE_DIR}/dense_qp/s_dense_qp_sol.c ${PROJECT_SOURCE_DIR}/dense_qp/s_dense_qp_kkt.c ${PROJECT_SOURCE_DIR}/dense_qp/s_dense_qp_ipm.c ${PROJECT_SOURCE_DIR}/dense_qp/s_dense_qp_res.c ${PROJECT_SOURCE_DIR}/dense_qp/s_dense_qp_utils.c ${PROJECT_SOURCE_DIR}/dense_qp/s_dense_qcqp_dim.c ${PROJECT_SOURCE_DIR}/dense_qp/s_dense_qcqp.c ${PROJECT_SOURCE_DIR}/dense_qp/s_dense_qcqp_sol.c ${PROJECT_SOURCE_DIR}/dense_qp/s_dense_qcqp_res.c ${PROJECT_SOURCE_DIR}/dense_qp/s_dense_qcqp_ipm.c ${PROJECT_SOURCE_DIR}/dense_qp/s_dense_qcqp_utils.c )
C:/acados/external/hpipm/CMakeLists.txt(233):  if(${TARGET} MATCHES AVX )
C:/acados/external/hpipm/CMakeLists.txt(240):  else(${TARGET} MATCHES AVX )
C:/acados/external/hpipm/CMakeLists.txt(241):  file(GLOB IPM_CORE_SRC ${PROJECT_SOURCE_DIR}/ipm_core/d_core_qp_ipm_aux.c ${PROJECT_SOURCE_DIR}/ipm_core/d_core_qp_ipm.c ${PROJECT_SOURCE_DIR}/ipm_core/s_core_qp_ipm_aux.c ${PROJECT_SOURCE_DIR}/ipm_core/s_core_qp_ipm.c )
C:/acados/external/hpipm/CMakeLists.txt(249):  file(GLOB OCP_QP_SRC ${PROJECT_SOURCE_DIR}/ocp_qp/d_ocp_qp.c ${PROJECT_SOURCE_DIR}/ocp_qp/d_ocp_qp_dim.c ${PROJECT_SOURCE_DIR}/ocp_qp/d_ocp_qp_sol.c ${PROJECT_SOURCE_DIR}/ocp_qp/d_ocp_qp_kkt.c ${PROJECT_SOURCE_DIR}/ocp_qp/d_ocp_qp_ipm.c ${PROJECT_SOURCE_DIR}/ocp_qp/d_ocp_qp_res.c ${PROJECT_SOURCE_DIR}/ocp_qp/d_ocp_qp_utils.c ${PROJECT_SOURCE_DIR}/ocp_qp/d_ocp_qp_red.c ${PROJECT_SOURCE_DIR}/ocp_qp/d_ocp_qcqp.c ${PROJECT_SOURCE_DIR}/ocp_qp/d_ocp_qcqp_dim.c ${PROJECT_SOURCE_DIR}/ocp_qp/d_ocp_qcqp_sol.c ${PROJECT_SOURCE_DIR}/ocp_qp/d_ocp_qcqp_ipm.c ${PROJECT_SOURCE_DIR}/ocp_qp/d_ocp_qcqp_res.c ${PROJECT_SOURCE_DIR}/ocp_qp/d_ocp_qcqp_utils.c ${PROJECT_SOURCE_DIR}/ocp_qp/s_ocp_qp.c ${PROJECT_SOURCE_DIR}/ocp_qp/s_ocp_qp_dim.c ${PROJECT_SOURCE_DIR}/ocp_qp/s_ocp_qp_sol.c ${PROJECT_SOURCE_DIR}/ocp_qp/s_ocp_qp_kkt.c ${PROJECT_SOURCE_DIR}/ocp_qp/s_ocp_qp_ipm.c ${PROJECT_SOURCE_DIR}/ocp_qp/s_ocp_qp_res.c ${PROJECT_SOURCE_DIR}/ocp_qp/s_ocp_qp_utils.c ${PROJECT_SOURCE_DIR}/ocp_qp/s_ocp_qp_red.c ${PROJECT_SOURCE_DIR}/ocp_qp/s_ocp_qcqp.c ${PROJECT_SOURCE_DIR}/ocp_qp/s_ocp_qcqp_dim.c ${PROJECT_SOURCE_DIR}/ocp_qp/s_ocp_qcqp_sol.c ${PROJECT_SOURCE_DIR}/ocp_qp/s_ocp_qcqp_ipm.c ${PROJECT_SOURCE_DIR}/ocp_qp/s_ocp_qcqp_res.c ${PROJECT_SOURCE_DIR}/ocp_qp/s_ocp_qcqp_utils.c )
C:/acados/external/hpipm/CMakeLists.txt(285):  file(GLOB TREE_OCP_QP_SRC ${PROJECT_SOURCE_DIR}/tree_ocp_qp/scenario_tree.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/d_tree_ocp_qp_dim.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/d_tree_ocp_qp.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/d_tree_ocp_qp_sol.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/d_tree_ocp_qp_res.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/d_tree_ocp_qp_kkt.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/d_tree_ocp_qp_ipm.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/d_tree_ocp_qp_utils.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/d_tree_ocp_qcqp_dim.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/d_tree_ocp_qcqp.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/d_tree_ocp_qcqp_sol.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/d_tree_ocp_qcqp_res.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/d_tree_ocp_qcqp_ipm.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/d_tree_ocp_qcqp_utils.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/s_tree_ocp_qp_dim.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/s_tree_ocp_qp.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/s_tree_ocp_qp_sol.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/s_tree_ocp_qp_res.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/s_tree_ocp_qp_kkt.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/s_tree_ocp_qp_ipm.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/s_tree_ocp_qp_utils.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/s_tree_ocp_qcqp_dim.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/s_tree_ocp_qcqp.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/s_tree_ocp_qcqp_sol.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/s_tree_ocp_qcqp_res.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/s_tree_ocp_qcqp_ipm.c ${PROJECT_SOURCE_DIR}/tree_ocp_qp/s_tree_ocp_qcqp_utils.c )
C:/acados/external/hpipm/CMakeLists.txt(318):  file(GLOB AUXILIARY_SRC ${PROJECT_SOURCE_DIR}/auxiliary/aux_string.c ${PROJECT_SOURCE_DIR}/auxiliary/aux_mem.c ${PROJECT_SOURCE_DIR}/auxiliary/timing.c )
C:/acados/external/hpipm/CMakeLists.txt(324):  file(GLOB SIM_SRC ${PROJECT_SOURCE_DIR}/sim_core/d_sim_rk.c ${PROJECT_SOURCE_DIR}/sim_core/d_sim_erk.c ${PROJECT_SOURCE_DIR}/sim_core/s_sim_rk.c ${PROJECT_SOURCE_DIR}/sim_core/s_sim_erk.c )
C:/acados/external/hpipm/CMakeLists.txt(333):  set(HPIPM_SRC ${COND_SRC} ${DENSE_QP_SRC} ${IPM_CORE_SRC} ${OCP_QP_SRC} ${TREE_OCP_QP_SRC} ${AUXILIARY_SRC} )
C:/acados/external/hpipm/CMakeLists.txt(335):  add_library(hpipm ${HPIPM_SRC} )
C:/acados/external/hpipm/CMakeLists.txt(337):  target_include_directories(hpipm PUBLIC $<BUILD_INTERFACE:${HPIPM_INCLUDE_DIR}> $<BUILD_INTERFACE:${BLASFEO_INCLUDE_DIR}> $<INSTALL_INTERFACE:${HPIPM_HEADERS_INSTALLATION_DIRECTORY}> )
C:/acados/external/hpipm/CMakeLists.txt(343):  target_link_libraries(hpipm blasfeo )
C:/acados/external/hpipm/CMakeLists.txt(345):  install(TARGETS hpipm EXPORT hpipmConfig LIBRARY DESTINATION lib ARCHIVE DESTINATION lib RUNTIME DESTINATION bin )
C:/acados/external/hpipm/CMakeLists.txt(350):  install(EXPORT hpipmConfig DESTINATION cmake )
C:/acados/external/hpipm/CMakeLists.txt(352):  file(GLOB_RECURSE HPIPM_HEADERS include/*.h )
C:/acados/external/hpipm/CMakeLists.txt(353):  install(FILES ${HPIPM_HEADERS} DESTINATION ${HPIPM_HEADERS_INSTALLATION_DIRECTORY} )
C:/acados/external/hpipm/CMakeLists.txt(356):  if(HPIPM_TESTING MATCHES ON )
C:/acados/external/hpipm/CMakeLists.txt(361):  message(STATUS Using BLASFEO path: ${BLASFEO_PATH} )
C:/acados/external/hpipm/CMakeLists.txt(362):  message(STATUS Installation directory: ${CMAKE_INSTALL_PREFIX} )
C:/acados/external/CMakeLists.txt(43):  if(ACADOS_WITH_HPMPC )
C:/acados/external/CMakeLists.txt(50):  if(ACADOS_WITH_QORE )
C:/acados/external/CMakeLists.txt(55):  if(ACADOS_WITH_QPDUNES )
C:/acados/external/CMakeLists.txt(59):  if(ACADOS_WITH_QPOASES )
C:/acados/external/CMakeLists.txt(63):  if(ACADOS_WITH_OSQP )
C:/acados/external/CMakeLists.txt(69):  if(ACADOS_WITH_OOQP )
C:/acados/CMakeLists.txt(244):  if(ACADOS_EXAMPLES )
C:/acados/CMakeLists.txt(249):  if(ACADOS_UNIT_TESTS )
C:/acados/CMakeLists.txt(254):  if(ACADOS_LINT )
C:/acados/CMakeLists.txt(256):  else()
C:/acados/CMakeLists.txt(257):  add_custom_target(lint echo Lint is disabled )
C:/acados/CMakeLists.txt(261):  message(STATUS   )
C:/acados/CMakeLists.txt(262):  message(STATUS Target: BLASFEO is ${BLASFEO_TARGET}, HPIPM is ${HPIPM_TARGET} )
C:/acados/CMakeLists.txt(263):  message(STATUS Linear algebra: ${LA} )
C:/acados/CMakeLists.txt(264):  message(STATUS Matlab MEX (${ACADOS_MATLAB}) )
C:/acados/CMakeLists.txt(265):  message(STATUS Octave MEX (${ACADOS_OCTAVE}) )
C:/acados/CMakeLists.txt(266):  message(STATUS Octave Templates (${ACADOS_OCTAVE_TEMPLATE}) )
C:/acados/CMakeLists.txt(267):  message(STATUS System name:version ${CMAKE_SYSTEM_NAME}:${CMAKE_SYSTEM_VERSION} )
C:/acados/CMakeLists.txt(268):  message(STATUS Build type is ${CMAKE_BUILD_TYPE} )
C:/acados/CMakeLists.txt(269):  message(STATUS Installation directory is ${CMAKE_INSTALL_PREFIX} )
C:/acados/CMakeLists.txt(270):  if(ACADOS_WITH_OPENMP )
C:/acados/CMakeLists.txt(277):  else()
C:/acados/CMakeLists.txt(278):  message(STATUS OpenMP parallelization is OFF )
C:/acados/CMakeLists.txt(281):  message(STATUS   )
